// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/json_format.proto

#include <google/protobuf/util/json_format.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2fjson_5fformat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto;
namespace google {
namespace protobuf {
class TestFlagsAndStrings_RepeatedGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestFlagsAndStrings_RepeatedGroup> _instance;
} _TestFlagsAndStrings_RepeatedGroup_default_instance_;
class TestFlagsAndStringsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestFlagsAndStrings> _instance;
} _TestFlagsAndStrings_default_instance_;
class TestBase64ByteArraysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestBase64ByteArrays> _instance;
} _TestBase64ByteArrays_default_instance_;
class TestJavaScriptJSONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestJavaScriptJSON> _instance;
} _TestJavaScriptJSON_default_instance_;
class TestJavaScriptOrderJSON1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestJavaScriptOrderJSON1> _instance;
} _TestJavaScriptOrderJSON1_default_instance_;
class TestJavaScriptOrderJSON2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestJavaScriptOrderJSON2> _instance;
} _TestJavaScriptOrderJSON2_default_instance_;
class TestLargeIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestLargeInt> _instance;
} _TestLargeInt_default_instance_;
class TestNumbersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestNumbers> _instance;
} _TestNumbers_default_instance_;
class TestCamelCaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestCamelCase> _instance;
} _TestCamelCase_default_instance_;
class TestBoolMap_BoolMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestBoolMap_BoolMapEntry_DoNotUse> _instance;
} _TestBoolMap_BoolMapEntry_DoNotUse_default_instance_;
class TestBoolMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestBoolMap> _instance;
} _TestBoolMap_default_instance_;
class TestRecursionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestRecursion> _instance;
} _TestRecursion_default_instance_;
class TestStringMap_StringMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestStringMap_StringMapEntry_DoNotUse> _instance;
} _TestStringMap_StringMapEntry_DoNotUse_default_instance_;
class TestStringMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestStringMap> _instance;
} _TestStringMap_default_instance_;
}  // namespace protobuf
}  // namespace google
static void InitDefaultsTestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestFlagsAndStrings_RepeatedGroup_default_instance_;
    new (ptr) ::google::protobuf::TestFlagsAndStrings_RepeatedGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestFlagsAndStrings_RepeatedGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestFlagsAndStrings_default_instance_;
    new (ptr) ::google::protobuf::TestFlagsAndStrings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestFlagsAndStrings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {
      &scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base,}};

static void InitDefaultsTestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestBase64ByteArrays_default_instance_;
    new (ptr) ::google::protobuf::TestBase64ByteArrays();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestBase64ByteArrays::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestJavaScriptJSON_default_instance_;
    new (ptr) ::google::protobuf::TestJavaScriptJSON();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestJavaScriptJSON::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestJavaScriptOrderJSON1_default_instance_;
    new (ptr) ::google::protobuf::TestJavaScriptOrderJSON1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestJavaScriptOrderJSON1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestJavaScriptOrderJSON2_default_instance_;
    new (ptr) ::google::protobuf::TestJavaScriptOrderJSON2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestJavaScriptOrderJSON2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {
      &scc_info_TestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base,}};

static void InitDefaultsTestLargeInt_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestLargeInt_default_instance_;
    new (ptr) ::google::protobuf::TestLargeInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestLargeInt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestLargeInt_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestLargeInt_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestNumbers_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestNumbers_default_instance_;
    new (ptr) ::google::protobuf::TestNumbers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestNumbers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestNumbers_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestNumbers_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestCamelCase_default_instance_;
    new (ptr) ::google::protobuf::TestCamelCase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestCamelCase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestBoolMap_BoolMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse();
  }
  ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestBoolMap_default_instance_;
    new (ptr) ::google::protobuf::TestBoolMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestBoolMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {
      &scc_info_TestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base,}};

static void InitDefaultsTestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestRecursion_default_instance_;
    new (ptr) ::google::protobuf::TestRecursion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestRecursion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestStringMap_StringMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse();
  }
  ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {}};

static void InitDefaultsTestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::_TestStringMap_default_instance_;
    new (ptr) ::google::protobuf::TestStringMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::TestStringMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto}, {
      &scc_info_TestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base,}};

void InitDefaults_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestLargeInt_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestNumbers_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestBoolMap_BoolMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestStringMap_StringMapEntry_DoNotUse_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings_RepeatedGroup, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings_RepeatedGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings_RepeatedGroup, f_),
  0,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings, a_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestFlagsAndStrings, repeatedgroup_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBase64ByteArrays, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBase64ByteArrays, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBase64ByteArrays, a_),
  0,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, a_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, final_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, in_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptJSON, var_),
  2,
  3,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, d_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, c_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, x_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, b_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON1, a_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, d_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, c_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, x_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, b_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, a_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestJavaScriptOrderJSON2, z_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestLargeInt, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestLargeInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestLargeInt, a_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestLargeInt, b_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, a_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, b_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, c_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, d_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, e_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestNumbers, f_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestCamelCase, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestCamelCase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestCamelCase, normal_field_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestCamelCase, capital_field_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestCamelCase, camelcasefield_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestBoolMap, bool_map_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestRecursion, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestRecursion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestRecursion, value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestRecursion, child_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap_StringMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap_StringMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap_StringMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap_StringMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::TestStringMap, string_map_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::google::protobuf::TestFlagsAndStrings_RepeatedGroup)},
  { 7, 14, sizeof(::google::protobuf::TestFlagsAndStrings)},
  { 16, 22, sizeof(::google::protobuf::TestBase64ByteArrays)},
  { 23, 32, sizeof(::google::protobuf::TestJavaScriptJSON)},
  { 36, 46, sizeof(::google::protobuf::TestJavaScriptOrderJSON1)},
  { 51, 62, sizeof(::google::protobuf::TestJavaScriptOrderJSON2)},
  { 68, 75, sizeof(::google::protobuf::TestLargeInt)},
  { 77, 88, sizeof(::google::protobuf::TestNumbers)},
  { 94, 102, sizeof(::google::protobuf::TestCamelCase)},
  { 105, 112, sizeof(::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse)},
  { 114, 120, sizeof(::google::protobuf::TestBoolMap)},
  { 121, 128, sizeof(::google::protobuf::TestRecursion)},
  { 130, 137, sizeof(::google::protobuf::TestStringMap_StringMapEntry_DoNotUse)},
  { 139, 145, sizeof(::google::protobuf::TestStringMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestFlagsAndStrings_RepeatedGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestFlagsAndStrings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestBase64ByteArrays_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestJavaScriptJSON_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestJavaScriptOrderJSON1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestJavaScriptOrderJSON2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestLargeInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestNumbers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestCamelCase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestBoolMap_BoolMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestBoolMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestRecursion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestStringMap_StringMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::_TestStringMap_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto = {
  {}, AddDescriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, "google/protobuf/util/json_format.proto", schemas,
  file_default_instances, TableStruct_google_2fprotobuf_2futil_2fjson_5fformat_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, 14, file_level_enum_descriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, file_level_service_descriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto,
};

const char descriptor_table_protodef_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[] =
  "\n&google/protobuf/util/json_format.proto"
  "\022\017google.protobuf\"\207\001\n\023TestFlagsAndString"
  "s\022\t\n\001A\030\001 \002(\005\022I\n\rrepeatedgroup\030\002 \003(\n22.go"
  "ogle.protobuf.TestFlagsAndStrings.Repeat"
  "edGroup\032\032\n\rRepeatedGroup\022\t\n\001f\030\003 \002(\t\"!\n\024T"
  "estBase64ByteArrays\022\t\n\001a\030\001 \002(\014\"G\n\022TestJa"
  "vaScriptJSON\022\t\n\001a\030\001 \001(\005\022\r\n\005final\030\002 \001(\002\022\n"
  "\n\002in\030\003 \001(\t\022\013\n\003Var\030\004 \001(\t\"Q\n\030TestJavaScrip"
  "tOrderJSON1\022\t\n\001d\030\001 \001(\005\022\t\n\001c\030\002 \001(\005\022\t\n\001x\030\003"
  " \001(\010\022\t\n\001b\030\004 \001(\005\022\t\n\001a\030\005 \001(\005\"\207\001\n\030TestJavaS"
  "criptOrderJSON2\022\t\n\001d\030\001 \001(\005\022\t\n\001c\030\002 \001(\005\022\t\n"
  "\001x\030\003 \001(\010\022\t\n\001b\030\004 \001(\005\022\t\n\001a\030\005 \001(\005\0224\n\001z\030\006 \003("
  "\0132).google.protobuf.TestJavaScriptOrderJ"
  "SON1\"$\n\014TestLargeInt\022\t\n\001a\030\001 \002(\003\022\t\n\001b\030\002 \002"
  "(\004\"\236\001\n\013TestNumbers\022.\n\001a\030\001 \001(\0162#.google.p"
  "rotobuf.TestNumbers.MyType\022\t\n\001b\030\002 \001(\005\022\t\n"
  "\001c\030\003 \001(\002\022\t\n\001d\030\004 \001(\010\022\t\n\001e\030\005 \001(\001\022\t\n\001f\030\006 \001("
  "\r\"(\n\006MyType\022\006\n\002OK\020\000\022\013\n\007WARNING\020\001\022\t\n\005ERRO"
  "R\020\002\"T\n\rTestCamelCase\022\024\n\014normal_field\030\001 \001"
  "(\t\022\025\n\rCAPITAL_FIELD\030\002 \001(\005\022\026\n\016CamelCaseFi"
  "eld\030\003 \001(\005\"z\n\013TestBoolMap\022;\n\010bool_map\030\001 \003"
  "(\0132).google.protobuf.TestBoolMap.BoolMap"
  "Entry\032.\n\014BoolMapEntry\022\013\n\003key\030\001 \001(\010\022\r\n\005va"
  "lue\030\002 \001(\005:\0028\001\"M\n\rTestRecursion\022\r\n\005value\030"
  "\001 \001(\005\022-\n\005child\030\002 \001(\0132\036.google.protobuf.T"
  "estRecursion\"\204\001\n\rTestStringMap\022A\n\nstring"
  "_map\030\001 \003(\0132-.google.protobuf.TestStringM"
  "ap.StringMapEntry\0320\n\016StringMapEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto = {
  false, InitDefaults_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, 
  descriptor_table_protodef_google_2fprotobuf_2futil_2fjson_5fformat_2eproto,
  "google/protobuf/util/json_format.proto", &assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, 1147,
};

void AddDescriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2futil_2fjson_5fformat_2eproto = []() { AddDescriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto(); return true; }();
namespace google {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* TestNumbers_MyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return file_level_enum_descriptors_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[0];
}
bool TestNumbers_MyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestNumbers_MyType TestNumbers::OK;
const TestNumbers_MyType TestNumbers::WARNING;
const TestNumbers_MyType TestNumbers::ERROR;
const TestNumbers_MyType TestNumbers::MyType_MIN;
const TestNumbers_MyType TestNumbers::MyType_MAX;
const int TestNumbers::MyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TestFlagsAndStrings_RepeatedGroup::InitAsDefaultInstance() {
}
class TestFlagsAndStrings_RepeatedGroup::HasBitSetters {
 public:
  static void set_has_f(TestFlagsAndStrings_RepeatedGroup* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestFlagsAndStrings_RepeatedGroup::kFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestFlagsAndStrings_RepeatedGroup::TestFlagsAndStrings_RepeatedGroup()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
}
TestFlagsAndStrings_RepeatedGroup::TestFlagsAndStrings_RepeatedGroup(const TestFlagsAndStrings_RepeatedGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_f()) {
    f_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_);
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
}

void TestFlagsAndStrings_RepeatedGroup::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  f_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestFlagsAndStrings_RepeatedGroup::~TestFlagsAndStrings_RepeatedGroup() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  SharedDtor();
}

void TestFlagsAndStrings_RepeatedGroup::SharedDtor() {
  f_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestFlagsAndStrings_RepeatedGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestFlagsAndStrings_RepeatedGroup& TestFlagsAndStrings_RepeatedGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestFlagsAndStrings_RepeatedGroup_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestFlagsAndStrings_RepeatedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    f_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestFlagsAndStrings_RepeatedGroup::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestFlagsAndStrings_RepeatedGroup*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string f = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.TestFlagsAndStrings.RepeatedGroup.f");
        object = msg->mutable_f();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestFlagsAndStrings_RepeatedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string f = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->f().data(), static_cast<int>(this->f().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestFlagsAndStrings.RepeatedGroup.f");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          input->SetLastTag(tag);
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestFlagsAndStrings_RepeatedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string f = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->f().data(), static_cast<int>(this->f().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestFlagsAndStrings.RepeatedGroup.f");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->f(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
}

::google::protobuf::uint8* TestFlagsAndStrings_RepeatedGroup::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string f = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->f().data(), static_cast<int>(this->f().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestFlagsAndStrings.RepeatedGroup.f");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->f(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  return target;
}

size_t TestFlagsAndStrings_RepeatedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string f = 3;
  if (has_f()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->f());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestFlagsAndStrings_RepeatedGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const TestFlagsAndStrings_RepeatedGroup* source =
      ::google::protobuf::DynamicCastToGenerated<TestFlagsAndStrings_RepeatedGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
    MergeFrom(*source);
  }
}

void TestFlagsAndStrings_RepeatedGroup::MergeFrom(const TestFlagsAndStrings_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_f()) {
    _has_bits_[0] |= 0x00000001u;
    f_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_);
  }
}

void TestFlagsAndStrings_RepeatedGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFlagsAndStrings_RepeatedGroup::CopyFrom(const TestFlagsAndStrings_RepeatedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestFlagsAndStrings.RepeatedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFlagsAndStrings_RepeatedGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TestFlagsAndStrings_RepeatedGroup::Swap(TestFlagsAndStrings_RepeatedGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestFlagsAndStrings_RepeatedGroup::InternalSwap(TestFlagsAndStrings_RepeatedGroup* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  f_.Swap(&other->f_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TestFlagsAndStrings_RepeatedGroup::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestFlagsAndStrings::InitAsDefaultInstance() {
}
class TestFlagsAndStrings::HasBitSetters {
 public:
  static void set_has_a(TestFlagsAndStrings* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestFlagsAndStrings::kAFieldNumber;
const int TestFlagsAndStrings::kRepeatedgroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestFlagsAndStrings::TestFlagsAndStrings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestFlagsAndStrings)
}
TestFlagsAndStrings::TestFlagsAndStrings(const TestFlagsAndStrings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      repeatedgroup_(from.repeatedgroup_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  a_ = from.a_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestFlagsAndStrings)
}

void TestFlagsAndStrings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  a_ = 0;
}

TestFlagsAndStrings::~TestFlagsAndStrings() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestFlagsAndStrings)
  SharedDtor();
}

void TestFlagsAndStrings::SharedDtor() {
}

void TestFlagsAndStrings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestFlagsAndStrings& TestFlagsAndStrings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestFlagsAndStrings_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestFlagsAndStrings::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestFlagsAndStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repeatedgroup_.Clear();
  a_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestFlagsAndStrings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestFlagsAndStrings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int32 A = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated group RepeatedGroup = 2 { ... };
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 19) goto handle_unusual;
        do {
          parser_till_end = ::google::protobuf::TestFlagsAndStrings_RepeatedGroup::_InternalParse;
          object = msg->add_repeatedgroup();
          auto res = ctx->ParseGroup(tag, {parser_till_end, object}, ptr, end, &depth);
          ptr = res.first;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (res.second) goto group_continues;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 19 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
group_continues:
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup(
      {_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestFlagsAndStrings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestFlagsAndStrings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 A = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated group RepeatedGroup = 2 { ... };
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (19 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroup(2, input, add_repeatedgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestFlagsAndStrings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestFlagsAndStrings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestFlagsAndStrings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestFlagsAndStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 A = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // repeated group RepeatedGroup = 2 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeatedgroup_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      2,
      this->repeatedgroup(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestFlagsAndStrings)
}

::google::protobuf::uint8* TestFlagsAndStrings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestFlagsAndStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 A = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // repeated group RepeatedGroup = 2 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeatedgroup_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteGroupToArray(
        2, this->repeatedgroup(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestFlagsAndStrings)
  return target;
}

size_t TestFlagsAndStrings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestFlagsAndStrings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 A = 1;
  if (has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated group RepeatedGroup = 2 { ... };
  {
    unsigned int count = static_cast<unsigned int>(this->repeatedgroup_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::GroupSize(
          this->repeatedgroup(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestFlagsAndStrings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestFlagsAndStrings)
  GOOGLE_DCHECK_NE(&from, this);
  const TestFlagsAndStrings* source =
      ::google::protobuf::DynamicCastToGenerated<TestFlagsAndStrings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestFlagsAndStrings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestFlagsAndStrings)
    MergeFrom(*source);
  }
}

void TestFlagsAndStrings::MergeFrom(const TestFlagsAndStrings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestFlagsAndStrings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repeatedgroup_.MergeFrom(from.repeatedgroup_);
  if (from.has_a()) {
    set_a(from.a());
  }
}

void TestFlagsAndStrings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestFlagsAndStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestFlagsAndStrings::CopyFrom(const TestFlagsAndStrings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestFlagsAndStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestFlagsAndStrings::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->repeatedgroup())) return false;
  return true;
}

void TestFlagsAndStrings::Swap(TestFlagsAndStrings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestFlagsAndStrings::InternalSwap(TestFlagsAndStrings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&repeatedgroup_)->InternalSwap(CastToBase(&other->repeatedgroup_));
  swap(a_, other->a_);
}

::google::protobuf::Metadata TestFlagsAndStrings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestBase64ByteArrays::InitAsDefaultInstance() {
}
class TestBase64ByteArrays::HasBitSetters {
 public:
  static void set_has_a(TestBase64ByteArrays* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestBase64ByteArrays::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestBase64ByteArrays::TestBase64ByteArrays()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestBase64ByteArrays)
}
TestBase64ByteArrays::TestBase64ByteArrays(const TestBase64ByteArrays& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a()) {
    a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestBase64ByteArrays)
}

void TestBase64ByteArrays::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestBase64ByteArrays::~TestBase64ByteArrays() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestBase64ByteArrays)
  SharedDtor();
}

void TestBase64ByteArrays::SharedDtor() {
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestBase64ByteArrays::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestBase64ByteArrays& TestBase64ByteArrays::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestBase64ByteArrays_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestBase64ByteArrays::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestBase64ByteArrays)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    a_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestBase64ByteArrays::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestBase64ByteArrays*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes a = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_a();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestBase64ByteArrays::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestBase64ByteArrays)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestBase64ByteArrays)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestBase64ByteArrays)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestBase64ByteArrays::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestBase64ByteArrays)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestBase64ByteArrays)
}

::google::protobuf::uint8* TestBase64ByteArrays::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestBase64ByteArrays)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes a = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestBase64ByteArrays)
  return target;
}

size_t TestBase64ByteArrays::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestBase64ByteArrays)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes a = 1;
  if (has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->a());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestBase64ByteArrays::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestBase64ByteArrays)
  GOOGLE_DCHECK_NE(&from, this);
  const TestBase64ByteArrays* source =
      ::google::protobuf::DynamicCastToGenerated<TestBase64ByteArrays>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestBase64ByteArrays)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestBase64ByteArrays)
    MergeFrom(*source);
  }
}

void TestBase64ByteArrays::MergeFrom(const TestBase64ByteArrays& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestBase64ByteArrays)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_a()) {
    _has_bits_[0] |= 0x00000001u;
    a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
  }
}

void TestBase64ByteArrays::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestBase64ByteArrays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestBase64ByteArrays::CopyFrom(const TestBase64ByteArrays& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestBase64ByteArrays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestBase64ByteArrays::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void TestBase64ByteArrays::Swap(TestBase64ByteArrays* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestBase64ByteArrays::InternalSwap(TestBase64ByteArrays* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  a_.Swap(&other->a_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TestBase64ByteArrays::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestJavaScriptJSON::InitAsDefaultInstance() {
}
class TestJavaScriptJSON::HasBitSetters {
 public:
  static void set_has_a(TestJavaScriptJSON* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_final(TestJavaScriptJSON* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_in(TestJavaScriptJSON* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_var(TestJavaScriptJSON* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestJavaScriptJSON::kAFieldNumber;
const int TestJavaScriptJSON::kFinalFieldNumber;
const int TestJavaScriptJSON::kInFieldNumber;
const int TestJavaScriptJSON::kVarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestJavaScriptJSON::TestJavaScriptJSON()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestJavaScriptJSON)
}
TestJavaScriptJSON::TestJavaScriptJSON(const TestJavaScriptJSON& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_in()) {
    in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
  }
  var_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_var()) {
    var_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_);
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&final_) -
    reinterpret_cast<char*>(&a_)) + sizeof(final_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestJavaScriptJSON)
}

void TestJavaScriptJSON::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  var_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&final_) -
      reinterpret_cast<char*>(&a_)) + sizeof(final_));
}

TestJavaScriptJSON::~TestJavaScriptJSON() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestJavaScriptJSON)
  SharedDtor();
}

void TestJavaScriptJSON::SharedDtor() {
  in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  var_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestJavaScriptJSON::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestJavaScriptJSON& TestJavaScriptJSON::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestJavaScriptJSON_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestJavaScriptJSON::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestJavaScriptJSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      in_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      var_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&final_) -
        reinterpret_cast<char*>(&a_)) + sizeof(final_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestJavaScriptJSON::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestJavaScriptJSON*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 a = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float final = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_final(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional string in = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.TestJavaScriptJSON.in");
        object = msg->mutable_in();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string Var = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.TestJavaScriptJSON.Var");
        object = msg->mutable_var();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestJavaScriptJSON::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestJavaScriptJSON)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float final = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_final(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string in = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_in()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->in().data(), static_cast<int>(this->in().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestJavaScriptJSON.in");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Var = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_var()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->var().data(), static_cast<int>(this->var().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestJavaScriptJSON.Var");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestJavaScriptJSON)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestJavaScriptJSON)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestJavaScriptJSON::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestJavaScriptJSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional float final = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->final(), output);
  }

  // optional string in = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->in().data(), static_cast<int>(this->in().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestJavaScriptJSON.in");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->in(), output);
  }

  // optional string Var = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var().data(), static_cast<int>(this->var().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestJavaScriptJSON.Var");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->var(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestJavaScriptJSON)
}

::google::protobuf::uint8* TestJavaScriptJSON::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestJavaScriptJSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional float final = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->final(), target);
  }

  // optional string in = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->in().data(), static_cast<int>(this->in().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestJavaScriptJSON.in");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->in(), target);
  }

  // optional string Var = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->var().data(), static_cast<int>(this->var().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestJavaScriptJSON.Var");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->var(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestJavaScriptJSON)
  return target;
}

size_t TestJavaScriptJSON::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestJavaScriptJSON)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string in = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->in());
    }

    // optional string Var = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->var());
    }

    // optional int32 a = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional float final = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestJavaScriptJSON::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestJavaScriptJSON)
  GOOGLE_DCHECK_NE(&from, this);
  const TestJavaScriptJSON* source =
      ::google::protobuf::DynamicCastToGenerated<TestJavaScriptJSON>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestJavaScriptJSON)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestJavaScriptJSON)
    MergeFrom(*source);
  }
}

void TestJavaScriptJSON::MergeFrom(const TestJavaScriptJSON& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestJavaScriptJSON)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.in_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      var_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_);
    }
    if (cached_has_bits & 0x00000004u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000008u) {
      final_ = from.final_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestJavaScriptJSON::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestJavaScriptJSON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestJavaScriptJSON::CopyFrom(const TestJavaScriptJSON& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestJavaScriptJSON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestJavaScriptJSON::IsInitialized() const {
  return true;
}

void TestJavaScriptJSON::Swap(TestJavaScriptJSON* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestJavaScriptJSON::InternalSwap(TestJavaScriptJSON* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  in_.Swap(&other->in_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  var_.Swap(&other->var_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(a_, other->a_);
  swap(final_, other->final_);
}

::google::protobuf::Metadata TestJavaScriptJSON::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestJavaScriptOrderJSON1::InitAsDefaultInstance() {
}
class TestJavaScriptOrderJSON1::HasBitSetters {
 public:
  static void set_has_d(TestJavaScriptOrderJSON1* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_c(TestJavaScriptOrderJSON1* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_x(TestJavaScriptOrderJSON1* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_b(TestJavaScriptOrderJSON1* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_a(TestJavaScriptOrderJSON1* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestJavaScriptOrderJSON1::kDFieldNumber;
const int TestJavaScriptOrderJSON1::kCFieldNumber;
const int TestJavaScriptOrderJSON1::kXFieldNumber;
const int TestJavaScriptOrderJSON1::kBFieldNumber;
const int TestJavaScriptOrderJSON1::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestJavaScriptOrderJSON1::TestJavaScriptOrderJSON1()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestJavaScriptOrderJSON1)
}
TestJavaScriptOrderJSON1::TestJavaScriptOrderJSON1(const TestJavaScriptOrderJSON1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&d_, &from.d_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_) -
    reinterpret_cast<char*>(&d_)) + sizeof(a_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestJavaScriptOrderJSON1)
}

void TestJavaScriptOrderJSON1::SharedCtor() {
  ::memset(&d_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_) -
      reinterpret_cast<char*>(&d_)) + sizeof(a_));
}

TestJavaScriptOrderJSON1::~TestJavaScriptOrderJSON1() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestJavaScriptOrderJSON1)
  SharedDtor();
}

void TestJavaScriptOrderJSON1::SharedDtor() {
}

void TestJavaScriptOrderJSON1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestJavaScriptOrderJSON1& TestJavaScriptOrderJSON1::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestJavaScriptOrderJSON1_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestJavaScriptOrderJSON1::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestJavaScriptOrderJSON1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&d_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&a_) -
        reinterpret_cast<char*>(&d_)) + sizeof(a_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestJavaScriptOrderJSON1::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestJavaScriptOrderJSON1*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 d = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_d(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 c = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_c(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool x = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 b = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_b(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 a = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestJavaScriptOrderJSON1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestJavaScriptOrderJSON1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 d = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_d(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 c = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_c(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_b(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestJavaScriptOrderJSON1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestJavaScriptOrderJSON1)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestJavaScriptOrderJSON1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestJavaScriptOrderJSON1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 d = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->d(), output);
  }

  // optional int32 c = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->c(), output);
  }

  // optional bool x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->x(), output);
  }

  // optional int32 b = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->b(), output);
  }

  // optional int32 a = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestJavaScriptOrderJSON1)
}

::google::protobuf::uint8* TestJavaScriptOrderJSON1::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestJavaScriptOrderJSON1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 d = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->d(), target);
  }

  // optional int32 c = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->c(), target);
  }

  // optional bool x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->x(), target);
  }

  // optional int32 b = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->b(), target);
  }

  // optional int32 a = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestJavaScriptOrderJSON1)
  return target;
}

size_t TestJavaScriptOrderJSON1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestJavaScriptOrderJSON1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 d = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->d());
    }

    // optional int32 c = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c());
    }

    // optional bool x = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional int32 b = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 a = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestJavaScriptOrderJSON1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestJavaScriptOrderJSON1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestJavaScriptOrderJSON1* source =
      ::google::protobuf::DynamicCastToGenerated<TestJavaScriptOrderJSON1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestJavaScriptOrderJSON1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestJavaScriptOrderJSON1)
    MergeFrom(*source);
  }
}

void TestJavaScriptOrderJSON1::MergeFrom(const TestJavaScriptOrderJSON1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestJavaScriptOrderJSON1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      d_ = from.d_;
    }
    if (cached_has_bits & 0x00000002u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000010u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestJavaScriptOrderJSON1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestJavaScriptOrderJSON1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestJavaScriptOrderJSON1::CopyFrom(const TestJavaScriptOrderJSON1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestJavaScriptOrderJSON1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestJavaScriptOrderJSON1::IsInitialized() const {
  return true;
}

void TestJavaScriptOrderJSON1::Swap(TestJavaScriptOrderJSON1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestJavaScriptOrderJSON1::InternalSwap(TestJavaScriptOrderJSON1* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(d_, other->d_);
  swap(c_, other->c_);
  swap(x_, other->x_);
  swap(b_, other->b_);
  swap(a_, other->a_);
}

::google::protobuf::Metadata TestJavaScriptOrderJSON1::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestJavaScriptOrderJSON2::InitAsDefaultInstance() {
}
class TestJavaScriptOrderJSON2::HasBitSetters {
 public:
  static void set_has_d(TestJavaScriptOrderJSON2* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_c(TestJavaScriptOrderJSON2* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_x(TestJavaScriptOrderJSON2* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_b(TestJavaScriptOrderJSON2* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_a(TestJavaScriptOrderJSON2* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestJavaScriptOrderJSON2::kDFieldNumber;
const int TestJavaScriptOrderJSON2::kCFieldNumber;
const int TestJavaScriptOrderJSON2::kXFieldNumber;
const int TestJavaScriptOrderJSON2::kBFieldNumber;
const int TestJavaScriptOrderJSON2::kAFieldNumber;
const int TestJavaScriptOrderJSON2::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestJavaScriptOrderJSON2::TestJavaScriptOrderJSON2()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestJavaScriptOrderJSON2)
}
TestJavaScriptOrderJSON2::TestJavaScriptOrderJSON2(const TestJavaScriptOrderJSON2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      z_(from.z_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&d_, &from.d_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_) -
    reinterpret_cast<char*>(&d_)) + sizeof(a_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestJavaScriptOrderJSON2)
}

void TestJavaScriptOrderJSON2::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::memset(&d_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_) -
      reinterpret_cast<char*>(&d_)) + sizeof(a_));
}

TestJavaScriptOrderJSON2::~TestJavaScriptOrderJSON2() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestJavaScriptOrderJSON2)
  SharedDtor();
}

void TestJavaScriptOrderJSON2::SharedDtor() {
}

void TestJavaScriptOrderJSON2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestJavaScriptOrderJSON2& TestJavaScriptOrderJSON2::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestJavaScriptOrderJSON2_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestJavaScriptOrderJSON2::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestJavaScriptOrderJSON2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  z_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&d_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&a_) -
        reinterpret_cast<char*>(&d_)) + sizeof(a_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestJavaScriptOrderJSON2::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestJavaScriptOrderJSON2*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 d = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_d(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 c = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_c(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool x = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 b = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_b(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 a = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.protobuf.TestJavaScriptOrderJSON1 z = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::TestJavaScriptOrderJSON1::_InternalParse;
          object = msg->add_z();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestJavaScriptOrderJSON2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestJavaScriptOrderJSON2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 d = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_d(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 c = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_c(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_x(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_b(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.TestJavaScriptOrderJSON1 z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_z()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestJavaScriptOrderJSON2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestJavaScriptOrderJSON2)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestJavaScriptOrderJSON2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestJavaScriptOrderJSON2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 d = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->d(), output);
  }

  // optional int32 c = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->c(), output);
  }

  // optional bool x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->x(), output);
  }

  // optional int32 b = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->b(), output);
  }

  // optional int32 a = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->a(), output);
  }

  // repeated .google.protobuf.TestJavaScriptOrderJSON1 z = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->z_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->z(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestJavaScriptOrderJSON2)
}

::google::protobuf::uint8* TestJavaScriptOrderJSON2::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestJavaScriptOrderJSON2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 d = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->d(), target);
  }

  // optional int32 c = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->c(), target);
  }

  // optional bool x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->x(), target);
  }

  // optional int32 b = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->b(), target);
  }

  // optional int32 a = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->a(), target);
  }

  // repeated .google.protobuf.TestJavaScriptOrderJSON1 z = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->z_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->z(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestJavaScriptOrderJSON2)
  return target;
}

size_t TestJavaScriptOrderJSON2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestJavaScriptOrderJSON2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.TestJavaScriptOrderJSON1 z = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->z_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->z(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 d = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->d());
    }

    // optional int32 c = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->c());
    }

    // optional bool x = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional int32 b = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 a = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestJavaScriptOrderJSON2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestJavaScriptOrderJSON2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestJavaScriptOrderJSON2* source =
      ::google::protobuf::DynamicCastToGenerated<TestJavaScriptOrderJSON2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestJavaScriptOrderJSON2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestJavaScriptOrderJSON2)
    MergeFrom(*source);
  }
}

void TestJavaScriptOrderJSON2::MergeFrom(const TestJavaScriptOrderJSON2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestJavaScriptOrderJSON2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  z_.MergeFrom(from.z_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      d_ = from.d_;
    }
    if (cached_has_bits & 0x00000002u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000010u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestJavaScriptOrderJSON2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestJavaScriptOrderJSON2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestJavaScriptOrderJSON2::CopyFrom(const TestJavaScriptOrderJSON2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestJavaScriptOrderJSON2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestJavaScriptOrderJSON2::IsInitialized() const {
  return true;
}

void TestJavaScriptOrderJSON2::Swap(TestJavaScriptOrderJSON2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestJavaScriptOrderJSON2::InternalSwap(TestJavaScriptOrderJSON2* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&z_)->InternalSwap(CastToBase(&other->z_));
  swap(d_, other->d_);
  swap(c_, other->c_);
  swap(x_, other->x_);
  swap(b_, other->b_);
  swap(a_, other->a_);
}

::google::protobuf::Metadata TestJavaScriptOrderJSON2::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestLargeInt::InitAsDefaultInstance() {
}
class TestLargeInt::HasBitSetters {
 public:
  static void set_has_a(TestLargeInt* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_b(TestLargeInt* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestLargeInt::kAFieldNumber;
const int TestLargeInt::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestLargeInt::TestLargeInt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestLargeInt)
}
TestLargeInt::TestLargeInt(const TestLargeInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestLargeInt)
}

void TestLargeInt::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

TestLargeInt::~TestLargeInt() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestLargeInt)
  SharedDtor();
}

void TestLargeInt::SharedDtor() {
}

void TestLargeInt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestLargeInt& TestLargeInt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestLargeInt_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestLargeInt::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestLargeInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&b_) -
        reinterpret_cast<char*>(&a_)) + sizeof(b_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestLargeInt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestLargeInt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 a = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_a(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint64 b = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_b(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestLargeInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestLargeInt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_a(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_b(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestLargeInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestLargeInt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestLargeInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestLargeInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->a(), output);
  }

  // required uint64 b = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestLargeInt)
}

::google::protobuf::uint8* TestLargeInt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestLargeInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->a(), target);
  }

  // required uint64 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestLargeInt)
  return target;
}

size_t TestLargeInt::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:google.protobuf.TestLargeInt)
  size_t total_size = 0;

  if (has_a()) {
    // required int64 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->a());
  }

  if (has_b()) {
    // required uint64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->b());
  }

  return total_size;
}
size_t TestLargeInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestLargeInt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 a = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->a());

    // required uint64 b = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->b());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestLargeInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestLargeInt)
  GOOGLE_DCHECK_NE(&from, this);
  const TestLargeInt* source =
      ::google::protobuf::DynamicCastToGenerated<TestLargeInt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestLargeInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestLargeInt)
    MergeFrom(*source);
  }
}

void TestLargeInt::MergeFrom(const TestLargeInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestLargeInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      b_ = from.b_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestLargeInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestLargeInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestLargeInt::CopyFrom(const TestLargeInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestLargeInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestLargeInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TestLargeInt::Swap(TestLargeInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestLargeInt::InternalSwap(TestLargeInt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(a_, other->a_);
  swap(b_, other->b_);
}

::google::protobuf::Metadata TestLargeInt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestNumbers::InitAsDefaultInstance() {
}
class TestNumbers::HasBitSetters {
 public:
  static void set_has_a(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_b(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_c(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_d(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_e(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_f(TestNumbers* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestNumbers::kAFieldNumber;
const int TestNumbers::kBFieldNumber;
const int TestNumbers::kCFieldNumber;
const int TestNumbers::kDFieldNumber;
const int TestNumbers::kEFieldNumber;
const int TestNumbers::kFFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestNumbers::TestNumbers()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestNumbers)
}
TestNumbers::TestNumbers(const TestNumbers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&f_) -
    reinterpret_cast<char*>(&a_)) + sizeof(f_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestNumbers)
}

void TestNumbers::SharedCtor() {
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f_) -
      reinterpret_cast<char*>(&a_)) + sizeof(f_));
}

TestNumbers::~TestNumbers() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestNumbers)
  SharedDtor();
}

void TestNumbers::SharedDtor() {
}

void TestNumbers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestNumbers& TestNumbers::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestNumbers_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestNumbers::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&a_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&f_) -
        reinterpret_cast<char*>(&a_)) + sizeof(f_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestNumbers::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestNumbers*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .google.protobuf.TestNumbers.MyType a = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::google::protobuf::TestNumbers_MyType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_a(static_cast<::google::protobuf::TestNumbers_MyType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 b = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_b(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float c = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_c(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional bool d = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_d(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional double e = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_e(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // optional uint32 f = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_f(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestNumbers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestNumbers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.TestNumbers.MyType a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::google::protobuf::TestNumbers_MyType_IsValid(value)) {
            set_a(static_cast< ::google::protobuf::TestNumbers_MyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_b(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_c(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool d = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_d(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {
          HasBitSetters::set_has_e(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 f = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_f(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestNumbers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestNumbers)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestNumbers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .google.protobuf.TestNumbers.MyType a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->a(), output);
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  // optional float c = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->c(), output);
  }

  // optional bool d = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->d(), output);
  }

  // optional double e = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->e(), output);
  }

  // optional uint32 f = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->f(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestNumbers)
}

::google::protobuf::uint8* TestNumbers::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestNumbers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .google.protobuf.TestNumbers.MyType a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->a(), target);
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  // optional float c = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->c(), target);
  }

  // optional bool d = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->d(), target);
  }

  // optional double e = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->e(), target);
  }

  // optional uint32 f = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->f(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestNumbers)
  return target;
}

size_t TestNumbers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestNumbers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .google.protobuf.TestNumbers.MyType a = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->a());
    }

    // optional int32 b = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional float c = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional bool d = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional double e = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional uint32 f = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->f());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestNumbers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  const TestNumbers* source =
      ::google::protobuf::DynamicCastToGenerated<TestNumbers>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestNumbers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestNumbers)
    MergeFrom(*source);
  }
}

void TestNumbers::MergeFrom(const TestNumbers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestNumbers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000002u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000004u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000008u) {
      d_ = from.d_;
    }
    if (cached_has_bits & 0x00000010u) {
      e_ = from.e_;
    }
    if (cached_has_bits & 0x00000020u) {
      f_ = from.f_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestNumbers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestNumbers::CopyFrom(const TestNumbers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestNumbers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestNumbers::IsInitialized() const {
  return true;
}

void TestNumbers::Swap(TestNumbers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestNumbers::InternalSwap(TestNumbers* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(a_, other->a_);
  swap(b_, other->b_);
  swap(c_, other->c_);
  swap(d_, other->d_);
  swap(e_, other->e_);
  swap(f_, other->f_);
}

::google::protobuf::Metadata TestNumbers::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestCamelCase::InitAsDefaultInstance() {
}
class TestCamelCase::HasBitSetters {
 public:
  static void set_has_normal_field(TestCamelCase* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_capital_field(TestCamelCase* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_camelcasefield(TestCamelCase* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCamelCase::kNormalFieldFieldNumber;
const int TestCamelCase::kCAPITALFIELDFieldNumber;
const int TestCamelCase::kCamelCaseFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCamelCase::TestCamelCase()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestCamelCase)
}
TestCamelCase::TestCamelCase(const TestCamelCase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  normal_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_normal_field()) {
    normal_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normal_field_);
  }
  ::memcpy(&capital_field_, &from.capital_field_,
    static_cast<size_t>(reinterpret_cast<char*>(&camelcasefield_) -
    reinterpret_cast<char*>(&capital_field_)) + sizeof(camelcasefield_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestCamelCase)
}

void TestCamelCase::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  normal_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capital_field_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&camelcasefield_) -
      reinterpret_cast<char*>(&capital_field_)) + sizeof(camelcasefield_));
}

TestCamelCase::~TestCamelCase() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestCamelCase)
  SharedDtor();
}

void TestCamelCase::SharedDtor() {
  normal_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestCamelCase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestCamelCase& TestCamelCase::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestCamelCase_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestCamelCase::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestCamelCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    normal_field_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&capital_field_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&camelcasefield_) -
        reinterpret_cast<char*>(&capital_field_)) + sizeof(camelcasefield_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestCamelCase::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestCamelCase*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string normal_field = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.TestCamelCase.normal_field");
        object = msg->mutable_normal_field();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 CAPITAL_FIELD = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_capital_field(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 CamelCaseField = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_camelcasefield(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestCamelCase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestCamelCase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string normal_field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_normal_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->normal_field().data(), static_cast<int>(this->normal_field().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestCamelCase.normal_field");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 CAPITAL_FIELD = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_capital_field(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &capital_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 CamelCaseField = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_camelcasefield(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camelcasefield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestCamelCase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestCamelCase)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestCamelCase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestCamelCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string normal_field = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normal_field().data(), static_cast<int>(this->normal_field().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestCamelCase.normal_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->normal_field(), output);
  }

  // optional int32 CAPITAL_FIELD = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->capital_field(), output);
  }

  // optional int32 CamelCaseField = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->camelcasefield(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestCamelCase)
}

::google::protobuf::uint8* TestCamelCase::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestCamelCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string normal_field = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normal_field().data(), static_cast<int>(this->normal_field().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.TestCamelCase.normal_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->normal_field(), target);
  }

  // optional int32 CAPITAL_FIELD = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->capital_field(), target);
  }

  // optional int32 CamelCaseField = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->camelcasefield(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestCamelCase)
  return target;
}

size_t TestCamelCase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestCamelCase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string normal_field = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->normal_field());
    }

    // optional int32 CAPITAL_FIELD = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->capital_field());
    }

    // optional int32 CamelCaseField = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camelcasefield());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestCamelCase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestCamelCase)
  GOOGLE_DCHECK_NE(&from, this);
  const TestCamelCase* source =
      ::google::protobuf::DynamicCastToGenerated<TestCamelCase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestCamelCase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestCamelCase)
    MergeFrom(*source);
  }
}

void TestCamelCase::MergeFrom(const TestCamelCase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestCamelCase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      normal_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normal_field_);
    }
    if (cached_has_bits & 0x00000002u) {
      capital_field_ = from.capital_field_;
    }
    if (cached_has_bits & 0x00000004u) {
      camelcasefield_ = from.camelcasefield_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestCamelCase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestCamelCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCamelCase::CopyFrom(const TestCamelCase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestCamelCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCamelCase::IsInitialized() const {
  return true;
}

void TestCamelCase::Swap(TestCamelCase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestCamelCase::InternalSwap(TestCamelCase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  normal_field_.Swap(&other->normal_field_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capital_field_, other->capital_field_);
  swap(camelcasefield_, other->camelcasefield_);
}

::google::protobuf::Metadata TestCamelCase::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

TestBoolMap_BoolMapEntry_DoNotUse::TestBoolMap_BoolMapEntry_DoNotUse() {}
TestBoolMap_BoolMapEntry_DoNotUse::TestBoolMap_BoolMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestBoolMap_BoolMapEntry_DoNotUse::MergeFrom(const TestBoolMap_BoolMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestBoolMap_BoolMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[9];
}
void TestBoolMap_BoolMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestBoolMap_BoolMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      TestBoolMap_BoolMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void TestBoolMap::InitAsDefaultInstance() {
}
class TestBoolMap::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestBoolMap::kBoolMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestBoolMap::TestBoolMap()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestBoolMap)
}
TestBoolMap::TestBoolMap(const TestBoolMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bool_map_.MergeFrom(from.bool_map_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestBoolMap)
}

void TestBoolMap::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
}

TestBoolMap::~TestBoolMap() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestBoolMap)
  SharedDtor();
}

void TestBoolMap::SharedDtor() {
}

void TestBoolMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestBoolMap& TestBoolMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestBoolMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestBoolMap::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestBoolMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bool_map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestBoolMap::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestBoolMap*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<bool, int32> bool_map = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->bool_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestBoolMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestBoolMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<bool, int32> bool_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          TestBoolMap_BoolMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestBoolMap_BoolMapEntry_DoNotUse,
              bool, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< bool, ::google::protobuf::int32 > > parser(&bool_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestBoolMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestBoolMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestBoolMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestBoolMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<bool, int32> bool_map = 1;
  if (!this->bool_map().empty()) {
    typedef ::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bool_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bool_map().size()]);
      typedef ::google::protobuf::Map< bool, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_iterator
          it = this->bool_map().begin();
          it != this->bool_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestBoolMap_BoolMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bool_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
      }
    } else {
      ::std::unique_ptr<TestBoolMap_BoolMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_iterator
          it = this->bool_map().begin();
          it != this->bool_map().end(); ++it) {
        entry.reset(bool_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestBoolMap)
}

::google::protobuf::uint8* TestBoolMap::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestBoolMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<bool, int32> bool_map = 1;
  if (!this->bool_map().empty()) {
    typedef ::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< bool, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->bool_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bool_map().size()]);
      typedef ::google::protobuf::Map< bool, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_iterator
          it = this->bool_map().begin();
          it != this->bool_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestBoolMap_BoolMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bool_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
      }
    } else {
      ::std::unique_ptr<TestBoolMap_BoolMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_iterator
          it = this->bool_map().begin();
          it != this->bool_map().end(); ++it) {
        entry.reset(bool_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestBoolMap)
  return target;
}

size_t TestBoolMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestBoolMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<bool, int32> bool_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bool_map_size());
  {
    ::std::unique_ptr<TestBoolMap_BoolMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< bool, ::google::protobuf::int32 >::const_iterator
        it = this->bool_map().begin();
        it != this->bool_map().end(); ++it) {
      entry.reset(bool_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestBoolMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestBoolMap)
  GOOGLE_DCHECK_NE(&from, this);
  const TestBoolMap* source =
      ::google::protobuf::DynamicCastToGenerated<TestBoolMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestBoolMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestBoolMap)
    MergeFrom(*source);
  }
}

void TestBoolMap::MergeFrom(const TestBoolMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestBoolMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bool_map_.MergeFrom(from.bool_map_);
}

void TestBoolMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestBoolMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestBoolMap::CopyFrom(const TestBoolMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestBoolMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestBoolMap::IsInitialized() const {
  return true;
}

void TestBoolMap::Swap(TestBoolMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestBoolMap::InternalSwap(TestBoolMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bool_map_.Swap(&other->bool_map_);
}

::google::protobuf::Metadata TestBoolMap::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TestRecursion::InitAsDefaultInstance() {
  ::google::protobuf::_TestRecursion_default_instance_._instance.get_mutable()->child_ = const_cast< ::google::protobuf::TestRecursion*>(
      ::google::protobuf::TestRecursion::internal_default_instance());
}
class TestRecursion::HasBitSetters {
 public:
  static void set_has_value(TestRecursion* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::google::protobuf::TestRecursion& child(const TestRecursion* msg);
  static void set_has_child(TestRecursion* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::google::protobuf::TestRecursion&
TestRecursion::HasBitSetters::child(const TestRecursion* msg) {
  return *msg->child_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRecursion::kValueFieldNumber;
const int TestRecursion::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRecursion::TestRecursion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestRecursion)
}
TestRecursion::TestRecursion(const TestRecursion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::google::protobuf::TestRecursion(*from.child_);
  } else {
    child_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestRecursion)
}

void TestRecursion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  ::memset(&child_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&child_)) + sizeof(value_));
}

TestRecursion::~TestRecursion() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestRecursion)
  SharedDtor();
}

void TestRecursion::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void TestRecursion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestRecursion& TestRecursion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestRecursion_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestRecursion::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestRecursion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(child_ != nullptr);
    child_->Clear();
  }
  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestRecursion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestRecursion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .google.protobuf.TestRecursion child = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::TestRecursion::_InternalParse;
        object = msg->mutable_child();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestRecursion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestRecursion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .google.protobuf.TestRecursion child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestRecursion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestRecursion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestRecursion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestRecursion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 value = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // optional .google.protobuf.TestRecursion child = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::child(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestRecursion)
}

::google::protobuf::uint8* TestRecursion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestRecursion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 value = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // optional .google.protobuf.TestRecursion child = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::child(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestRecursion)
  return target;
}

size_t TestRecursion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestRecursion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .google.protobuf.TestRecursion child = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_);
    }

    // optional int32 value = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRecursion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestRecursion)
  GOOGLE_DCHECK_NE(&from, this);
  const TestRecursion* source =
      ::google::protobuf::DynamicCastToGenerated<TestRecursion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestRecursion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestRecursion)
    MergeFrom(*source);
  }
}

void TestRecursion::MergeFrom(const TestRecursion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestRecursion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_child()->::google::protobuf::TestRecursion::MergeFrom(from.child());
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestRecursion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestRecursion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRecursion::CopyFrom(const TestRecursion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestRecursion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRecursion::IsInitialized() const {
  return true;
}

void TestRecursion::Swap(TestRecursion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestRecursion::InternalSwap(TestRecursion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(child_, other->child_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata TestRecursion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// ===================================================================

TestStringMap_StringMapEntry_DoNotUse::TestStringMap_StringMapEntry_DoNotUse() {}
TestStringMap_StringMapEntry_DoNotUse::TestStringMap_StringMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TestStringMap_StringMapEntry_DoNotUse::MergeFrom(const TestStringMap_StringMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestStringMap_StringMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[12];
}
void TestStringMap_StringMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestStringMap_StringMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      TestStringMap_StringMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormat::PARSE,
    "google.protobuf.TestStringMap.StringMapEntry.key");
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormat::PARSE,
    "google.protobuf.TestStringMap.StringMapEntry.value");
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void TestStringMap::InitAsDefaultInstance() {
}
class TestStringMap::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestStringMap::kStringMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestStringMap::TestStringMap()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.TestStringMap)
}
TestStringMap::TestStringMap(const TestStringMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_map_.MergeFrom(from.string_map_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.TestStringMap)
}

void TestStringMap::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
}

TestStringMap::~TestStringMap() {
  // @@protoc_insertion_point(destructor:google.protobuf.TestStringMap)
  SharedDtor();
}

void TestStringMap::SharedDtor() {
}

void TestStringMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestStringMap& TestStringMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TestStringMap_google_2fprotobuf_2futil_2fjson_5fformat_2eproto.base);
  return *internal_default_instance();
}


void TestStringMap::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.TestStringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_map_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TestStringMap::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TestStringMap*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, string> string_map = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->string_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TestStringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.TestStringMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> string_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          TestStringMap_StringMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestStringMap_StringMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&string_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestStringMap.StringMapEntry.key");
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.TestStringMap.StringMapEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.TestStringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.TestStringMap)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TestStringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.TestStringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> string_map = 1;
  if (!this->string_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "google.protobuf.TestStringMap.StringMapEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "google.protobuf.TestStringMap.StringMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->string_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestStringMap_StringMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<TestStringMap_StringMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it) {
        entry.reset(string_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.TestStringMap)
}

::google::protobuf::uint8* TestStringMap::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.TestStringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> string_map = 1;
  if (!this->string_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "google.protobuf.TestStringMap.StringMapEntry.key");
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "google.protobuf.TestStringMap.StringMapEntry.value");
      }
    };

    if (false &&
        this->string_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestStringMap_StringMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<TestStringMap_StringMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it) {
        entry.reset(string_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.TestStringMap)
  return target;
}

size_t TestStringMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.TestStringMap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> string_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_map_size());
  {
    ::std::unique_ptr<TestStringMap_StringMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->string_map().begin();
        it != this->string_map().end(); ++it) {
      entry.reset(string_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestStringMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.TestStringMap)
  GOOGLE_DCHECK_NE(&from, this);
  const TestStringMap* source =
      ::google::protobuf::DynamicCastToGenerated<TestStringMap>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.TestStringMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.TestStringMap)
    MergeFrom(*source);
  }
}

void TestStringMap::MergeFrom(const TestStringMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.TestStringMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  string_map_.MergeFrom(from.string_map_);
}

void TestStringMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.TestStringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestStringMap::CopyFrom(const TestStringMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.TestStringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestStringMap::IsInitialized() const {
  return true;
}

void TestStringMap::Swap(TestStringMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestStringMap::InternalSwap(TestStringMap* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  string_map_.Swap(&other->string_map_);
}

::google::protobuf::Metadata TestStringMap::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2fjson_5fformat_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2fjson_5fformat_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::protobuf::TestFlagsAndStrings_RepeatedGroup* Arena::CreateMaybeMessage< ::google::protobuf::TestFlagsAndStrings_RepeatedGroup >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestFlagsAndStrings_RepeatedGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestFlagsAndStrings* Arena::CreateMaybeMessage< ::google::protobuf::TestFlagsAndStrings >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestFlagsAndStrings >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestBase64ByteArrays* Arena::CreateMaybeMessage< ::google::protobuf::TestBase64ByteArrays >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestBase64ByteArrays >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestJavaScriptJSON* Arena::CreateMaybeMessage< ::google::protobuf::TestJavaScriptJSON >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestJavaScriptJSON >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestJavaScriptOrderJSON1* Arena::CreateMaybeMessage< ::google::protobuf::TestJavaScriptOrderJSON1 >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestJavaScriptOrderJSON1 >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestJavaScriptOrderJSON2* Arena::CreateMaybeMessage< ::google::protobuf::TestJavaScriptOrderJSON2 >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestJavaScriptOrderJSON2 >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestLargeInt* Arena::CreateMaybeMessage< ::google::protobuf::TestLargeInt >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestLargeInt >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestNumbers* Arena::CreateMaybeMessage< ::google::protobuf::TestNumbers >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestNumbers >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestCamelCase* Arena::CreateMaybeMessage< ::google::protobuf::TestCamelCase >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestCamelCase >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestBoolMap_BoolMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestBoolMap* Arena::CreateMaybeMessage< ::google::protobuf::TestBoolMap >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestBoolMap >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestRecursion* Arena::CreateMaybeMessage< ::google::protobuf::TestRecursion >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestRecursion >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestStringMap_StringMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::TestStringMap* Arena::CreateMaybeMessage< ::google::protobuf::TestStringMap >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::TestStringMap >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
