// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/internal/testdata/wrappers.proto

#include <google/protobuf/util/internal/testdata/wrappers.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto;
namespace google {
namespace protobuf {
namespace testing {
class WrappersTestCasesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WrappersTestCases> _instance;
} _WrappersTestCases_default_instance_;
class DoubleWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleWrapper> _instance;
} _DoubleWrapper_default_instance_;
class FloatWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatWrapper> _instance;
} _FloatWrapper_default_instance_;
class Int64WrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64Wrapper> _instance;
} _Int64Wrapper_default_instance_;
class UInt64WrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UInt64Wrapper> _instance;
} _UInt64Wrapper_default_instance_;
class Int32WrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int32Wrapper> _instance;
} _Int32Wrapper_default_instance_;
class UInt32WrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UInt32Wrapper> _instance;
} _UInt32Wrapper_default_instance_;
class BoolWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoolWrapper> _instance;
} _BoolWrapper_default_instance_;
class StringWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringWrapper> _instance;
} _StringWrapper_default_instance_;
class BytesWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BytesWrapper> _instance;
} _BytesWrapper_default_instance_;
}  // namespace testing
}  // namespace protobuf
}  // namespace google
static void InitDefaultsWrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_WrappersTestCases_default_instance_;
    new (ptr) ::google::protobuf::testing::WrappersTestCases();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::WrappersTestCases::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_WrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsWrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,
      &scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base,}};

static void InitDefaultsDoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_DoubleWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::DoubleWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::DoubleWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsFloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_FloatWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::FloatWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::FloatWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_FloatValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Int64Wrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::Int64Wrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::Int64Wrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_Int64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsUInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_UInt64Wrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::UInt64Wrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::UInt64Wrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_UInt64Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Int32Wrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::Int32Wrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::Int32Wrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsUInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_UInt32Wrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::UInt32Wrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::UInt32Wrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsBoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_BoolWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::BoolWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::BoolWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsStringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_StringWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::StringWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::StringWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsBytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_BytesWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::BytesWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::BytesWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto}, {
      &scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

void InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_WrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[10];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, double_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, float_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, int64_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, uint64_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, int32_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, uint32_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, bool_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, string_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, bytes_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, double_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, float_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, int64_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, uint64_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, int32_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, uint32_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, bool_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, string_wrapper_default_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::WrappersTestCases, bytes_wrapper_default_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::DoubleWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::DoubleWrapper, double__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::FloatWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::FloatWrapper, float__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Int64Wrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Int64Wrapper, int64_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::UInt64Wrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::UInt64Wrapper, uint64_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Int32Wrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Int32Wrapper, int32_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::UInt32Wrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::UInt32Wrapper, uint32_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::BoolWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::BoolWrapper, bool__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StringWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StringWrapper, string_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::BytesWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::BytesWrapper, bytes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::protobuf::testing::WrappersTestCases)},
  { 23, -1, sizeof(::google::protobuf::testing::DoubleWrapper)},
  { 29, -1, sizeof(::google::protobuf::testing::FloatWrapper)},
  { 35, -1, sizeof(::google::protobuf::testing::Int64Wrapper)},
  { 41, -1, sizeof(::google::protobuf::testing::UInt64Wrapper)},
  { 47, -1, sizeof(::google::protobuf::testing::Int32Wrapper)},
  { 53, -1, sizeof(::google::protobuf::testing::UInt32Wrapper)},
  { 59, -1, sizeof(::google::protobuf::testing::BoolWrapper)},
  { 65, -1, sizeof(::google::protobuf::testing::StringWrapper)},
  { 71, -1, sizeof(::google::protobuf::testing::BytesWrapper)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_WrappersTestCases_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_DoubleWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_FloatWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Int64Wrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_UInt64Wrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Int32Wrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_UInt32Wrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_BoolWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_StringWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_BytesWrapper_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto = {
  {}, AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, "google/protobuf/util/internal/testdata/wrappers.proto", schemas,
  file_default_instances, TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, 10, file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto,
};

const char descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[] =
  "\n5google/protobuf/util/internal/testdata"
  "/wrappers.proto\022\027google.protobuf.testing"
  "\032\036google/protobuf/wrappers.proto\"\303\t\n\021Wra"
  "ppersTestCases\022>\n\016double_wrapper\030\001 \001(\0132&"
  ".google.protobuf.testing.DoubleWrapper\022<"
  "\n\rfloat_wrapper\030\002 \001(\0132%.google.protobuf."
  "testing.FloatWrapper\022<\n\rint64_wrapper\030\003 "
  "\001(\0132%.google.protobuf.testing.Int64Wrapp"
  "er\022>\n\016uint64_wrapper\030\004 \001(\0132&.google.prot"
  "obuf.testing.UInt64Wrapper\022<\n\rint32_wrap"
  "per\030\005 \001(\0132%.google.protobuf.testing.Int3"
  "2Wrapper\022>\n\016uint32_wrapper\030\006 \001(\0132&.googl"
  "e.protobuf.testing.UInt32Wrapper\022:\n\014bool"
  "_wrapper\030\007 \001(\0132$.google.protobuf.testing"
  ".BoolWrapper\022>\n\016string_wrapper\030\010 \001(\0132&.g"
  "oogle.protobuf.testing.StringWrapper\022<\n\r"
  "bytes_wrapper\030\t \001(\0132%.google.protobuf.te"
  "sting.BytesWrapper\022F\n\026double_wrapper_def"
  "ault\030\n \001(\0132&.google.protobuf.testing.Dou"
  "bleWrapper\022D\n\025float_wrapper_default\030\013 \001("
  "\0132%.google.protobuf.testing.FloatWrapper"
  "\022D\n\025int64_wrapper_default\030\014 \001(\0132%.google"
  ".protobuf.testing.Int64Wrapper\022F\n\026uint64"
  "_wrapper_default\030\r \001(\0132&.google.protobuf"
  ".testing.UInt64Wrapper\022D\n\025int32_wrapper_"
  "default\030\016 \001(\0132%.google.protobuf.testing."
  "Int32Wrapper\022F\n\026uint32_wrapper_default\030\017"
  " \001(\0132&.google.protobuf.testing.UInt32Wra"
  "pper\022B\n\024bool_wrapper_default\030\020 \001(\0132$.goo"
  "gle.protobuf.testing.BoolWrapper\022F\n\026stri"
  "ng_wrapper_default\030\021 \001(\0132&.google.protob"
  "uf.testing.StringWrapper\022D\n\025bytes_wrappe"
  "r_default\030\022 \001(\0132%.google.protobuf.testin"
  "g.BytesWrapper\"=\n\rDoubleWrapper\022,\n\006doubl"
  "e\030\001 \001(\0132\034.google.protobuf.DoubleValue\":\n"
  "\014FloatWrapper\022*\n\005float\030\001 \001(\0132\033.google.pr"
  "otobuf.FloatValue\":\n\014Int64Wrapper\022*\n\005int"
  "64\030\001 \001(\0132\033.google.protobuf.Int64Value\"=\n"
  "\rUInt64Wrapper\022,\n\006uint64\030\001 \001(\0132\034.google."
  "protobuf.UInt64Value\":\n\014Int32Wrapper\022*\n\005"
  "int32\030\001 \001(\0132\033.google.protobuf.Int32Value"
  "\"=\n\rUInt32Wrapper\022,\n\006uint32\030\001 \001(\0132\034.goog"
  "le.protobuf.UInt32Value\"7\n\013BoolWrapper\022("
  "\n\004bool\030\001 \001(\0132\032.google.protobuf.BoolValue"
  "\"=\n\rStringWrapper\022,\n\006string\030\001 \001(\0132\034.goog"
  "le.protobuf.StringValue\":\n\014BytesWrapper\022"
  "*\n\005bytes\030\001 \001(\0132\033.google.protobuf.BytesVa"
  "lue2u\n\023WrappersTestService\022^\n\004Call\022*.goo"
  "gle.protobuf.testing.WrappersTestCases\032*"
  ".google.protobuf.testing.WrappersTestCas"
  "esb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto = {
  false, InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, 
  descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto,
  "google/protobuf/util/internal/testdata/wrappers.proto", &assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, 2010,
};

void AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto = []() { AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto(); return true; }();
namespace google {
namespace protobuf {
namespace testing {

// ===================================================================

void WrappersTestCases::InitAsDefaultInstance() {
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->double_wrapper_ = const_cast< ::google::protobuf::testing::DoubleWrapper*>(
      ::google::protobuf::testing::DoubleWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->float_wrapper_ = const_cast< ::google::protobuf::testing::FloatWrapper*>(
      ::google::protobuf::testing::FloatWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->int64_wrapper_ = const_cast< ::google::protobuf::testing::Int64Wrapper*>(
      ::google::protobuf::testing::Int64Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->uint64_wrapper_ = const_cast< ::google::protobuf::testing::UInt64Wrapper*>(
      ::google::protobuf::testing::UInt64Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->int32_wrapper_ = const_cast< ::google::protobuf::testing::Int32Wrapper*>(
      ::google::protobuf::testing::Int32Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->uint32_wrapper_ = const_cast< ::google::protobuf::testing::UInt32Wrapper*>(
      ::google::protobuf::testing::UInt32Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->bool_wrapper_ = const_cast< ::google::protobuf::testing::BoolWrapper*>(
      ::google::protobuf::testing::BoolWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->string_wrapper_ = const_cast< ::google::protobuf::testing::StringWrapper*>(
      ::google::protobuf::testing::StringWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->bytes_wrapper_ = const_cast< ::google::protobuf::testing::BytesWrapper*>(
      ::google::protobuf::testing::BytesWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->double_wrapper_default_ = const_cast< ::google::protobuf::testing::DoubleWrapper*>(
      ::google::protobuf::testing::DoubleWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->float_wrapper_default_ = const_cast< ::google::protobuf::testing::FloatWrapper*>(
      ::google::protobuf::testing::FloatWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->int64_wrapper_default_ = const_cast< ::google::protobuf::testing::Int64Wrapper*>(
      ::google::protobuf::testing::Int64Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->uint64_wrapper_default_ = const_cast< ::google::protobuf::testing::UInt64Wrapper*>(
      ::google::protobuf::testing::UInt64Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->int32_wrapper_default_ = const_cast< ::google::protobuf::testing::Int32Wrapper*>(
      ::google::protobuf::testing::Int32Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->uint32_wrapper_default_ = const_cast< ::google::protobuf::testing::UInt32Wrapper*>(
      ::google::protobuf::testing::UInt32Wrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->bool_wrapper_default_ = const_cast< ::google::protobuf::testing::BoolWrapper*>(
      ::google::protobuf::testing::BoolWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->string_wrapper_default_ = const_cast< ::google::protobuf::testing::StringWrapper*>(
      ::google::protobuf::testing::StringWrapper::internal_default_instance());
  ::google::protobuf::testing::_WrappersTestCases_default_instance_._instance.get_mutable()->bytes_wrapper_default_ = const_cast< ::google::protobuf::testing::BytesWrapper*>(
      ::google::protobuf::testing::BytesWrapper::internal_default_instance());
}
class WrappersTestCases::HasBitSetters {
 public:
  static const ::google::protobuf::testing::DoubleWrapper& double_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::FloatWrapper& float_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::Int64Wrapper& int64_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::UInt64Wrapper& uint64_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::Int32Wrapper& int32_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::UInt32Wrapper& uint32_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::BoolWrapper& bool_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::StringWrapper& string_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::BytesWrapper& bytes_wrapper(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::DoubleWrapper& double_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::FloatWrapper& float_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::Int64Wrapper& int64_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::UInt64Wrapper& uint64_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::Int32Wrapper& int32_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::UInt32Wrapper& uint32_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::BoolWrapper& bool_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::StringWrapper& string_wrapper_default(const WrappersTestCases* msg);
  static const ::google::protobuf::testing::BytesWrapper& bytes_wrapper_default(const WrappersTestCases* msg);
};

const ::google::protobuf::testing::DoubleWrapper&
WrappersTestCases::HasBitSetters::double_wrapper(const WrappersTestCases* msg) {
  return *msg->double_wrapper_;
}
const ::google::protobuf::testing::FloatWrapper&
WrappersTestCases::HasBitSetters::float_wrapper(const WrappersTestCases* msg) {
  return *msg->float_wrapper_;
}
const ::google::protobuf::testing::Int64Wrapper&
WrappersTestCases::HasBitSetters::int64_wrapper(const WrappersTestCases* msg) {
  return *msg->int64_wrapper_;
}
const ::google::protobuf::testing::UInt64Wrapper&
WrappersTestCases::HasBitSetters::uint64_wrapper(const WrappersTestCases* msg) {
  return *msg->uint64_wrapper_;
}
const ::google::protobuf::testing::Int32Wrapper&
WrappersTestCases::HasBitSetters::int32_wrapper(const WrappersTestCases* msg) {
  return *msg->int32_wrapper_;
}
const ::google::protobuf::testing::UInt32Wrapper&
WrappersTestCases::HasBitSetters::uint32_wrapper(const WrappersTestCases* msg) {
  return *msg->uint32_wrapper_;
}
const ::google::protobuf::testing::BoolWrapper&
WrappersTestCases::HasBitSetters::bool_wrapper(const WrappersTestCases* msg) {
  return *msg->bool_wrapper_;
}
const ::google::protobuf::testing::StringWrapper&
WrappersTestCases::HasBitSetters::string_wrapper(const WrappersTestCases* msg) {
  return *msg->string_wrapper_;
}
const ::google::protobuf::testing::BytesWrapper&
WrappersTestCases::HasBitSetters::bytes_wrapper(const WrappersTestCases* msg) {
  return *msg->bytes_wrapper_;
}
const ::google::protobuf::testing::DoubleWrapper&
WrappersTestCases::HasBitSetters::double_wrapper_default(const WrappersTestCases* msg) {
  return *msg->double_wrapper_default_;
}
const ::google::protobuf::testing::FloatWrapper&
WrappersTestCases::HasBitSetters::float_wrapper_default(const WrappersTestCases* msg) {
  return *msg->float_wrapper_default_;
}
const ::google::protobuf::testing::Int64Wrapper&
WrappersTestCases::HasBitSetters::int64_wrapper_default(const WrappersTestCases* msg) {
  return *msg->int64_wrapper_default_;
}
const ::google::protobuf::testing::UInt64Wrapper&
WrappersTestCases::HasBitSetters::uint64_wrapper_default(const WrappersTestCases* msg) {
  return *msg->uint64_wrapper_default_;
}
const ::google::protobuf::testing::Int32Wrapper&
WrappersTestCases::HasBitSetters::int32_wrapper_default(const WrappersTestCases* msg) {
  return *msg->int32_wrapper_default_;
}
const ::google::protobuf::testing::UInt32Wrapper&
WrappersTestCases::HasBitSetters::uint32_wrapper_default(const WrappersTestCases* msg) {
  return *msg->uint32_wrapper_default_;
}
const ::google::protobuf::testing::BoolWrapper&
WrappersTestCases::HasBitSetters::bool_wrapper_default(const WrappersTestCases* msg) {
  return *msg->bool_wrapper_default_;
}
const ::google::protobuf::testing::StringWrapper&
WrappersTestCases::HasBitSetters::string_wrapper_default(const WrappersTestCases* msg) {
  return *msg->string_wrapper_default_;
}
const ::google::protobuf::testing::BytesWrapper&
WrappersTestCases::HasBitSetters::bytes_wrapper_default(const WrappersTestCases* msg) {
  return *msg->bytes_wrapper_default_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WrappersTestCases::kDoubleWrapperFieldNumber;
const int WrappersTestCases::kFloatWrapperFieldNumber;
const int WrappersTestCases::kInt64WrapperFieldNumber;
const int WrappersTestCases::kUint64WrapperFieldNumber;
const int WrappersTestCases::kInt32WrapperFieldNumber;
const int WrappersTestCases::kUint32WrapperFieldNumber;
const int WrappersTestCases::kBoolWrapperFieldNumber;
const int WrappersTestCases::kStringWrapperFieldNumber;
const int WrappersTestCases::kBytesWrapperFieldNumber;
const int WrappersTestCases::kDoubleWrapperDefaultFieldNumber;
const int WrappersTestCases::kFloatWrapperDefaultFieldNumber;
const int WrappersTestCases::kInt64WrapperDefaultFieldNumber;
const int WrappersTestCases::kUint64WrapperDefaultFieldNumber;
const int WrappersTestCases::kInt32WrapperDefaultFieldNumber;
const int WrappersTestCases::kUint32WrapperDefaultFieldNumber;
const int WrappersTestCases::kBoolWrapperDefaultFieldNumber;
const int WrappersTestCases::kStringWrapperDefaultFieldNumber;
const int WrappersTestCases::kBytesWrapperDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WrappersTestCases::WrappersTestCases()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.WrappersTestCases)
}
WrappersTestCases::WrappersTestCases(const WrappersTestCases& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_double_wrapper()) {
    double_wrapper_ = new ::google::protobuf::testing::DoubleWrapper(*from.double_wrapper_);
  } else {
    double_wrapper_ = nullptr;
  }
  if (from.has_float_wrapper()) {
    float_wrapper_ = new ::google::protobuf::testing::FloatWrapper(*from.float_wrapper_);
  } else {
    float_wrapper_ = nullptr;
  }
  if (from.has_int64_wrapper()) {
    int64_wrapper_ = new ::google::protobuf::testing::Int64Wrapper(*from.int64_wrapper_);
  } else {
    int64_wrapper_ = nullptr;
  }
  if (from.has_uint64_wrapper()) {
    uint64_wrapper_ = new ::google::protobuf::testing::UInt64Wrapper(*from.uint64_wrapper_);
  } else {
    uint64_wrapper_ = nullptr;
  }
  if (from.has_int32_wrapper()) {
    int32_wrapper_ = new ::google::protobuf::testing::Int32Wrapper(*from.int32_wrapper_);
  } else {
    int32_wrapper_ = nullptr;
  }
  if (from.has_uint32_wrapper()) {
    uint32_wrapper_ = new ::google::protobuf::testing::UInt32Wrapper(*from.uint32_wrapper_);
  } else {
    uint32_wrapper_ = nullptr;
  }
  if (from.has_bool_wrapper()) {
    bool_wrapper_ = new ::google::protobuf::testing::BoolWrapper(*from.bool_wrapper_);
  } else {
    bool_wrapper_ = nullptr;
  }
  if (from.has_string_wrapper()) {
    string_wrapper_ = new ::google::protobuf::testing::StringWrapper(*from.string_wrapper_);
  } else {
    string_wrapper_ = nullptr;
  }
  if (from.has_bytes_wrapper()) {
    bytes_wrapper_ = new ::google::protobuf::testing::BytesWrapper(*from.bytes_wrapper_);
  } else {
    bytes_wrapper_ = nullptr;
  }
  if (from.has_double_wrapper_default()) {
    double_wrapper_default_ = new ::google::protobuf::testing::DoubleWrapper(*from.double_wrapper_default_);
  } else {
    double_wrapper_default_ = nullptr;
  }
  if (from.has_float_wrapper_default()) {
    float_wrapper_default_ = new ::google::protobuf::testing::FloatWrapper(*from.float_wrapper_default_);
  } else {
    float_wrapper_default_ = nullptr;
  }
  if (from.has_int64_wrapper_default()) {
    int64_wrapper_default_ = new ::google::protobuf::testing::Int64Wrapper(*from.int64_wrapper_default_);
  } else {
    int64_wrapper_default_ = nullptr;
  }
  if (from.has_uint64_wrapper_default()) {
    uint64_wrapper_default_ = new ::google::protobuf::testing::UInt64Wrapper(*from.uint64_wrapper_default_);
  } else {
    uint64_wrapper_default_ = nullptr;
  }
  if (from.has_int32_wrapper_default()) {
    int32_wrapper_default_ = new ::google::protobuf::testing::Int32Wrapper(*from.int32_wrapper_default_);
  } else {
    int32_wrapper_default_ = nullptr;
  }
  if (from.has_uint32_wrapper_default()) {
    uint32_wrapper_default_ = new ::google::protobuf::testing::UInt32Wrapper(*from.uint32_wrapper_default_);
  } else {
    uint32_wrapper_default_ = nullptr;
  }
  if (from.has_bool_wrapper_default()) {
    bool_wrapper_default_ = new ::google::protobuf::testing::BoolWrapper(*from.bool_wrapper_default_);
  } else {
    bool_wrapper_default_ = nullptr;
  }
  if (from.has_string_wrapper_default()) {
    string_wrapper_default_ = new ::google::protobuf::testing::StringWrapper(*from.string_wrapper_default_);
  } else {
    string_wrapper_default_ = nullptr;
  }
  if (from.has_bytes_wrapper_default()) {
    bytes_wrapper_default_ = new ::google::protobuf::testing::BytesWrapper(*from.bytes_wrapper_default_);
  } else {
    bytes_wrapper_default_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.WrappersTestCases)
}

void WrappersTestCases::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  ::memset(&double_wrapper_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_wrapper_default_) -
      reinterpret_cast<char*>(&double_wrapper_)) + sizeof(bytes_wrapper_default_));
}

WrappersTestCases::~WrappersTestCases() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.WrappersTestCases)
  SharedDtor();
}

void WrappersTestCases::SharedDtor() {
  if (this != internal_default_instance()) delete double_wrapper_;
  if (this != internal_default_instance()) delete float_wrapper_;
  if (this != internal_default_instance()) delete int64_wrapper_;
  if (this != internal_default_instance()) delete uint64_wrapper_;
  if (this != internal_default_instance()) delete int32_wrapper_;
  if (this != internal_default_instance()) delete uint32_wrapper_;
  if (this != internal_default_instance()) delete bool_wrapper_;
  if (this != internal_default_instance()) delete string_wrapper_;
  if (this != internal_default_instance()) delete bytes_wrapper_;
  if (this != internal_default_instance()) delete double_wrapper_default_;
  if (this != internal_default_instance()) delete float_wrapper_default_;
  if (this != internal_default_instance()) delete int64_wrapper_default_;
  if (this != internal_default_instance()) delete uint64_wrapper_default_;
  if (this != internal_default_instance()) delete int32_wrapper_default_;
  if (this != internal_default_instance()) delete uint32_wrapper_default_;
  if (this != internal_default_instance()) delete bool_wrapper_default_;
  if (this != internal_default_instance()) delete string_wrapper_default_;
  if (this != internal_default_instance()) delete bytes_wrapper_default_;
}

void WrappersTestCases::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WrappersTestCases& WrappersTestCases::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WrappersTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void WrappersTestCases::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.WrappersTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && double_wrapper_ != nullptr) {
    delete double_wrapper_;
  }
  double_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && float_wrapper_ != nullptr) {
    delete float_wrapper_;
  }
  float_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int64_wrapper_ != nullptr) {
    delete int64_wrapper_;
  }
  int64_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint64_wrapper_ != nullptr) {
    delete uint64_wrapper_;
  }
  uint64_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int32_wrapper_ != nullptr) {
    delete int32_wrapper_;
  }
  int32_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint32_wrapper_ != nullptr) {
    delete uint32_wrapper_;
  }
  uint32_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bool_wrapper_ != nullptr) {
    delete bool_wrapper_;
  }
  bool_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && string_wrapper_ != nullptr) {
    delete string_wrapper_;
  }
  string_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bytes_wrapper_ != nullptr) {
    delete bytes_wrapper_;
  }
  bytes_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && double_wrapper_default_ != nullptr) {
    delete double_wrapper_default_;
  }
  double_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && float_wrapper_default_ != nullptr) {
    delete float_wrapper_default_;
  }
  float_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int64_wrapper_default_ != nullptr) {
    delete int64_wrapper_default_;
  }
  int64_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint64_wrapper_default_ != nullptr) {
    delete uint64_wrapper_default_;
  }
  uint64_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int32_wrapper_default_ != nullptr) {
    delete int32_wrapper_default_;
  }
  int32_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && uint32_wrapper_default_ != nullptr) {
    delete uint32_wrapper_default_;
  }
  uint32_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bool_wrapper_default_ != nullptr) {
    delete bool_wrapper_default_;
  }
  bool_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && string_wrapper_default_ != nullptr) {
    delete string_wrapper_default_;
  }
  string_wrapper_default_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bytes_wrapper_default_ != nullptr) {
    delete bytes_wrapper_default_;
  }
  bytes_wrapper_default_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WrappersTestCases::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WrappersTestCases*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.testing.DoubleWrapper double_wrapper = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::DoubleWrapper::_InternalParse;
        object = msg->mutable_double_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.FloatWrapper float_wrapper = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::FloatWrapper::_InternalParse;
        object = msg->mutable_float_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.Int64Wrapper int64_wrapper = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Int64Wrapper::_InternalParse;
        object = msg->mutable_int64_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.UInt64Wrapper uint64_wrapper = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::UInt64Wrapper::_InternalParse;
        object = msg->mutable_uint64_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.Int32Wrapper int32_wrapper = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Int32Wrapper::_InternalParse;
        object = msg->mutable_int32_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.UInt32Wrapper uint32_wrapper = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::UInt32Wrapper::_InternalParse;
        object = msg->mutable_uint32_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.BoolWrapper bool_wrapper = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::BoolWrapper::_InternalParse;
        object = msg->mutable_bool_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StringWrapper string_wrapper = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StringWrapper::_InternalParse;
        object = msg->mutable_string_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.BytesWrapper bytes_wrapper = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::BytesWrapper::_InternalParse;
        object = msg->mutable_bytes_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.DoubleWrapper double_wrapper_default = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::DoubleWrapper::_InternalParse;
        object = msg->mutable_double_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.FloatWrapper float_wrapper_default = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::FloatWrapper::_InternalParse;
        object = msg->mutable_float_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.Int64Wrapper int64_wrapper_default = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Int64Wrapper::_InternalParse;
        object = msg->mutable_int64_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.UInt64Wrapper uint64_wrapper_default = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::UInt64Wrapper::_InternalParse;
        object = msg->mutable_uint64_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.Int32Wrapper int32_wrapper_default = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Int32Wrapper::_InternalParse;
        object = msg->mutable_int32_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.UInt32Wrapper uint32_wrapper_default = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::UInt32Wrapper::_InternalParse;
        object = msg->mutable_uint32_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.BoolWrapper bool_wrapper_default = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::BoolWrapper::_InternalParse;
        object = msg->mutable_bool_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StringWrapper string_wrapper_default = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StringWrapper::_InternalParse;
        object = msg->mutable_string_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.BytesWrapper bytes_wrapper_default = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::BytesWrapper::_InternalParse;
        object = msg->mutable_bytes_wrapper_default();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WrappersTestCases::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.WrappersTestCases)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.testing.DoubleWrapper double_wrapper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.FloatWrapper float_wrapper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Int64Wrapper int64_wrapper = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.UInt64Wrapper uint64_wrapper = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Int32Wrapper int32_wrapper = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.UInt32Wrapper uint32_wrapper = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.BoolWrapper bool_wrapper = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StringWrapper string_wrapper = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.BytesWrapper bytes_wrapper = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.DoubleWrapper double_wrapper_default = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.FloatWrapper float_wrapper_default = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Int64Wrapper int64_wrapper_default = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.UInt64Wrapper uint64_wrapper_default = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Int32Wrapper int32_wrapper_default = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int32_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.UInt32Wrapper uint32_wrapper_default = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.BoolWrapper bool_wrapper_default = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StringWrapper string_wrapper_default = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.BytesWrapper bytes_wrapper_default = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes_wrapper_default()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.WrappersTestCases)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.WrappersTestCases)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WrappersTestCases::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.WrappersTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.DoubleWrapper double_wrapper = 1;
  if (this->has_double_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::double_wrapper(this), output);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper = 2;
  if (this->has_float_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::float_wrapper(this), output);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper = 3;
  if (this->has_int64_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::int64_wrapper(this), output);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper = 4;
  if (this->has_uint64_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::uint64_wrapper(this), output);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper = 5;
  if (this->has_int32_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::int32_wrapper(this), output);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper = 6;
  if (this->has_uint32_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::uint32_wrapper(this), output);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper = 7;
  if (this->has_bool_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::bool_wrapper(this), output);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper = 8;
  if (this->has_string_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::string_wrapper(this), output);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper = 9;
  if (this->has_bytes_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::bytes_wrapper(this), output);
  }

  // .google.protobuf.testing.DoubleWrapper double_wrapper_default = 10;
  if (this->has_double_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::double_wrapper_default(this), output);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper_default = 11;
  if (this->has_float_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::float_wrapper_default(this), output);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper_default = 12;
  if (this->has_int64_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::int64_wrapper_default(this), output);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper_default = 13;
  if (this->has_uint64_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::uint64_wrapper_default(this), output);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper_default = 14;
  if (this->has_int32_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::int32_wrapper_default(this), output);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper_default = 15;
  if (this->has_uint32_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::uint32_wrapper_default(this), output);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper_default = 16;
  if (this->has_bool_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::bool_wrapper_default(this), output);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper_default = 17;
  if (this->has_string_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::string_wrapper_default(this), output);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper_default = 18;
  if (this->has_bytes_wrapper_default()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, HasBitSetters::bytes_wrapper_default(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.WrappersTestCases)
}

::google::protobuf::uint8* WrappersTestCases::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.WrappersTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.DoubleWrapper double_wrapper = 1;
  if (this->has_double_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::double_wrapper(this), target);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper = 2;
  if (this->has_float_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::float_wrapper(this), target);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper = 3;
  if (this->has_int64_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::int64_wrapper(this), target);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper = 4;
  if (this->has_uint64_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::uint64_wrapper(this), target);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper = 5;
  if (this->has_int32_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::int32_wrapper(this), target);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper = 6;
  if (this->has_uint32_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::uint32_wrapper(this), target);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper = 7;
  if (this->has_bool_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::bool_wrapper(this), target);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper = 8;
  if (this->has_string_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::string_wrapper(this), target);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper = 9;
  if (this->has_bytes_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::bytes_wrapper(this), target);
  }

  // .google.protobuf.testing.DoubleWrapper double_wrapper_default = 10;
  if (this->has_double_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::double_wrapper_default(this), target);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper_default = 11;
  if (this->has_float_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::float_wrapper_default(this), target);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper_default = 12;
  if (this->has_int64_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::int64_wrapper_default(this), target);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper_default = 13;
  if (this->has_uint64_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::uint64_wrapper_default(this), target);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper_default = 14;
  if (this->has_int32_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::int32_wrapper_default(this), target);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper_default = 15;
  if (this->has_uint32_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::uint32_wrapper_default(this), target);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper_default = 16;
  if (this->has_bool_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::bool_wrapper_default(this), target);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper_default = 17;
  if (this->has_string_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::string_wrapper_default(this), target);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper_default = 18;
  if (this->has_bytes_wrapper_default()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, HasBitSetters::bytes_wrapper_default(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.WrappersTestCases)
  return target;
}

size_t WrappersTestCases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.WrappersTestCases)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.testing.DoubleWrapper double_wrapper = 1;
  if (this->has_double_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *double_wrapper_);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper = 2;
  if (this->has_float_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *float_wrapper_);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper = 3;
  if (this->has_int64_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int64_wrapper_);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper = 4;
  if (this->has_uint64_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint64_wrapper_);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper = 5;
  if (this->has_int32_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int32_wrapper_);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper = 6;
  if (this->has_uint32_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint32_wrapper_);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper = 7;
  if (this->has_bool_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bool_wrapper_);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper = 8;
  if (this->has_string_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *string_wrapper_);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper = 9;
  if (this->has_bytes_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bytes_wrapper_);
  }

  // .google.protobuf.testing.DoubleWrapper double_wrapper_default = 10;
  if (this->has_double_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *double_wrapper_default_);
  }

  // .google.protobuf.testing.FloatWrapper float_wrapper_default = 11;
  if (this->has_float_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *float_wrapper_default_);
  }

  // .google.protobuf.testing.Int64Wrapper int64_wrapper_default = 12;
  if (this->has_int64_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int64_wrapper_default_);
  }

  // .google.protobuf.testing.UInt64Wrapper uint64_wrapper_default = 13;
  if (this->has_uint64_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint64_wrapper_default_);
  }

  // .google.protobuf.testing.Int32Wrapper int32_wrapper_default = 14;
  if (this->has_int32_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int32_wrapper_default_);
  }

  // .google.protobuf.testing.UInt32Wrapper uint32_wrapper_default = 15;
  if (this->has_uint32_wrapper_default()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint32_wrapper_default_);
  }

  // .google.protobuf.testing.BoolWrapper bool_wrapper_default = 16;
  if (this->has_bool_wrapper_default()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bool_wrapper_default_);
  }

  // .google.protobuf.testing.StringWrapper string_wrapper_default = 17;
  if (this->has_string_wrapper_default()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *string_wrapper_default_);
  }

  // .google.protobuf.testing.BytesWrapper bytes_wrapper_default = 18;
  if (this->has_bytes_wrapper_default()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bytes_wrapper_default_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WrappersTestCases::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.WrappersTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  const WrappersTestCases* source =
      ::google::protobuf::DynamicCastToGenerated<WrappersTestCases>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.WrappersTestCases)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.WrappersTestCases)
    MergeFrom(*source);
  }
}

void WrappersTestCases::MergeFrom(const WrappersTestCases& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.WrappersTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_double_wrapper()) {
    mutable_double_wrapper()->::google::protobuf::testing::DoubleWrapper::MergeFrom(from.double_wrapper());
  }
  if (from.has_float_wrapper()) {
    mutable_float_wrapper()->::google::protobuf::testing::FloatWrapper::MergeFrom(from.float_wrapper());
  }
  if (from.has_int64_wrapper()) {
    mutable_int64_wrapper()->::google::protobuf::testing::Int64Wrapper::MergeFrom(from.int64_wrapper());
  }
  if (from.has_uint64_wrapper()) {
    mutable_uint64_wrapper()->::google::protobuf::testing::UInt64Wrapper::MergeFrom(from.uint64_wrapper());
  }
  if (from.has_int32_wrapper()) {
    mutable_int32_wrapper()->::google::protobuf::testing::Int32Wrapper::MergeFrom(from.int32_wrapper());
  }
  if (from.has_uint32_wrapper()) {
    mutable_uint32_wrapper()->::google::protobuf::testing::UInt32Wrapper::MergeFrom(from.uint32_wrapper());
  }
  if (from.has_bool_wrapper()) {
    mutable_bool_wrapper()->::google::protobuf::testing::BoolWrapper::MergeFrom(from.bool_wrapper());
  }
  if (from.has_string_wrapper()) {
    mutable_string_wrapper()->::google::protobuf::testing::StringWrapper::MergeFrom(from.string_wrapper());
  }
  if (from.has_bytes_wrapper()) {
    mutable_bytes_wrapper()->::google::protobuf::testing::BytesWrapper::MergeFrom(from.bytes_wrapper());
  }
  if (from.has_double_wrapper_default()) {
    mutable_double_wrapper_default()->::google::protobuf::testing::DoubleWrapper::MergeFrom(from.double_wrapper_default());
  }
  if (from.has_float_wrapper_default()) {
    mutable_float_wrapper_default()->::google::protobuf::testing::FloatWrapper::MergeFrom(from.float_wrapper_default());
  }
  if (from.has_int64_wrapper_default()) {
    mutable_int64_wrapper_default()->::google::protobuf::testing::Int64Wrapper::MergeFrom(from.int64_wrapper_default());
  }
  if (from.has_uint64_wrapper_default()) {
    mutable_uint64_wrapper_default()->::google::protobuf::testing::UInt64Wrapper::MergeFrom(from.uint64_wrapper_default());
  }
  if (from.has_int32_wrapper_default()) {
    mutable_int32_wrapper_default()->::google::protobuf::testing::Int32Wrapper::MergeFrom(from.int32_wrapper_default());
  }
  if (from.has_uint32_wrapper_default()) {
    mutable_uint32_wrapper_default()->::google::protobuf::testing::UInt32Wrapper::MergeFrom(from.uint32_wrapper_default());
  }
  if (from.has_bool_wrapper_default()) {
    mutable_bool_wrapper_default()->::google::protobuf::testing::BoolWrapper::MergeFrom(from.bool_wrapper_default());
  }
  if (from.has_string_wrapper_default()) {
    mutable_string_wrapper_default()->::google::protobuf::testing::StringWrapper::MergeFrom(from.string_wrapper_default());
  }
  if (from.has_bytes_wrapper_default()) {
    mutable_bytes_wrapper_default()->::google::protobuf::testing::BytesWrapper::MergeFrom(from.bytes_wrapper_default());
  }
}

void WrappersTestCases::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.WrappersTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WrappersTestCases::CopyFrom(const WrappersTestCases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.WrappersTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WrappersTestCases::IsInitialized() const {
  return true;
}

void WrappersTestCases::Swap(WrappersTestCases* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WrappersTestCases::InternalSwap(WrappersTestCases* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(double_wrapper_, other->double_wrapper_);
  swap(float_wrapper_, other->float_wrapper_);
  swap(int64_wrapper_, other->int64_wrapper_);
  swap(uint64_wrapper_, other->uint64_wrapper_);
  swap(int32_wrapper_, other->int32_wrapper_);
  swap(uint32_wrapper_, other->uint32_wrapper_);
  swap(bool_wrapper_, other->bool_wrapper_);
  swap(string_wrapper_, other->string_wrapper_);
  swap(bytes_wrapper_, other->bytes_wrapper_);
  swap(double_wrapper_default_, other->double_wrapper_default_);
  swap(float_wrapper_default_, other->float_wrapper_default_);
  swap(int64_wrapper_default_, other->int64_wrapper_default_);
  swap(uint64_wrapper_default_, other->uint64_wrapper_default_);
  swap(int32_wrapper_default_, other->int32_wrapper_default_);
  swap(uint32_wrapper_default_, other->uint32_wrapper_default_);
  swap(bool_wrapper_default_, other->bool_wrapper_default_);
  swap(string_wrapper_default_, other->string_wrapper_default_);
  swap(bytes_wrapper_default_, other->bytes_wrapper_default_);
}

::google::protobuf::Metadata WrappersTestCases::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DoubleWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_DoubleWrapper_default_instance_._instance.get_mutable()->double__ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
class DoubleWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::DoubleValue& double_(const DoubleWrapper* msg);
};

const ::google::protobuf::DoubleValue&
DoubleWrapper::HasBitSetters::double_(const DoubleWrapper* msg) {
  return *msg->double__;
}
void DoubleWrapper::clear_double_() {
  if (GetArenaNoVirtual() == nullptr && double__ != nullptr) {
    delete double__;
  }
  double__ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleWrapper::kDoubleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleWrapper::DoubleWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.DoubleWrapper)
}
DoubleWrapper::DoubleWrapper(const DoubleWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_double_()) {
    double__ = new ::google::protobuf::DoubleValue(*from.double__);
  } else {
    double__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.DoubleWrapper)
}

void DoubleWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  double__ = nullptr;
}

DoubleWrapper::~DoubleWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.DoubleWrapper)
  SharedDtor();
}

void DoubleWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete double__;
}

void DoubleWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DoubleWrapper& DoubleWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DoubleWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void DoubleWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.DoubleWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && double__ != nullptr) {
    delete double__;
  }
  double__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DoubleWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DoubleWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.DoubleValue double = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::DoubleValue::_InternalParse;
        object = msg->mutable_double_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DoubleWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.DoubleWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_double_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.DoubleWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.DoubleWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DoubleWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.DoubleWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue double = 1;
  if (this->has_double_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::double_(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.DoubleWrapper)
}

::google::protobuf::uint8* DoubleWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.DoubleWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue double = 1;
  if (this->has_double_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::double_(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.DoubleWrapper)
  return target;
}

size_t DoubleWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.DoubleWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue double = 1;
  if (this->has_double_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *double__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoubleWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.DoubleWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<DoubleWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.DoubleWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.DoubleWrapper)
    MergeFrom(*source);
  }
}

void DoubleWrapper::MergeFrom(const DoubleWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.DoubleWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_double_()) {
    mutable_double_()->::google::protobuf::DoubleValue::MergeFrom(from.double_());
  }
}

void DoubleWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.DoubleWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleWrapper::CopyFrom(const DoubleWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.DoubleWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleWrapper::IsInitialized() const {
  return true;
}

void DoubleWrapper::Swap(DoubleWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleWrapper::InternalSwap(DoubleWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(double__, other->double__);
}

::google::protobuf::Metadata DoubleWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FloatWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_FloatWrapper_default_instance_._instance.get_mutable()->float__ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
}
class FloatWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::FloatValue& float_(const FloatWrapper* msg);
};

const ::google::protobuf::FloatValue&
FloatWrapper::HasBitSetters::float_(const FloatWrapper* msg) {
  return *msg->float__;
}
void FloatWrapper::clear_float_() {
  if (GetArenaNoVirtual() == nullptr && float__ != nullptr) {
    delete float__;
  }
  float__ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatWrapper::kFloatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatWrapper::FloatWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.FloatWrapper)
}
FloatWrapper::FloatWrapper(const FloatWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_float_()) {
    float__ = new ::google::protobuf::FloatValue(*from.float__);
  } else {
    float__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.FloatWrapper)
}

void FloatWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  float__ = nullptr;
}

FloatWrapper::~FloatWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.FloatWrapper)
  SharedDtor();
}

void FloatWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete float__;
}

void FloatWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatWrapper& FloatWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FloatWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void FloatWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.FloatWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && float__ != nullptr) {
    delete float__;
  }
  float__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FloatWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FloatWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.FloatValue float = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::FloatValue::_InternalParse;
        object = msg->mutable_float_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FloatWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.FloatWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.FloatValue float = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_float_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.FloatWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.FloatWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FloatWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.FloatWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue float = 1;
  if (this->has_float_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::float_(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.FloatWrapper)
}

::google::protobuf::uint8* FloatWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.FloatWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.FloatValue float = 1;
  if (this->has_float_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::float_(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.FloatWrapper)
  return target;
}

size_t FloatWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.FloatWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.FloatValue float = 1;
  if (this->has_float_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *float__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.FloatWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<FloatWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.FloatWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.FloatWrapper)
    MergeFrom(*source);
  }
}

void FloatWrapper::MergeFrom(const FloatWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.FloatWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_float_()) {
    mutable_float_()->::google::protobuf::FloatValue::MergeFrom(from.float_());
  }
}

void FloatWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.FloatWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatWrapper::CopyFrom(const FloatWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.FloatWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatWrapper::IsInitialized() const {
  return true;
}

void FloatWrapper::Swap(FloatWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatWrapper::InternalSwap(FloatWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(float__, other->float__);
}

::google::protobuf::Metadata FloatWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Int64Wrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_Int64Wrapper_default_instance_._instance.get_mutable()->int64_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
}
class Int64Wrapper::HasBitSetters {
 public:
  static const ::google::protobuf::Int64Value& int64(const Int64Wrapper* msg);
};

const ::google::protobuf::Int64Value&
Int64Wrapper::HasBitSetters::int64(const Int64Wrapper* msg) {
  return *msg->int64_;
}
void Int64Wrapper::clear_int64() {
  if (GetArenaNoVirtual() == nullptr && int64_ != nullptr) {
    delete int64_;
  }
  int64_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Wrapper::kInt64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Wrapper::Int64Wrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.Int64Wrapper)
}
Int64Wrapper::Int64Wrapper(const Int64Wrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_int64()) {
    int64_ = new ::google::protobuf::Int64Value(*from.int64_);
  } else {
    int64_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.Int64Wrapper)
}

void Int64Wrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  int64_ = nullptr;
}

Int64Wrapper::~Int64Wrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.Int64Wrapper)
  SharedDtor();
}

void Int64Wrapper::SharedDtor() {
  if (this != internal_default_instance()) delete int64_;
}

void Int64Wrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Int64Wrapper& Int64Wrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Int64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void Int64Wrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.Int64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && int64_ != nullptr) {
    delete int64_;
  }
  int64_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Int64Wrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Int64Wrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Int64Value int64 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int64Value::_InternalParse;
        object = msg->mutable_int64();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Int64Wrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.Int64Wrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int64Value int64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.Int64Wrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.Int64Wrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Int64Wrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.Int64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value int64 = 1;
  if (this->has_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::int64(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.Int64Wrapper)
}

::google::protobuf::uint8* Int64Wrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.Int64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int64Value int64 = 1;
  if (this->has_int64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::int64(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.Int64Wrapper)
  return target;
}

size_t Int64Wrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.Int64Wrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int64Value int64 = 1;
  if (this->has_int64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int64_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64Wrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.Int64Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64Wrapper* source =
      ::google::protobuf::DynamicCastToGenerated<Int64Wrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.Int64Wrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.Int64Wrapper)
    MergeFrom(*source);
  }
}

void Int64Wrapper::MergeFrom(const Int64Wrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.Int64Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_int64()) {
    mutable_int64()->::google::protobuf::Int64Value::MergeFrom(from.int64());
  }
}

void Int64Wrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.Int64Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Wrapper::CopyFrom(const Int64Wrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.Int64Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Wrapper::IsInitialized() const {
  return true;
}

void Int64Wrapper::Swap(Int64Wrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64Wrapper::InternalSwap(Int64Wrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(int64_, other->int64_);
}

::google::protobuf::Metadata Int64Wrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UInt64Wrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_UInt64Wrapper_default_instance_._instance.get_mutable()->uint64_ = const_cast< ::google::protobuf::UInt64Value*>(
      ::google::protobuf::UInt64Value::internal_default_instance());
}
class UInt64Wrapper::HasBitSetters {
 public:
  static const ::google::protobuf::UInt64Value& uint64(const UInt64Wrapper* msg);
};

const ::google::protobuf::UInt64Value&
UInt64Wrapper::HasBitSetters::uint64(const UInt64Wrapper* msg) {
  return *msg->uint64_;
}
void UInt64Wrapper::clear_uint64() {
  if (GetArenaNoVirtual() == nullptr && uint64_ != nullptr) {
    delete uint64_;
  }
  uint64_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt64Wrapper::kUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt64Wrapper::UInt64Wrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.UInt64Wrapper)
}
UInt64Wrapper::UInt64Wrapper(const UInt64Wrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uint64()) {
    uint64_ = new ::google::protobuf::UInt64Value(*from.uint64_);
  } else {
    uint64_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.UInt64Wrapper)
}

void UInt64Wrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  uint64_ = nullptr;
}

UInt64Wrapper::~UInt64Wrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.UInt64Wrapper)
  SharedDtor();
}

void UInt64Wrapper::SharedDtor() {
  if (this != internal_default_instance()) delete uint64_;
}

void UInt64Wrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UInt64Wrapper& UInt64Wrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UInt64Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void UInt64Wrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.UInt64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && uint64_ != nullptr) {
    delete uint64_;
  }
  uint64_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UInt64Wrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UInt64Wrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.UInt64Value uint64 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::UInt64Value::_InternalParse;
        object = msg->mutable_uint64();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UInt64Wrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.UInt64Wrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.UInt64Value uint64 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.UInt64Wrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.UInt64Wrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UInt64Wrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.UInt64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.UInt64Value uint64 = 1;
  if (this->has_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::uint64(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.UInt64Wrapper)
}

::google::protobuf::uint8* UInt64Wrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.UInt64Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.UInt64Value uint64 = 1;
  if (this->has_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::uint64(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.UInt64Wrapper)
  return target;
}

size_t UInt64Wrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.UInt64Wrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.UInt64Value uint64 = 1;
  if (this->has_uint64()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint64_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UInt64Wrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.UInt64Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt64Wrapper* source =
      ::google::protobuf::DynamicCastToGenerated<UInt64Wrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.UInt64Wrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.UInt64Wrapper)
    MergeFrom(*source);
  }
}

void UInt64Wrapper::MergeFrom(const UInt64Wrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.UInt64Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uint64()) {
    mutable_uint64()->::google::protobuf::UInt64Value::MergeFrom(from.uint64());
  }
}

void UInt64Wrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.UInt64Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt64Wrapper::CopyFrom(const UInt64Wrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.UInt64Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt64Wrapper::IsInitialized() const {
  return true;
}

void UInt64Wrapper::Swap(UInt64Wrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt64Wrapper::InternalSwap(UInt64Wrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uint64_, other->uint64_);
}

::google::protobuf::Metadata UInt64Wrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Int32Wrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_Int32Wrapper_default_instance_._instance.get_mutable()->int32_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
}
class Int32Wrapper::HasBitSetters {
 public:
  static const ::google::protobuf::Int32Value& int32(const Int32Wrapper* msg);
};

const ::google::protobuf::Int32Value&
Int32Wrapper::HasBitSetters::int32(const Int32Wrapper* msg) {
  return *msg->int32_;
}
void Int32Wrapper::clear_int32() {
  if (GetArenaNoVirtual() == nullptr && int32_ != nullptr) {
    delete int32_;
  }
  int32_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32Wrapper::kInt32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32Wrapper::Int32Wrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.Int32Wrapper)
}
Int32Wrapper::Int32Wrapper(const Int32Wrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_int32()) {
    int32_ = new ::google::protobuf::Int32Value(*from.int32_);
  } else {
    int32_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.Int32Wrapper)
}

void Int32Wrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  int32_ = nullptr;
}

Int32Wrapper::~Int32Wrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.Int32Wrapper)
  SharedDtor();
}

void Int32Wrapper::SharedDtor() {
  if (this != internal_default_instance()) delete int32_;
}

void Int32Wrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Int32Wrapper& Int32Wrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Int32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void Int32Wrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.Int32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && int32_ != nullptr) {
    delete int32_;
  }
  int32_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Int32Wrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Int32Wrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Int32Value int32 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_int32();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Int32Wrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.Int32Wrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Int32Value int32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.Int32Wrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.Int32Wrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Int32Wrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.Int32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int32Value int32 = 1;
  if (this->has_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::int32(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.Int32Wrapper)
}

::google::protobuf::uint8* Int32Wrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.Int32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Int32Value int32 = 1;
  if (this->has_int32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::int32(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.Int32Wrapper)
  return target;
}

size_t Int32Wrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.Int32Wrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Int32Value int32 = 1;
  if (this->has_int32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int32_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int32Wrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.Int32Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const Int32Wrapper* source =
      ::google::protobuf::DynamicCastToGenerated<Int32Wrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.Int32Wrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.Int32Wrapper)
    MergeFrom(*source);
  }
}

void Int32Wrapper::MergeFrom(const Int32Wrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.Int32Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_int32()) {
    mutable_int32()->::google::protobuf::Int32Value::MergeFrom(from.int32());
  }
}

void Int32Wrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.Int32Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int32Wrapper::CopyFrom(const Int32Wrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.Int32Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int32Wrapper::IsInitialized() const {
  return true;
}

void Int32Wrapper::Swap(Int32Wrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32Wrapper::InternalSwap(Int32Wrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(int32_, other->int32_);
}

::google::protobuf::Metadata Int32Wrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UInt32Wrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_UInt32Wrapper_default_instance_._instance.get_mutable()->uint32_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
}
class UInt32Wrapper::HasBitSetters {
 public:
  static const ::google::protobuf::UInt32Value& uint32(const UInt32Wrapper* msg);
};

const ::google::protobuf::UInt32Value&
UInt32Wrapper::HasBitSetters::uint32(const UInt32Wrapper* msg) {
  return *msg->uint32_;
}
void UInt32Wrapper::clear_uint32() {
  if (GetArenaNoVirtual() == nullptr && uint32_ != nullptr) {
    delete uint32_;
  }
  uint32_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt32Wrapper::kUint32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt32Wrapper::UInt32Wrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.UInt32Wrapper)
}
UInt32Wrapper::UInt32Wrapper(const UInt32Wrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uint32()) {
    uint32_ = new ::google::protobuf::UInt32Value(*from.uint32_);
  } else {
    uint32_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.UInt32Wrapper)
}

void UInt32Wrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  uint32_ = nullptr;
}

UInt32Wrapper::~UInt32Wrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.UInt32Wrapper)
  SharedDtor();
}

void UInt32Wrapper::SharedDtor() {
  if (this != internal_default_instance()) delete uint32_;
}

void UInt32Wrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UInt32Wrapper& UInt32Wrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UInt32Wrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void UInt32Wrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.UInt32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && uint32_ != nullptr) {
    delete uint32_;
  }
  uint32_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UInt32Wrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UInt32Wrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.UInt32Value uint32 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::UInt32Value::_InternalParse;
        object = msg->mutable_uint32();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UInt32Wrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.UInt32Wrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.UInt32Value uint32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.UInt32Wrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.UInt32Wrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UInt32Wrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.UInt32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.UInt32Value uint32 = 1;
  if (this->has_uint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::uint32(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.UInt32Wrapper)
}

::google::protobuf::uint8* UInt32Wrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.UInt32Wrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.UInt32Value uint32 = 1;
  if (this->has_uint32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::uint32(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.UInt32Wrapper)
  return target;
}

size_t UInt32Wrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.UInt32Wrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.UInt32Value uint32 = 1;
  if (this->has_uint32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uint32_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UInt32Wrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.UInt32Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt32Wrapper* source =
      ::google::protobuf::DynamicCastToGenerated<UInt32Wrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.UInt32Wrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.UInt32Wrapper)
    MergeFrom(*source);
  }
}

void UInt32Wrapper::MergeFrom(const UInt32Wrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.UInt32Wrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uint32()) {
    mutable_uint32()->::google::protobuf::UInt32Value::MergeFrom(from.uint32());
  }
}

void UInt32Wrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.UInt32Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt32Wrapper::CopyFrom(const UInt32Wrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.UInt32Wrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt32Wrapper::IsInitialized() const {
  return true;
}

void UInt32Wrapper::Swap(UInt32Wrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt32Wrapper::InternalSwap(UInt32Wrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(uint32_, other->uint32_);
}

::google::protobuf::Metadata UInt32Wrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BoolWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_BoolWrapper_default_instance_._instance.get_mutable()->bool__ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
}
class BoolWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::BoolValue& bool_(const BoolWrapper* msg);
};

const ::google::protobuf::BoolValue&
BoolWrapper::HasBitSetters::bool_(const BoolWrapper* msg) {
  return *msg->bool__;
}
void BoolWrapper::clear_bool_() {
  if (GetArenaNoVirtual() == nullptr && bool__ != nullptr) {
    delete bool__;
  }
  bool__ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoolWrapper::kBoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoolWrapper::BoolWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.BoolWrapper)
}
BoolWrapper::BoolWrapper(const BoolWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bool_()) {
    bool__ = new ::google::protobuf::BoolValue(*from.bool__);
  } else {
    bool__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.BoolWrapper)
}

void BoolWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  bool__ = nullptr;
}

BoolWrapper::~BoolWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.BoolWrapper)
  SharedDtor();
}

void BoolWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete bool__;
}

void BoolWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BoolWrapper& BoolWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BoolWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void BoolWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.BoolWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && bool__ != nullptr) {
    delete bool__;
  }
  bool__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BoolWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BoolWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.BoolValue bool = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BoolValue::_InternalParse;
        object = msg->mutable_bool_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BoolWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.BoolWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BoolValue bool = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.BoolWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.BoolWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BoolWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.BoolWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue bool = 1;
  if (this->has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::bool_(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.BoolWrapper)
}

::google::protobuf::uint8* BoolWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.BoolWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BoolValue bool = 1;
  if (this->has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::bool_(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.BoolWrapper)
  return target;
}

size_t BoolWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.BoolWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BoolValue bool = 1;
  if (this->has_bool_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bool__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoolWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.BoolWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const BoolWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<BoolWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.BoolWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.BoolWrapper)
    MergeFrom(*source);
  }
}

void BoolWrapper::MergeFrom(const BoolWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.BoolWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bool_()) {
    mutable_bool_()->::google::protobuf::BoolValue::MergeFrom(from.bool_());
  }
}

void BoolWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.BoolWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoolWrapper::CopyFrom(const BoolWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.BoolWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoolWrapper::IsInitialized() const {
  return true;
}

void BoolWrapper::Swap(BoolWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoolWrapper::InternalSwap(BoolWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bool__, other->bool__);
}

::google::protobuf::Metadata BoolWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StringWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_StringWrapper_default_instance_._instance.get_mutable()->string_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
class StringWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::StringValue& string(const StringWrapper* msg);
};

const ::google::protobuf::StringValue&
StringWrapper::HasBitSetters::string(const StringWrapper* msg) {
  return *msg->string_;
}
void StringWrapper::clear_string() {
  if (GetArenaNoVirtual() == nullptr && string_ != nullptr) {
    delete string_;
  }
  string_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringWrapper::kStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringWrapper::StringWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.StringWrapper)
}
StringWrapper::StringWrapper(const StringWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_string()) {
    string_ = new ::google::protobuf::StringValue(*from.string_);
  } else {
    string_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.StringWrapper)
}

void StringWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  string_ = nullptr;
}

StringWrapper::~StringWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.StringWrapper)
  SharedDtor();
}

void StringWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete string_;
}

void StringWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringWrapper& StringWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StringWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void StringWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.StringWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && string_ != nullptr) {
    delete string_;
  }
  string_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StringWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StringWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue string = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::StringValue::_InternalParse;
        object = msg->mutable_string();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StringWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.StringWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.StringValue string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.StringWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.StringWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StringWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.StringWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue string = 1;
  if (this->has_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::string(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.StringWrapper)
}

::google::protobuf::uint8* StringWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.StringWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue string = 1;
  if (this->has_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::string(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.StringWrapper)
  return target;
}

size_t StringWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.StringWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue string = 1;
  if (this->has_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *string_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.StringWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const StringWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<StringWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.StringWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.StringWrapper)
    MergeFrom(*source);
  }
}

void StringWrapper::MergeFrom(const StringWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.StringWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_string()) {
    mutable_string()->::google::protobuf::StringValue::MergeFrom(from.string());
  }
}

void StringWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.StringWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringWrapper::CopyFrom(const StringWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.StringWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringWrapper::IsInitialized() const {
  return true;
}

void StringWrapper::Swap(StringWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringWrapper::InternalSwap(StringWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(string_, other->string_);
}

::google::protobuf::Metadata StringWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BytesWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_BytesWrapper_default_instance_._instance.get_mutable()->bytes_ = const_cast< ::google::protobuf::BytesValue*>(
      ::google::protobuf::BytesValue::internal_default_instance());
}
class BytesWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::BytesValue& bytes(const BytesWrapper* msg);
};

const ::google::protobuf::BytesValue&
BytesWrapper::HasBitSetters::bytes(const BytesWrapper* msg) {
  return *msg->bytes_;
}
void BytesWrapper::clear_bytes() {
  if (GetArenaNoVirtual() == nullptr && bytes_ != nullptr) {
    delete bytes_;
  }
  bytes_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesWrapper::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesWrapper::BytesWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.BytesWrapper)
}
BytesWrapper::BytesWrapper(const BytesWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bytes()) {
    bytes_ = new ::google::protobuf::BytesValue(*from.bytes_);
  } else {
    bytes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.BytesWrapper)
}

void BytesWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  bytes_ = nullptr;
}

BytesWrapper::~BytesWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.BytesWrapper)
  SharedDtor();
}

void BytesWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete bytes_;
}

void BytesWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BytesWrapper& BytesWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BytesWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto.base);
  return *internal_default_instance();
}


void BytesWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.BytesWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && bytes_ != nullptr) {
    delete bytes_;
  }
  bytes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BytesWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BytesWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.BytesValue bytes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::BytesValue::_InternalParse;
        object = msg->mutable_bytes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BytesWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.BytesWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.BytesValue bytes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.BytesWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.BytesWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BytesWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.BytesWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BytesValue bytes = 1;
  if (this->has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::bytes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.BytesWrapper)
}

::google::protobuf::uint8* BytesWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.BytesWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.BytesValue bytes = 1;
  if (this->has_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::bytes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.BytesWrapper)
  return target;
}

size_t BytesWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.BytesWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.BytesValue bytes = 1;
  if (this->has_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bytes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BytesWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.BytesWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<BytesWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.BytesWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.BytesWrapper)
    MergeFrom(*source);
  }
}

void BytesWrapper::MergeFrom(const BytesWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.BytesWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bytes()) {
    mutable_bytes()->::google::protobuf::BytesValue::MergeFrom(from.bytes());
  }
}

void BytesWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.BytesWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesWrapper::CopyFrom(const BytesWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.BytesWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesWrapper::IsInitialized() const {
  return true;
}

void BytesWrapper::Swap(BytesWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesWrapper::InternalSwap(BytesWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bytes_, other->bytes_);
}

::google::protobuf::Metadata BytesWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fwrappers_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace testing
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::WrappersTestCases* Arena::CreateMaybeMessage< ::google::protobuf::testing::WrappersTestCases >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::WrappersTestCases >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::DoubleWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::DoubleWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::DoubleWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::FloatWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::FloatWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::FloatWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Int64Wrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::Int64Wrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Int64Wrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::UInt64Wrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::UInt64Wrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::UInt64Wrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Int32Wrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::Int32Wrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Int32Wrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::UInt32Wrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::UInt32Wrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::UInt32Wrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::BoolWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::BoolWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::BoolWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::StringWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::StringWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::StringWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::BytesWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::BytesWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::BytesWrapper >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
