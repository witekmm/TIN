// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/internal/testdata/struct.proto

#include <google/protobuf/util/internal/testdata/struct.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto;
namespace google {
namespace protobuf {
namespace testing {
class StructTestCasesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StructTestCases> _instance;
} _StructTestCases_default_instance_;
class StructWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StructWrapper> _instance;
} _StructWrapper_default_instance_;
class ValueWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueWrapper> _instance;
} _ValueWrapper_default_instance_;
class RepeatedValueWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepeatedValueWrapper> _instance;
} _RepeatedValueWrapper_default_instance_;
class ListValueWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListValueWrapper> _instance;
} _ListValueWrapper_default_instance_;
class RepeatedListValueWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepeatedListValueWrapper> _instance;
} _RepeatedListValueWrapper_default_instance_;
class MapOfStruct_StructMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapOfStruct_StructMapEntry_DoNotUse> _instance;
} _MapOfStruct_StructMapEntry_DoNotUse_default_instance_;
class MapOfStruct_ValueMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapOfStruct_ValueMapEntry_DoNotUse> _instance;
} _MapOfStruct_ValueMapEntry_DoNotUse_default_instance_;
class MapOfStruct_ListvalueMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapOfStruct_ListvalueMapEntry_DoNotUse> _instance;
} _MapOfStruct_ListvalueMapEntry_DoNotUse_default_instance_;
class MapOfStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapOfStruct> _instance;
} _MapOfStruct_default_instance_;
class DummyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Dummy> _instance;
} _Dummy_default_instance_;
class StructTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StructType> _instance;
} _StructType_default_instance_;
}  // namespace testing
}  // namespace protobuf
}  // namespace google
static void InitDefaultsStructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_StructTestCases_default_instance_;
    new (ptr) ::google::protobuf::testing::StructTestCases();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::StructTestCases::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_StructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsStructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,}};

static void InitDefaultsStructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_StructWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::StructWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::StructWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_ValueWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::ValueWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::ValueWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsRepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_RepeatedValueWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::RepeatedValueWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::RepeatedValueWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_ListValueWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::ListValueWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::ListValueWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsRepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_RepeatedListValueWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::RepeatedListValueWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::RepeatedListValueWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsMapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_MapOfStruct_StructMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse();
  }
  ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsMapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_MapOfStruct_ValueMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse();
  }
  ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsMapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_MapOfStruct_ListvalueMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse();
  }
  ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsMapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_MapOfStruct_default_instance_;
    new (ptr) ::google::protobuf::testing::MapOfStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::MapOfStruct::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_MapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_MapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,
      &scc_info_MapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base,}};

static void InitDefaultsDummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Dummy_default_instance_;
    new (ptr) ::google::protobuf::testing::Dummy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::Dummy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {}};

static void InitDefaultsStructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_StructType_default_instance_;
    new (ptr) ::google::protobuf::testing::StructType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::StructType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

void InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapOfStruct_StructMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapOfStruct_ValueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapOfStruct_ListvalueMapEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[12];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, empty_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, empty_value2_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, null_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, simple_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, longer_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_nested_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_nested_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_list_of_nulls_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_list_of_lists_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_list_of_structs_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_empty_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, struct_with_list_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_struct_with_empty_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_struct_with_list_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, value_wrapper_simple_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, value_wrapper_with_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, value_wrapper_with_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, value_wrapper_with_empty_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, value_wrapper_with_list_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, list_value_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, list_value_wrapper_with_empty_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, list_value_wrapper_with_list_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_value_simple_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_value_with_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_value_with_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_value_with_empty_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_value_with_list_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_listvalue_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_empty_listvalue_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, top_level_listvalue_with_empty_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, repeated_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, repeated_value_nested_list_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, repeated_value_nested_list2_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, repeated_value_nested_list3_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, repeated_listvalue_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, map_of_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, map_of_struct_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructTestCases, map_of_listvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructWrapper, struct__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::ValueWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::ValueWrapper, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::RepeatedValueWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::RepeatedValueWrapper, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::ListValueWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::ListValueWrapper, shopping_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::RepeatedListValueWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::RepeatedListValueWrapper, dimensions_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct, struct_map_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct, value_map_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::MapOfStruct, listvalue_map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Dummy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Dummy, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::StructType, object_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::protobuf::testing::StructTestCases)},
  { 44, -1, sizeof(::google::protobuf::testing::StructWrapper)},
  { 50, -1, sizeof(::google::protobuf::testing::ValueWrapper)},
  { 56, -1, sizeof(::google::protobuf::testing::RepeatedValueWrapper)},
  { 62, -1, sizeof(::google::protobuf::testing::ListValueWrapper)},
  { 68, -1, sizeof(::google::protobuf::testing::RepeatedListValueWrapper)},
  { 74, 81, sizeof(::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse)},
  { 83, 90, sizeof(::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse)},
  { 92, 99, sizeof(::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse)},
  { 101, -1, sizeof(::google::protobuf::testing::MapOfStruct)},
  { 109, -1, sizeof(::google::protobuf::testing::Dummy)},
  { 115, -1, sizeof(::google::protobuf::testing::StructType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_StructTestCases_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_StructWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_ValueWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_RepeatedValueWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_ListValueWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_RepeatedListValueWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_MapOfStruct_StructMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_MapOfStruct_ValueMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_MapOfStruct_ListvalueMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_MapOfStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Dummy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_StructType_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto = {
  {}, AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, "google/protobuf/util/internal/testdata/struct.proto", schemas,
  file_default_instances, TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, 12, file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto,
};

const char descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[] =
  "\n3google/protobuf/util/internal/testdata"
  "/struct.proto\022\027google.protobuf.testing\032\034"
  "google/protobuf/struct.proto\"\360\025\n\017StructT"
  "estCases\022;\n\013empty_value\030\001 \001(\0132&.google.p"
  "rotobuf.testing.StructWrapper\022<\n\014empty_v"
  "alue2\030\002 \001(\0132&.google.protobuf.testing.St"
  "ructWrapper\022:\n\nnull_value\030\003 \001(\0132&.google"
  ".protobuf.testing.StructWrapper\022=\n\rsimpl"
  "e_struct\030\004 \001(\0132&.google.protobuf.testing"
  ".StructWrapper\022=\n\rlonger_struct\030\005 \001(\0132&."
  "google.protobuf.testing.StructWrapper\022I\n"
  "\031struct_with_nested_struct\030\006 \001(\0132&.googl"
  "e.protobuf.testing.StructWrapper\022G\n\027stru"
  "ct_with_nested_list\030\007 \001(\0132&.google.proto"
  "buf.testing.StructWrapper\022I\n\031struct_with"
  "_list_of_nulls\030\010 \001(\0132&.google.protobuf.t"
  "esting.StructWrapper\022I\n\031struct_with_list"
  "_of_lists\030\t \001(\0132&.google.protobuf.testin"
  "g.StructWrapper\022K\n\033struct_with_list_of_s"
  "tructs\030\n \001(\0132&.google.protobuf.testing.S"
  "tructWrapper\022F\n\026struct_with_empty_list\030\013"
  " \001(\0132&.google.protobuf.testing.StructWra"
  "pper\022R\n\"struct_with_list_with_empty_stru"
  "ct\030\014 \001(\0132&.google.protobuf.testing.Struc"
  "tWrapper\0221\n\020top_level_struct\030\r \001(\0132\027.goo"
  "gle.protobuf.Struct\022A\n top_level_struct_"
  "with_empty_list\030\016 \001(\0132\027.google.protobuf."
  "Struct\022M\n,top_level_struct_with_list_wit"
  "h_empty_struct\030\017 \001(\0132\027.google.protobuf.S"
  "truct\022C\n\024value_wrapper_simple\030\020 \001(\0132%.go"
  "ogle.protobuf.testing.ValueWrapper\022H\n\031va"
  "lue_wrapper_with_struct\030\021 \001(\0132%.google.p"
  "rotobuf.testing.ValueWrapper\022F\n\027value_wr"
  "apper_with_list\030\022 \001(\0132%.google.protobuf."
  "testing.ValueWrapper\022L\n\035value_wrapper_wi"
  "th_empty_list\030\023 \001(\0132%.google.protobuf.te"
  "sting.ValueWrapper\022X\n)value_wrapper_with"
  "_list_with_empty_struct\030\024 \001(\0132%.google.p"
  "rotobuf.testing.ValueWrapper\022E\n\022list_val"
  "ue_wrapper\030\025 \001(\0132).google.protobuf.testi"
  "ng.ListValueWrapper\022U\n\"list_value_wrappe"
  "r_with_empty_list\030\026 \001(\0132).google.protobu"
  "f.testing.ListValueWrapper\022a\n.list_value"
  "_wrapper_with_list_with_empty_struct\030\027 \001"
  "(\0132).google.protobuf.testing.ListValueWr"
  "apper\0226\n\026top_level_value_simple\030\030 \001(\0132\026."
  "google.protobuf.Value\022;\n\033top_level_value"
  "_with_struct\030\031 \001(\0132\026.google.protobuf.Val"
  "ue\0229\n\031top_level_value_with_list\030\032 \001(\0132\026."
  "google.protobuf.Value\022\?\n\037top_level_value"
  "_with_empty_list\030\033 \001(\0132\026.google.protobuf"
  ".Value\022K\n+top_level_value_with_list_with"
  "_empty_struct\030\034 \001(\0132\026.google.protobuf.Va"
  "lue\0227\n\023top_level_listvalue\030\035 \001(\0132\032.googl"
  "e.protobuf.ListValue\022=\n\031top_level_empty_"
  "listvalue\030\036 \001(\0132\032.google.protobuf.ListVa"
  "lue\022I\n%top_level_listvalue_with_empty_st"
  "ruct\030\037 \001(\0132\032.google.protobuf.ListValue\022E"
  "\n\016repeated_value\030  \001(\0132-.google.protobuf"
  ".testing.RepeatedValueWrapper\022Q\n\032repeate"
  "d_value_nested_list\030! \001(\0132-.google.proto"
  "buf.testing.RepeatedValueWrapper\022R\n\033repe"
  "ated_value_nested_list2\030\" \001(\0132-.google.p"
  "rotobuf.testing.RepeatedValueWrapper\022R\n\033"
  "repeated_value_nested_list3\030# \001(\0132-.goog"
  "le.protobuf.testing.RepeatedValueWrapper"
  "\022M\n\022repeated_listvalue\030$ \001(\01321.google.pr"
  "otobuf.testing.RepeatedListValueWrapper\022"
  ";\n\rmap_of_struct\030% \001(\0132$.google.protobuf"
  ".testing.MapOfStruct\022A\n\023map_of_struct_va"
  "lue\030& \001(\0132$.google.protobuf.testing.MapO"
  "fStruct\022>\n\020map_of_listvalue\030\' \001(\0132$.goog"
  "le.protobuf.testing.MapOfStruct\"8\n\rStruc"
  "tWrapper\022\'\n\006struct\030\001 \001(\0132\027.google.protob"
  "uf.Struct\"5\n\014ValueWrapper\022%\n\005value\030\001 \001(\013"
  "2\026.google.protobuf.Value\">\n\024RepeatedValu"
  "eWrapper\022&\n\006values\030\001 \003(\0132\026.google.protob"
  "uf.Value\"E\n\020ListValueWrapper\0221\n\rshopping"
  "_list\030\001 \001(\0132\032.google.protobuf.ListValue\""
  "J\n\030RepeatedListValueWrapper\022.\n\ndimension"
  "s\030\001 \003(\0132\032.google.protobuf.ListValue\"\321\003\n\013"
  "MapOfStruct\022G\n\nstruct_map\030\001 \003(\01323.google"
  ".protobuf.testing.MapOfStruct.StructMapE"
  "ntry\022E\n\tvalue_map\030\002 \003(\01322.google.protobu"
  "f.testing.MapOfStruct.ValueMapEntry\022M\n\rl"
  "istvalue_map\030\003 \003(\01326.google.protobuf.tes"
  "ting.MapOfStruct.ListvalueMapEntry\032I\n\016St"
  "ructMapEntry\022\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 \001(\013"
  "2\027.google.protobuf.Struct:\0028\001\032G\n\rValueMa"
  "pEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.goo"
  "gle.protobuf.Value:\0028\001\032O\n\021ListvalueMapEn"
  "try\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.google"
  ".protobuf.ListValue:\0028\001\"\025\n\005Dummy\022\014\n\004text"
  "\030\001 \001(\t\"5\n\nStructType\022\'\n\006object\030\001 \001(\0132\027.g"
  "oogle.protobuf.Struct2e\n\021StructTestServi"
  "ce\022P\n\004Call\022\036.google.protobuf.testing.Dum"
  "my\032(.google.protobuf.testing.StructTestC"
  "asesb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto = {
  false, InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, 
  descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto,
  "google/protobuf/util/internal/testdata/struct.proto", &assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, 3892,
};

void AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fstruct_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto = []() { AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto(); return true; }();
namespace google {
namespace protobuf {
namespace testing {

// ===================================================================

void StructTestCases::InitAsDefaultInstance() {
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->empty_value_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->empty_value2_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->null_value_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->simple_struct_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->longer_struct_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_nested_struct_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_nested_list_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_list_of_nulls_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_list_of_lists_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_list_of_structs_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_empty_list_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->struct_with_list_with_empty_struct_ = const_cast< ::google::protobuf::testing::StructWrapper*>(
      ::google::protobuf::testing::StructWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_struct_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_struct_with_empty_list_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_struct_with_list_with_empty_struct_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->value_wrapper_simple_ = const_cast< ::google::protobuf::testing::ValueWrapper*>(
      ::google::protobuf::testing::ValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->value_wrapper_with_struct_ = const_cast< ::google::protobuf::testing::ValueWrapper*>(
      ::google::protobuf::testing::ValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->value_wrapper_with_list_ = const_cast< ::google::protobuf::testing::ValueWrapper*>(
      ::google::protobuf::testing::ValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->value_wrapper_with_empty_list_ = const_cast< ::google::protobuf::testing::ValueWrapper*>(
      ::google::protobuf::testing::ValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->value_wrapper_with_list_with_empty_struct_ = const_cast< ::google::protobuf::testing::ValueWrapper*>(
      ::google::protobuf::testing::ValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->list_value_wrapper_ = const_cast< ::google::protobuf::testing::ListValueWrapper*>(
      ::google::protobuf::testing::ListValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->list_value_wrapper_with_empty_list_ = const_cast< ::google::protobuf::testing::ListValueWrapper*>(
      ::google::protobuf::testing::ListValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->list_value_wrapper_with_list_with_empty_struct_ = const_cast< ::google::protobuf::testing::ListValueWrapper*>(
      ::google::protobuf::testing::ListValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_value_simple_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_value_with_struct_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_value_with_list_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_value_with_empty_list_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_value_with_list_with_empty_struct_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_listvalue_ = const_cast< ::google::protobuf::ListValue*>(
      ::google::protobuf::ListValue::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_empty_listvalue_ = const_cast< ::google::protobuf::ListValue*>(
      ::google::protobuf::ListValue::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->top_level_listvalue_with_empty_struct_ = const_cast< ::google::protobuf::ListValue*>(
      ::google::protobuf::ListValue::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->repeated_value_ = const_cast< ::google::protobuf::testing::RepeatedValueWrapper*>(
      ::google::protobuf::testing::RepeatedValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->repeated_value_nested_list_ = const_cast< ::google::protobuf::testing::RepeatedValueWrapper*>(
      ::google::protobuf::testing::RepeatedValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->repeated_value_nested_list2_ = const_cast< ::google::protobuf::testing::RepeatedValueWrapper*>(
      ::google::protobuf::testing::RepeatedValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->repeated_value_nested_list3_ = const_cast< ::google::protobuf::testing::RepeatedValueWrapper*>(
      ::google::protobuf::testing::RepeatedValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->repeated_listvalue_ = const_cast< ::google::protobuf::testing::RepeatedListValueWrapper*>(
      ::google::protobuf::testing::RepeatedListValueWrapper::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->map_of_struct_ = const_cast< ::google::protobuf::testing::MapOfStruct*>(
      ::google::protobuf::testing::MapOfStruct::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->map_of_struct_value_ = const_cast< ::google::protobuf::testing::MapOfStruct*>(
      ::google::protobuf::testing::MapOfStruct::internal_default_instance());
  ::google::protobuf::testing::_StructTestCases_default_instance_._instance.get_mutable()->map_of_listvalue_ = const_cast< ::google::protobuf::testing::MapOfStruct*>(
      ::google::protobuf::testing::MapOfStruct::internal_default_instance());
}
class StructTestCases::HasBitSetters {
 public:
  static const ::google::protobuf::testing::StructWrapper& empty_value(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& empty_value2(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& null_value(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& simple_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& longer_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_nested_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_nested_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_list_of_nulls(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_list_of_lists(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_list_of_structs(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_empty_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::StructWrapper& struct_with_list_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::Struct& top_level_struct(const StructTestCases* msg);
  static const ::google::protobuf::Struct& top_level_struct_with_empty_list(const StructTestCases* msg);
  static const ::google::protobuf::Struct& top_level_struct_with_list_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::ValueWrapper& value_wrapper_simple(const StructTestCases* msg);
  static const ::google::protobuf::testing::ValueWrapper& value_wrapper_with_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::ValueWrapper& value_wrapper_with_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::ValueWrapper& value_wrapper_with_empty_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::ValueWrapper& value_wrapper_with_list_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::ListValueWrapper& list_value_wrapper(const StructTestCases* msg);
  static const ::google::protobuf::testing::ListValueWrapper& list_value_wrapper_with_empty_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::ListValueWrapper& list_value_wrapper_with_list_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::Value& top_level_value_simple(const StructTestCases* msg);
  static const ::google::protobuf::Value& top_level_value_with_struct(const StructTestCases* msg);
  static const ::google::protobuf::Value& top_level_value_with_list(const StructTestCases* msg);
  static const ::google::protobuf::Value& top_level_value_with_empty_list(const StructTestCases* msg);
  static const ::google::protobuf::Value& top_level_value_with_list_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::ListValue& top_level_listvalue(const StructTestCases* msg);
  static const ::google::protobuf::ListValue& top_level_empty_listvalue(const StructTestCases* msg);
  static const ::google::protobuf::ListValue& top_level_listvalue_with_empty_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::RepeatedValueWrapper& repeated_value(const StructTestCases* msg);
  static const ::google::protobuf::testing::RepeatedValueWrapper& repeated_value_nested_list(const StructTestCases* msg);
  static const ::google::protobuf::testing::RepeatedValueWrapper& repeated_value_nested_list2(const StructTestCases* msg);
  static const ::google::protobuf::testing::RepeatedValueWrapper& repeated_value_nested_list3(const StructTestCases* msg);
  static const ::google::protobuf::testing::RepeatedListValueWrapper& repeated_listvalue(const StructTestCases* msg);
  static const ::google::protobuf::testing::MapOfStruct& map_of_struct(const StructTestCases* msg);
  static const ::google::protobuf::testing::MapOfStruct& map_of_struct_value(const StructTestCases* msg);
  static const ::google::protobuf::testing::MapOfStruct& map_of_listvalue(const StructTestCases* msg);
};

const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::empty_value(const StructTestCases* msg) {
  return *msg->empty_value_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::empty_value2(const StructTestCases* msg) {
  return *msg->empty_value2_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::null_value(const StructTestCases* msg) {
  return *msg->null_value_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::simple_struct(const StructTestCases* msg) {
  return *msg->simple_struct_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::longer_struct(const StructTestCases* msg) {
  return *msg->longer_struct_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_nested_struct(const StructTestCases* msg) {
  return *msg->struct_with_nested_struct_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_nested_list(const StructTestCases* msg) {
  return *msg->struct_with_nested_list_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_list_of_nulls(const StructTestCases* msg) {
  return *msg->struct_with_list_of_nulls_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_list_of_lists(const StructTestCases* msg) {
  return *msg->struct_with_list_of_lists_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_list_of_structs(const StructTestCases* msg) {
  return *msg->struct_with_list_of_structs_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_empty_list(const StructTestCases* msg) {
  return *msg->struct_with_empty_list_;
}
const ::google::protobuf::testing::StructWrapper&
StructTestCases::HasBitSetters::struct_with_list_with_empty_struct(const StructTestCases* msg) {
  return *msg->struct_with_list_with_empty_struct_;
}
const ::google::protobuf::Struct&
StructTestCases::HasBitSetters::top_level_struct(const StructTestCases* msg) {
  return *msg->top_level_struct_;
}
const ::google::protobuf::Struct&
StructTestCases::HasBitSetters::top_level_struct_with_empty_list(const StructTestCases* msg) {
  return *msg->top_level_struct_with_empty_list_;
}
const ::google::protobuf::Struct&
StructTestCases::HasBitSetters::top_level_struct_with_list_with_empty_struct(const StructTestCases* msg) {
  return *msg->top_level_struct_with_list_with_empty_struct_;
}
const ::google::protobuf::testing::ValueWrapper&
StructTestCases::HasBitSetters::value_wrapper_simple(const StructTestCases* msg) {
  return *msg->value_wrapper_simple_;
}
const ::google::protobuf::testing::ValueWrapper&
StructTestCases::HasBitSetters::value_wrapper_with_struct(const StructTestCases* msg) {
  return *msg->value_wrapper_with_struct_;
}
const ::google::protobuf::testing::ValueWrapper&
StructTestCases::HasBitSetters::value_wrapper_with_list(const StructTestCases* msg) {
  return *msg->value_wrapper_with_list_;
}
const ::google::protobuf::testing::ValueWrapper&
StructTestCases::HasBitSetters::value_wrapper_with_empty_list(const StructTestCases* msg) {
  return *msg->value_wrapper_with_empty_list_;
}
const ::google::protobuf::testing::ValueWrapper&
StructTestCases::HasBitSetters::value_wrapper_with_list_with_empty_struct(const StructTestCases* msg) {
  return *msg->value_wrapper_with_list_with_empty_struct_;
}
const ::google::protobuf::testing::ListValueWrapper&
StructTestCases::HasBitSetters::list_value_wrapper(const StructTestCases* msg) {
  return *msg->list_value_wrapper_;
}
const ::google::protobuf::testing::ListValueWrapper&
StructTestCases::HasBitSetters::list_value_wrapper_with_empty_list(const StructTestCases* msg) {
  return *msg->list_value_wrapper_with_empty_list_;
}
const ::google::protobuf::testing::ListValueWrapper&
StructTestCases::HasBitSetters::list_value_wrapper_with_list_with_empty_struct(const StructTestCases* msg) {
  return *msg->list_value_wrapper_with_list_with_empty_struct_;
}
const ::google::protobuf::Value&
StructTestCases::HasBitSetters::top_level_value_simple(const StructTestCases* msg) {
  return *msg->top_level_value_simple_;
}
const ::google::protobuf::Value&
StructTestCases::HasBitSetters::top_level_value_with_struct(const StructTestCases* msg) {
  return *msg->top_level_value_with_struct_;
}
const ::google::protobuf::Value&
StructTestCases::HasBitSetters::top_level_value_with_list(const StructTestCases* msg) {
  return *msg->top_level_value_with_list_;
}
const ::google::protobuf::Value&
StructTestCases::HasBitSetters::top_level_value_with_empty_list(const StructTestCases* msg) {
  return *msg->top_level_value_with_empty_list_;
}
const ::google::protobuf::Value&
StructTestCases::HasBitSetters::top_level_value_with_list_with_empty_struct(const StructTestCases* msg) {
  return *msg->top_level_value_with_list_with_empty_struct_;
}
const ::google::protobuf::ListValue&
StructTestCases::HasBitSetters::top_level_listvalue(const StructTestCases* msg) {
  return *msg->top_level_listvalue_;
}
const ::google::protobuf::ListValue&
StructTestCases::HasBitSetters::top_level_empty_listvalue(const StructTestCases* msg) {
  return *msg->top_level_empty_listvalue_;
}
const ::google::protobuf::ListValue&
StructTestCases::HasBitSetters::top_level_listvalue_with_empty_struct(const StructTestCases* msg) {
  return *msg->top_level_listvalue_with_empty_struct_;
}
const ::google::protobuf::testing::RepeatedValueWrapper&
StructTestCases::HasBitSetters::repeated_value(const StructTestCases* msg) {
  return *msg->repeated_value_;
}
const ::google::protobuf::testing::RepeatedValueWrapper&
StructTestCases::HasBitSetters::repeated_value_nested_list(const StructTestCases* msg) {
  return *msg->repeated_value_nested_list_;
}
const ::google::protobuf::testing::RepeatedValueWrapper&
StructTestCases::HasBitSetters::repeated_value_nested_list2(const StructTestCases* msg) {
  return *msg->repeated_value_nested_list2_;
}
const ::google::protobuf::testing::RepeatedValueWrapper&
StructTestCases::HasBitSetters::repeated_value_nested_list3(const StructTestCases* msg) {
  return *msg->repeated_value_nested_list3_;
}
const ::google::protobuf::testing::RepeatedListValueWrapper&
StructTestCases::HasBitSetters::repeated_listvalue(const StructTestCases* msg) {
  return *msg->repeated_listvalue_;
}
const ::google::protobuf::testing::MapOfStruct&
StructTestCases::HasBitSetters::map_of_struct(const StructTestCases* msg) {
  return *msg->map_of_struct_;
}
const ::google::protobuf::testing::MapOfStruct&
StructTestCases::HasBitSetters::map_of_struct_value(const StructTestCases* msg) {
  return *msg->map_of_struct_value_;
}
const ::google::protobuf::testing::MapOfStruct&
StructTestCases::HasBitSetters::map_of_listvalue(const StructTestCases* msg) {
  return *msg->map_of_listvalue_;
}
void StructTestCases::clear_top_level_struct() {
  if (GetArenaNoVirtual() == nullptr && top_level_struct_ != nullptr) {
    delete top_level_struct_;
  }
  top_level_struct_ = nullptr;
}
void StructTestCases::clear_top_level_struct_with_empty_list() {
  if (GetArenaNoVirtual() == nullptr && top_level_struct_with_empty_list_ != nullptr) {
    delete top_level_struct_with_empty_list_;
  }
  top_level_struct_with_empty_list_ = nullptr;
}
void StructTestCases::clear_top_level_struct_with_list_with_empty_struct() {
  if (GetArenaNoVirtual() == nullptr && top_level_struct_with_list_with_empty_struct_ != nullptr) {
    delete top_level_struct_with_list_with_empty_struct_;
  }
  top_level_struct_with_list_with_empty_struct_ = nullptr;
}
void StructTestCases::clear_top_level_value_simple() {
  if (GetArenaNoVirtual() == nullptr && top_level_value_simple_ != nullptr) {
    delete top_level_value_simple_;
  }
  top_level_value_simple_ = nullptr;
}
void StructTestCases::clear_top_level_value_with_struct() {
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_struct_ != nullptr) {
    delete top_level_value_with_struct_;
  }
  top_level_value_with_struct_ = nullptr;
}
void StructTestCases::clear_top_level_value_with_list() {
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_list_ != nullptr) {
    delete top_level_value_with_list_;
  }
  top_level_value_with_list_ = nullptr;
}
void StructTestCases::clear_top_level_value_with_empty_list() {
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_empty_list_ != nullptr) {
    delete top_level_value_with_empty_list_;
  }
  top_level_value_with_empty_list_ = nullptr;
}
void StructTestCases::clear_top_level_value_with_list_with_empty_struct() {
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_list_with_empty_struct_ != nullptr) {
    delete top_level_value_with_list_with_empty_struct_;
  }
  top_level_value_with_list_with_empty_struct_ = nullptr;
}
void StructTestCases::clear_top_level_listvalue() {
  if (GetArenaNoVirtual() == nullptr && top_level_listvalue_ != nullptr) {
    delete top_level_listvalue_;
  }
  top_level_listvalue_ = nullptr;
}
void StructTestCases::clear_top_level_empty_listvalue() {
  if (GetArenaNoVirtual() == nullptr && top_level_empty_listvalue_ != nullptr) {
    delete top_level_empty_listvalue_;
  }
  top_level_empty_listvalue_ = nullptr;
}
void StructTestCases::clear_top_level_listvalue_with_empty_struct() {
  if (GetArenaNoVirtual() == nullptr && top_level_listvalue_with_empty_struct_ != nullptr) {
    delete top_level_listvalue_with_empty_struct_;
  }
  top_level_listvalue_with_empty_struct_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructTestCases::kEmptyValueFieldNumber;
const int StructTestCases::kEmptyValue2FieldNumber;
const int StructTestCases::kNullValueFieldNumber;
const int StructTestCases::kSimpleStructFieldNumber;
const int StructTestCases::kLongerStructFieldNumber;
const int StructTestCases::kStructWithNestedStructFieldNumber;
const int StructTestCases::kStructWithNestedListFieldNumber;
const int StructTestCases::kStructWithListOfNullsFieldNumber;
const int StructTestCases::kStructWithListOfListsFieldNumber;
const int StructTestCases::kStructWithListOfStructsFieldNumber;
const int StructTestCases::kStructWithEmptyListFieldNumber;
const int StructTestCases::kStructWithListWithEmptyStructFieldNumber;
const int StructTestCases::kTopLevelStructFieldNumber;
const int StructTestCases::kTopLevelStructWithEmptyListFieldNumber;
const int StructTestCases::kTopLevelStructWithListWithEmptyStructFieldNumber;
const int StructTestCases::kValueWrapperSimpleFieldNumber;
const int StructTestCases::kValueWrapperWithStructFieldNumber;
const int StructTestCases::kValueWrapperWithListFieldNumber;
const int StructTestCases::kValueWrapperWithEmptyListFieldNumber;
const int StructTestCases::kValueWrapperWithListWithEmptyStructFieldNumber;
const int StructTestCases::kListValueWrapperFieldNumber;
const int StructTestCases::kListValueWrapperWithEmptyListFieldNumber;
const int StructTestCases::kListValueWrapperWithListWithEmptyStructFieldNumber;
const int StructTestCases::kTopLevelValueSimpleFieldNumber;
const int StructTestCases::kTopLevelValueWithStructFieldNumber;
const int StructTestCases::kTopLevelValueWithListFieldNumber;
const int StructTestCases::kTopLevelValueWithEmptyListFieldNumber;
const int StructTestCases::kTopLevelValueWithListWithEmptyStructFieldNumber;
const int StructTestCases::kTopLevelListvalueFieldNumber;
const int StructTestCases::kTopLevelEmptyListvalueFieldNumber;
const int StructTestCases::kTopLevelListvalueWithEmptyStructFieldNumber;
const int StructTestCases::kRepeatedValueFieldNumber;
const int StructTestCases::kRepeatedValueNestedListFieldNumber;
const int StructTestCases::kRepeatedValueNestedList2FieldNumber;
const int StructTestCases::kRepeatedValueNestedList3FieldNumber;
const int StructTestCases::kRepeatedListvalueFieldNumber;
const int StructTestCases::kMapOfStructFieldNumber;
const int StructTestCases::kMapOfStructValueFieldNumber;
const int StructTestCases::kMapOfListvalueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructTestCases::StructTestCases()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.StructTestCases)
}
StructTestCases::StructTestCases(const StructTestCases& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_empty_value()) {
    empty_value_ = new ::google::protobuf::testing::StructWrapper(*from.empty_value_);
  } else {
    empty_value_ = nullptr;
  }
  if (from.has_empty_value2()) {
    empty_value2_ = new ::google::protobuf::testing::StructWrapper(*from.empty_value2_);
  } else {
    empty_value2_ = nullptr;
  }
  if (from.has_null_value()) {
    null_value_ = new ::google::protobuf::testing::StructWrapper(*from.null_value_);
  } else {
    null_value_ = nullptr;
  }
  if (from.has_simple_struct()) {
    simple_struct_ = new ::google::protobuf::testing::StructWrapper(*from.simple_struct_);
  } else {
    simple_struct_ = nullptr;
  }
  if (from.has_longer_struct()) {
    longer_struct_ = new ::google::protobuf::testing::StructWrapper(*from.longer_struct_);
  } else {
    longer_struct_ = nullptr;
  }
  if (from.has_struct_with_nested_struct()) {
    struct_with_nested_struct_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_nested_struct_);
  } else {
    struct_with_nested_struct_ = nullptr;
  }
  if (from.has_struct_with_nested_list()) {
    struct_with_nested_list_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_nested_list_);
  } else {
    struct_with_nested_list_ = nullptr;
  }
  if (from.has_struct_with_list_of_nulls()) {
    struct_with_list_of_nulls_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_list_of_nulls_);
  } else {
    struct_with_list_of_nulls_ = nullptr;
  }
  if (from.has_struct_with_list_of_lists()) {
    struct_with_list_of_lists_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_list_of_lists_);
  } else {
    struct_with_list_of_lists_ = nullptr;
  }
  if (from.has_struct_with_list_of_structs()) {
    struct_with_list_of_structs_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_list_of_structs_);
  } else {
    struct_with_list_of_structs_ = nullptr;
  }
  if (from.has_struct_with_empty_list()) {
    struct_with_empty_list_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_empty_list_);
  } else {
    struct_with_empty_list_ = nullptr;
  }
  if (from.has_struct_with_list_with_empty_struct()) {
    struct_with_list_with_empty_struct_ = new ::google::protobuf::testing::StructWrapper(*from.struct_with_list_with_empty_struct_);
  } else {
    struct_with_list_with_empty_struct_ = nullptr;
  }
  if (from.has_top_level_struct()) {
    top_level_struct_ = new ::google::protobuf::Struct(*from.top_level_struct_);
  } else {
    top_level_struct_ = nullptr;
  }
  if (from.has_top_level_struct_with_empty_list()) {
    top_level_struct_with_empty_list_ = new ::google::protobuf::Struct(*from.top_level_struct_with_empty_list_);
  } else {
    top_level_struct_with_empty_list_ = nullptr;
  }
  if (from.has_top_level_struct_with_list_with_empty_struct()) {
    top_level_struct_with_list_with_empty_struct_ = new ::google::protobuf::Struct(*from.top_level_struct_with_list_with_empty_struct_);
  } else {
    top_level_struct_with_list_with_empty_struct_ = nullptr;
  }
  if (from.has_value_wrapper_simple()) {
    value_wrapper_simple_ = new ::google::protobuf::testing::ValueWrapper(*from.value_wrapper_simple_);
  } else {
    value_wrapper_simple_ = nullptr;
  }
  if (from.has_value_wrapper_with_struct()) {
    value_wrapper_with_struct_ = new ::google::protobuf::testing::ValueWrapper(*from.value_wrapper_with_struct_);
  } else {
    value_wrapper_with_struct_ = nullptr;
  }
  if (from.has_value_wrapper_with_list()) {
    value_wrapper_with_list_ = new ::google::protobuf::testing::ValueWrapper(*from.value_wrapper_with_list_);
  } else {
    value_wrapper_with_list_ = nullptr;
  }
  if (from.has_value_wrapper_with_empty_list()) {
    value_wrapper_with_empty_list_ = new ::google::protobuf::testing::ValueWrapper(*from.value_wrapper_with_empty_list_);
  } else {
    value_wrapper_with_empty_list_ = nullptr;
  }
  if (from.has_value_wrapper_with_list_with_empty_struct()) {
    value_wrapper_with_list_with_empty_struct_ = new ::google::protobuf::testing::ValueWrapper(*from.value_wrapper_with_list_with_empty_struct_);
  } else {
    value_wrapper_with_list_with_empty_struct_ = nullptr;
  }
  if (from.has_list_value_wrapper()) {
    list_value_wrapper_ = new ::google::protobuf::testing::ListValueWrapper(*from.list_value_wrapper_);
  } else {
    list_value_wrapper_ = nullptr;
  }
  if (from.has_list_value_wrapper_with_empty_list()) {
    list_value_wrapper_with_empty_list_ = new ::google::protobuf::testing::ListValueWrapper(*from.list_value_wrapper_with_empty_list_);
  } else {
    list_value_wrapper_with_empty_list_ = nullptr;
  }
  if (from.has_list_value_wrapper_with_list_with_empty_struct()) {
    list_value_wrapper_with_list_with_empty_struct_ = new ::google::protobuf::testing::ListValueWrapper(*from.list_value_wrapper_with_list_with_empty_struct_);
  } else {
    list_value_wrapper_with_list_with_empty_struct_ = nullptr;
  }
  if (from.has_top_level_value_simple()) {
    top_level_value_simple_ = new ::google::protobuf::Value(*from.top_level_value_simple_);
  } else {
    top_level_value_simple_ = nullptr;
  }
  if (from.has_top_level_value_with_struct()) {
    top_level_value_with_struct_ = new ::google::protobuf::Value(*from.top_level_value_with_struct_);
  } else {
    top_level_value_with_struct_ = nullptr;
  }
  if (from.has_top_level_value_with_list()) {
    top_level_value_with_list_ = new ::google::protobuf::Value(*from.top_level_value_with_list_);
  } else {
    top_level_value_with_list_ = nullptr;
  }
  if (from.has_top_level_value_with_empty_list()) {
    top_level_value_with_empty_list_ = new ::google::protobuf::Value(*from.top_level_value_with_empty_list_);
  } else {
    top_level_value_with_empty_list_ = nullptr;
  }
  if (from.has_top_level_value_with_list_with_empty_struct()) {
    top_level_value_with_list_with_empty_struct_ = new ::google::protobuf::Value(*from.top_level_value_with_list_with_empty_struct_);
  } else {
    top_level_value_with_list_with_empty_struct_ = nullptr;
  }
  if (from.has_top_level_listvalue()) {
    top_level_listvalue_ = new ::google::protobuf::ListValue(*from.top_level_listvalue_);
  } else {
    top_level_listvalue_ = nullptr;
  }
  if (from.has_top_level_empty_listvalue()) {
    top_level_empty_listvalue_ = new ::google::protobuf::ListValue(*from.top_level_empty_listvalue_);
  } else {
    top_level_empty_listvalue_ = nullptr;
  }
  if (from.has_top_level_listvalue_with_empty_struct()) {
    top_level_listvalue_with_empty_struct_ = new ::google::protobuf::ListValue(*from.top_level_listvalue_with_empty_struct_);
  } else {
    top_level_listvalue_with_empty_struct_ = nullptr;
  }
  if (from.has_repeated_value()) {
    repeated_value_ = new ::google::protobuf::testing::RepeatedValueWrapper(*from.repeated_value_);
  } else {
    repeated_value_ = nullptr;
  }
  if (from.has_repeated_value_nested_list()) {
    repeated_value_nested_list_ = new ::google::protobuf::testing::RepeatedValueWrapper(*from.repeated_value_nested_list_);
  } else {
    repeated_value_nested_list_ = nullptr;
  }
  if (from.has_repeated_value_nested_list2()) {
    repeated_value_nested_list2_ = new ::google::protobuf::testing::RepeatedValueWrapper(*from.repeated_value_nested_list2_);
  } else {
    repeated_value_nested_list2_ = nullptr;
  }
  if (from.has_repeated_value_nested_list3()) {
    repeated_value_nested_list3_ = new ::google::protobuf::testing::RepeatedValueWrapper(*from.repeated_value_nested_list3_);
  } else {
    repeated_value_nested_list3_ = nullptr;
  }
  if (from.has_repeated_listvalue()) {
    repeated_listvalue_ = new ::google::protobuf::testing::RepeatedListValueWrapper(*from.repeated_listvalue_);
  } else {
    repeated_listvalue_ = nullptr;
  }
  if (from.has_map_of_struct()) {
    map_of_struct_ = new ::google::protobuf::testing::MapOfStruct(*from.map_of_struct_);
  } else {
    map_of_struct_ = nullptr;
  }
  if (from.has_map_of_struct_value()) {
    map_of_struct_value_ = new ::google::protobuf::testing::MapOfStruct(*from.map_of_struct_value_);
  } else {
    map_of_struct_value_ = nullptr;
  }
  if (from.has_map_of_listvalue()) {
    map_of_listvalue_ = new ::google::protobuf::testing::MapOfStruct(*from.map_of_listvalue_);
  } else {
    map_of_listvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.StructTestCases)
}

void StructTestCases::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  ::memset(&empty_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_of_listvalue_) -
      reinterpret_cast<char*>(&empty_value_)) + sizeof(map_of_listvalue_));
}

StructTestCases::~StructTestCases() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.StructTestCases)
  SharedDtor();
}

void StructTestCases::SharedDtor() {
  if (this != internal_default_instance()) delete empty_value_;
  if (this != internal_default_instance()) delete empty_value2_;
  if (this != internal_default_instance()) delete null_value_;
  if (this != internal_default_instance()) delete simple_struct_;
  if (this != internal_default_instance()) delete longer_struct_;
  if (this != internal_default_instance()) delete struct_with_nested_struct_;
  if (this != internal_default_instance()) delete struct_with_nested_list_;
  if (this != internal_default_instance()) delete struct_with_list_of_nulls_;
  if (this != internal_default_instance()) delete struct_with_list_of_lists_;
  if (this != internal_default_instance()) delete struct_with_list_of_structs_;
  if (this != internal_default_instance()) delete struct_with_empty_list_;
  if (this != internal_default_instance()) delete struct_with_list_with_empty_struct_;
  if (this != internal_default_instance()) delete top_level_struct_;
  if (this != internal_default_instance()) delete top_level_struct_with_empty_list_;
  if (this != internal_default_instance()) delete top_level_struct_with_list_with_empty_struct_;
  if (this != internal_default_instance()) delete value_wrapper_simple_;
  if (this != internal_default_instance()) delete value_wrapper_with_struct_;
  if (this != internal_default_instance()) delete value_wrapper_with_list_;
  if (this != internal_default_instance()) delete value_wrapper_with_empty_list_;
  if (this != internal_default_instance()) delete value_wrapper_with_list_with_empty_struct_;
  if (this != internal_default_instance()) delete list_value_wrapper_;
  if (this != internal_default_instance()) delete list_value_wrapper_with_empty_list_;
  if (this != internal_default_instance()) delete list_value_wrapper_with_list_with_empty_struct_;
  if (this != internal_default_instance()) delete top_level_value_simple_;
  if (this != internal_default_instance()) delete top_level_value_with_struct_;
  if (this != internal_default_instance()) delete top_level_value_with_list_;
  if (this != internal_default_instance()) delete top_level_value_with_empty_list_;
  if (this != internal_default_instance()) delete top_level_value_with_list_with_empty_struct_;
  if (this != internal_default_instance()) delete top_level_listvalue_;
  if (this != internal_default_instance()) delete top_level_empty_listvalue_;
  if (this != internal_default_instance()) delete top_level_listvalue_with_empty_struct_;
  if (this != internal_default_instance()) delete repeated_value_;
  if (this != internal_default_instance()) delete repeated_value_nested_list_;
  if (this != internal_default_instance()) delete repeated_value_nested_list2_;
  if (this != internal_default_instance()) delete repeated_value_nested_list3_;
  if (this != internal_default_instance()) delete repeated_listvalue_;
  if (this != internal_default_instance()) delete map_of_struct_;
  if (this != internal_default_instance()) delete map_of_struct_value_;
  if (this != internal_default_instance()) delete map_of_listvalue_;
}

void StructTestCases::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StructTestCases& StructTestCases::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StructTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void StructTestCases::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.StructTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && empty_value_ != nullptr) {
    delete empty_value_;
  }
  empty_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && empty_value2_ != nullptr) {
    delete empty_value2_;
  }
  empty_value2_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && null_value_ != nullptr) {
    delete null_value_;
  }
  null_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && simple_struct_ != nullptr) {
    delete simple_struct_;
  }
  simple_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && longer_struct_ != nullptr) {
    delete longer_struct_;
  }
  longer_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_nested_struct_ != nullptr) {
    delete struct_with_nested_struct_;
  }
  struct_with_nested_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_nested_list_ != nullptr) {
    delete struct_with_nested_list_;
  }
  struct_with_nested_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_list_of_nulls_ != nullptr) {
    delete struct_with_list_of_nulls_;
  }
  struct_with_list_of_nulls_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_list_of_lists_ != nullptr) {
    delete struct_with_list_of_lists_;
  }
  struct_with_list_of_lists_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_list_of_structs_ != nullptr) {
    delete struct_with_list_of_structs_;
  }
  struct_with_list_of_structs_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_empty_list_ != nullptr) {
    delete struct_with_empty_list_;
  }
  struct_with_empty_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_with_list_with_empty_struct_ != nullptr) {
    delete struct_with_list_with_empty_struct_;
  }
  struct_with_list_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_struct_ != nullptr) {
    delete top_level_struct_;
  }
  top_level_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_struct_with_empty_list_ != nullptr) {
    delete top_level_struct_with_empty_list_;
  }
  top_level_struct_with_empty_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_struct_with_list_with_empty_struct_ != nullptr) {
    delete top_level_struct_with_list_with_empty_struct_;
  }
  top_level_struct_with_list_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_wrapper_simple_ != nullptr) {
    delete value_wrapper_simple_;
  }
  value_wrapper_simple_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_wrapper_with_struct_ != nullptr) {
    delete value_wrapper_with_struct_;
  }
  value_wrapper_with_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_wrapper_with_list_ != nullptr) {
    delete value_wrapper_with_list_;
  }
  value_wrapper_with_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_wrapper_with_empty_list_ != nullptr) {
    delete value_wrapper_with_empty_list_;
  }
  value_wrapper_with_empty_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && value_wrapper_with_list_with_empty_struct_ != nullptr) {
    delete value_wrapper_with_list_with_empty_struct_;
  }
  value_wrapper_with_list_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && list_value_wrapper_ != nullptr) {
    delete list_value_wrapper_;
  }
  list_value_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && list_value_wrapper_with_empty_list_ != nullptr) {
    delete list_value_wrapper_with_empty_list_;
  }
  list_value_wrapper_with_empty_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && list_value_wrapper_with_list_with_empty_struct_ != nullptr) {
    delete list_value_wrapper_with_list_with_empty_struct_;
  }
  list_value_wrapper_with_list_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_value_simple_ != nullptr) {
    delete top_level_value_simple_;
  }
  top_level_value_simple_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_struct_ != nullptr) {
    delete top_level_value_with_struct_;
  }
  top_level_value_with_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_list_ != nullptr) {
    delete top_level_value_with_list_;
  }
  top_level_value_with_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_empty_list_ != nullptr) {
    delete top_level_value_with_empty_list_;
  }
  top_level_value_with_empty_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_value_with_list_with_empty_struct_ != nullptr) {
    delete top_level_value_with_list_with_empty_struct_;
  }
  top_level_value_with_list_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_listvalue_ != nullptr) {
    delete top_level_listvalue_;
  }
  top_level_listvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_empty_listvalue_ != nullptr) {
    delete top_level_empty_listvalue_;
  }
  top_level_empty_listvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_listvalue_with_empty_struct_ != nullptr) {
    delete top_level_listvalue_with_empty_struct_;
  }
  top_level_listvalue_with_empty_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_value_ != nullptr) {
    delete repeated_value_;
  }
  repeated_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_value_nested_list_ != nullptr) {
    delete repeated_value_nested_list_;
  }
  repeated_value_nested_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_value_nested_list2_ != nullptr) {
    delete repeated_value_nested_list2_;
  }
  repeated_value_nested_list2_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_value_nested_list3_ != nullptr) {
    delete repeated_value_nested_list3_;
  }
  repeated_value_nested_list3_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_listvalue_ != nullptr) {
    delete repeated_listvalue_;
  }
  repeated_listvalue_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && map_of_struct_ != nullptr) {
    delete map_of_struct_;
  }
  map_of_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && map_of_struct_value_ != nullptr) {
    delete map_of_struct_value_;
  }
  map_of_struct_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && map_of_listvalue_ != nullptr) {
    delete map_of_listvalue_;
  }
  map_of_listvalue_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StructTestCases::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StructTestCases*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.testing.StructWrapper empty_value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_empty_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper empty_value2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_empty_value2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper null_value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_null_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper simple_struct = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_simple_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper longer_struct = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_longer_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_nested_struct = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_nested_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_nested_list = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_nested_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_list_of_nulls = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_list_of_nulls();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_list_of_lists = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_list_of_lists();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_list_of_structs = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_list_of_structs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_empty_list = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_empty_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.StructWrapper struct_with_list_with_empty_struct = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::StructWrapper::_InternalParse;
        object = msg->mutable_struct_with_list_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Struct top_level_struct = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_top_level_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Struct top_level_struct_with_empty_list = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_top_level_struct_with_empty_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Struct top_level_struct_with_list_with_empty_struct = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_top_level_struct_with_list_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ValueWrapper value_wrapper_simple = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ValueWrapper::_InternalParse;
        object = msg->mutable_value_wrapper_simple();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ValueWrapper value_wrapper_with_struct = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ValueWrapper::_InternalParse;
        object = msg->mutable_value_wrapper_with_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ValueWrapper value_wrapper_with_list = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ValueWrapper::_InternalParse;
        object = msg->mutable_value_wrapper_with_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ValueWrapper value_wrapper_with_empty_list = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ValueWrapper::_InternalParse;
        object = msg->mutable_value_wrapper_with_empty_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ValueWrapper value_wrapper_with_list_with_empty_struct = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ValueWrapper::_InternalParse;
        object = msg->mutable_value_wrapper_with_list_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ListValueWrapper list_value_wrapper = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ListValueWrapper::_InternalParse;
        object = msg->mutable_list_value_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_empty_list = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ListValueWrapper::_InternalParse;
        object = msg->mutable_list_value_wrapper_with_empty_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_list_with_empty_struct = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::ListValueWrapper::_InternalParse;
        object = msg->mutable_list_value_wrapper_with_list_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Value top_level_value_simple = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_top_level_value_simple();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Value top_level_value_with_struct = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_top_level_value_with_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Value top_level_value_with_list = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) != 210) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_top_level_value_with_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Value top_level_value_with_empty_list = 27;
      case 27: {
        if (static_cast<::google::protobuf::uint8>(tag) != 218) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_top_level_value_with_empty_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Value top_level_value_with_list_with_empty_struct = 28;
      case 28: {
        if (static_cast<::google::protobuf::uint8>(tag) != 226) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_top_level_value_with_list_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.ListValue top_level_listvalue = 29;
      case 29: {
        if (static_cast<::google::protobuf::uint8>(tag) != 234) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::ListValue::_InternalParse;
        object = msg->mutable_top_level_listvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.ListValue top_level_empty_listvalue = 30;
      case 30: {
        if (static_cast<::google::protobuf::uint8>(tag) != 242) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::ListValue::_InternalParse;
        object = msg->mutable_top_level_empty_listvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.ListValue top_level_listvalue_with_empty_struct = 31;
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 250) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::ListValue::_InternalParse;
        object = msg->mutable_top_level_listvalue_with_empty_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.RepeatedValueWrapper repeated_value = 32;
      case 32: {
        if (static_cast<::google::protobuf::uint8>(tag) != 2) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::RepeatedValueWrapper::_InternalParse;
        object = msg->mutable_repeated_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list = 33;
      case 33: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::RepeatedValueWrapper::_InternalParse;
        object = msg->mutable_repeated_value_nested_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list2 = 34;
      case 34: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::RepeatedValueWrapper::_InternalParse;
        object = msg->mutable_repeated_value_nested_list2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list3 = 35;
      case 35: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::RepeatedValueWrapper::_InternalParse;
        object = msg->mutable_repeated_value_nested_list3();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.RepeatedListValueWrapper repeated_listvalue = 36;
      case 36: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::RepeatedListValueWrapper::_InternalParse;
        object = msg->mutable_repeated_listvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.MapOfStruct map_of_struct = 37;
      case 37: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::MapOfStruct::_InternalParse;
        object = msg->mutable_map_of_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.MapOfStruct map_of_struct_value = 38;
      case 38: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::MapOfStruct::_InternalParse;
        object = msg->mutable_map_of_struct_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.MapOfStruct map_of_listvalue = 39;
      case 39: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::MapOfStruct::_InternalParse;
        object = msg->mutable_map_of_listvalue();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StructTestCases::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.StructTestCases)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.testing.StructWrapper empty_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper empty_value2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_value2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper null_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_null_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper simple_struct = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_simple_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper longer_struct = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_longer_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_nested_struct = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_nested_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_nested_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_nested_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_list_of_nulls = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_list_of_nulls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_list_of_lists = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_list_of_lists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_list_of_structs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_list_of_structs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_empty_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.StructWrapper struct_with_list_with_empty_struct = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_with_list_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct top_level_struct = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct top_level_struct_with_empty_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_struct_with_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct top_level_struct_with_list_with_empty_struct = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_struct_with_list_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ValueWrapper value_wrapper_simple = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_wrapper_simple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ValueWrapper value_wrapper_with_struct = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_wrapper_with_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ValueWrapper value_wrapper_with_list = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_wrapper_with_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ValueWrapper value_wrapper_with_empty_list = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_wrapper_with_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ValueWrapper value_wrapper_with_list_with_empty_struct = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_wrapper_with_list_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ListValueWrapper list_value_wrapper = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_value_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_empty_list = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_value_wrapper_with_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_list_with_empty_struct = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_value_wrapper_with_list_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value top_level_value_simple = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_value_simple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value top_level_value_with_struct = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_value_with_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value top_level_value_with_list = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (210 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_value_with_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value top_level_value_with_empty_list = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (218 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_value_with_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value top_level_value_with_list_with_empty_struct = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (226 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_value_with_list_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.ListValue top_level_listvalue = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (234 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_listvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.ListValue top_level_empty_listvalue = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (242 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_empty_listvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.ListValue top_level_listvalue_with_empty_struct = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (250 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_listvalue_with_empty_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.RepeatedValueWrapper repeated_value = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (258 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (266 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_value_nested_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list2 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (274 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_value_nested_list2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list3 = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (282 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_value_nested_list3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.RepeatedListValueWrapper repeated_listvalue = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (290 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_listvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.MapOfStruct map_of_struct = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (298 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_of_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.MapOfStruct map_of_struct_value = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (306 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_of_struct_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.MapOfStruct map_of_listvalue = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (314 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_of_listvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.StructTestCases)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.StructTestCases)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StructTestCases::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.StructTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.StructWrapper empty_value = 1;
  if (this->has_empty_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::empty_value(this), output);
  }

  // .google.protobuf.testing.StructWrapper empty_value2 = 2;
  if (this->has_empty_value2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::empty_value2(this), output);
  }

  // .google.protobuf.testing.StructWrapper null_value = 3;
  if (this->has_null_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::null_value(this), output);
  }

  // .google.protobuf.testing.StructWrapper simple_struct = 4;
  if (this->has_simple_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::simple_struct(this), output);
  }

  // .google.protobuf.testing.StructWrapper longer_struct = 5;
  if (this->has_longer_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::longer_struct(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_struct = 6;
  if (this->has_struct_with_nested_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::struct_with_nested_struct(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_list = 7;
  if (this->has_struct_with_nested_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::struct_with_nested_list(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_nulls = 8;
  if (this->has_struct_with_list_of_nulls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::struct_with_list_of_nulls(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_lists = 9;
  if (this->has_struct_with_list_of_lists()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::struct_with_list_of_lists(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_structs = 10;
  if (this->has_struct_with_list_of_structs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::struct_with_list_of_structs(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_empty_list = 11;
  if (this->has_struct_with_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::struct_with_empty_list(this), output);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_with_empty_struct = 12;
  if (this->has_struct_with_list_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::struct_with_list_with_empty_struct(this), output);
  }

  // .google.protobuf.Struct top_level_struct = 13;
  if (this->has_top_level_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::top_level_struct(this), output);
  }

  // .google.protobuf.Struct top_level_struct_with_empty_list = 14;
  if (this->has_top_level_struct_with_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::top_level_struct_with_empty_list(this), output);
  }

  // .google.protobuf.Struct top_level_struct_with_list_with_empty_struct = 15;
  if (this->has_top_level_struct_with_list_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::top_level_struct_with_list_with_empty_struct(this), output);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_simple = 16;
  if (this->has_value_wrapper_simple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::value_wrapper_simple(this), output);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_struct = 17;
  if (this->has_value_wrapper_with_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::value_wrapper_with_struct(this), output);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list = 18;
  if (this->has_value_wrapper_with_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, HasBitSetters::value_wrapper_with_list(this), output);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_empty_list = 19;
  if (this->has_value_wrapper_with_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, HasBitSetters::value_wrapper_with_empty_list(this), output);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list_with_empty_struct = 20;
  if (this->has_value_wrapper_with_list_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, HasBitSetters::value_wrapper_with_list_with_empty_struct(this), output);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper = 21;
  if (this->has_list_value_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, HasBitSetters::list_value_wrapper(this), output);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_empty_list = 22;
  if (this->has_list_value_wrapper_with_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, HasBitSetters::list_value_wrapper_with_empty_list(this), output);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_list_with_empty_struct = 23;
  if (this->has_list_value_wrapper_with_list_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, HasBitSetters::list_value_wrapper_with_list_with_empty_struct(this), output);
  }

  // .google.protobuf.Value top_level_value_simple = 24;
  if (this->has_top_level_value_simple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, HasBitSetters::top_level_value_simple(this), output);
  }

  // .google.protobuf.Value top_level_value_with_struct = 25;
  if (this->has_top_level_value_with_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, HasBitSetters::top_level_value_with_struct(this), output);
  }

  // .google.protobuf.Value top_level_value_with_list = 26;
  if (this->has_top_level_value_with_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, HasBitSetters::top_level_value_with_list(this), output);
  }

  // .google.protobuf.Value top_level_value_with_empty_list = 27;
  if (this->has_top_level_value_with_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, HasBitSetters::top_level_value_with_empty_list(this), output);
  }

  // .google.protobuf.Value top_level_value_with_list_with_empty_struct = 28;
  if (this->has_top_level_value_with_list_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, HasBitSetters::top_level_value_with_list_with_empty_struct(this), output);
  }

  // .google.protobuf.ListValue top_level_listvalue = 29;
  if (this->has_top_level_listvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, HasBitSetters::top_level_listvalue(this), output);
  }

  // .google.protobuf.ListValue top_level_empty_listvalue = 30;
  if (this->has_top_level_empty_listvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, HasBitSetters::top_level_empty_listvalue(this), output);
  }

  // .google.protobuf.ListValue top_level_listvalue_with_empty_struct = 31;
  if (this->has_top_level_listvalue_with_empty_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, HasBitSetters::top_level_listvalue_with_empty_struct(this), output);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value = 32;
  if (this->has_repeated_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, HasBitSetters::repeated_value(this), output);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list = 33;
  if (this->has_repeated_value_nested_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, HasBitSetters::repeated_value_nested_list(this), output);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list2 = 34;
  if (this->has_repeated_value_nested_list2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, HasBitSetters::repeated_value_nested_list2(this), output);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list3 = 35;
  if (this->has_repeated_value_nested_list3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, HasBitSetters::repeated_value_nested_list3(this), output);
  }

  // .google.protobuf.testing.RepeatedListValueWrapper repeated_listvalue = 36;
  if (this->has_repeated_listvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, HasBitSetters::repeated_listvalue(this), output);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct = 37;
  if (this->has_map_of_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, HasBitSetters::map_of_struct(this), output);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct_value = 38;
  if (this->has_map_of_struct_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, HasBitSetters::map_of_struct_value(this), output);
  }

  // .google.protobuf.testing.MapOfStruct map_of_listvalue = 39;
  if (this->has_map_of_listvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, HasBitSetters::map_of_listvalue(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.StructTestCases)
}

::google::protobuf::uint8* StructTestCases::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.StructTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.StructWrapper empty_value = 1;
  if (this->has_empty_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::empty_value(this), target);
  }

  // .google.protobuf.testing.StructWrapper empty_value2 = 2;
  if (this->has_empty_value2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::empty_value2(this), target);
  }

  // .google.protobuf.testing.StructWrapper null_value = 3;
  if (this->has_null_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::null_value(this), target);
  }

  // .google.protobuf.testing.StructWrapper simple_struct = 4;
  if (this->has_simple_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::simple_struct(this), target);
  }

  // .google.protobuf.testing.StructWrapper longer_struct = 5;
  if (this->has_longer_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::longer_struct(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_struct = 6;
  if (this->has_struct_with_nested_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::struct_with_nested_struct(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_list = 7;
  if (this->has_struct_with_nested_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::struct_with_nested_list(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_nulls = 8;
  if (this->has_struct_with_list_of_nulls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::struct_with_list_of_nulls(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_lists = 9;
  if (this->has_struct_with_list_of_lists()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::struct_with_list_of_lists(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_structs = 10;
  if (this->has_struct_with_list_of_structs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::struct_with_list_of_structs(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_empty_list = 11;
  if (this->has_struct_with_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::struct_with_empty_list(this), target);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_with_empty_struct = 12;
  if (this->has_struct_with_list_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::struct_with_list_with_empty_struct(this), target);
  }

  // .google.protobuf.Struct top_level_struct = 13;
  if (this->has_top_level_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::top_level_struct(this), target);
  }

  // .google.protobuf.Struct top_level_struct_with_empty_list = 14;
  if (this->has_top_level_struct_with_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::top_level_struct_with_empty_list(this), target);
  }

  // .google.protobuf.Struct top_level_struct_with_list_with_empty_struct = 15;
  if (this->has_top_level_struct_with_list_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::top_level_struct_with_list_with_empty_struct(this), target);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_simple = 16;
  if (this->has_value_wrapper_simple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::value_wrapper_simple(this), target);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_struct = 17;
  if (this->has_value_wrapper_with_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::value_wrapper_with_struct(this), target);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list = 18;
  if (this->has_value_wrapper_with_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, HasBitSetters::value_wrapper_with_list(this), target);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_empty_list = 19;
  if (this->has_value_wrapper_with_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, HasBitSetters::value_wrapper_with_empty_list(this), target);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list_with_empty_struct = 20;
  if (this->has_value_wrapper_with_list_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, HasBitSetters::value_wrapper_with_list_with_empty_struct(this), target);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper = 21;
  if (this->has_list_value_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, HasBitSetters::list_value_wrapper(this), target);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_empty_list = 22;
  if (this->has_list_value_wrapper_with_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, HasBitSetters::list_value_wrapper_with_empty_list(this), target);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_list_with_empty_struct = 23;
  if (this->has_list_value_wrapper_with_list_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, HasBitSetters::list_value_wrapper_with_list_with_empty_struct(this), target);
  }

  // .google.protobuf.Value top_level_value_simple = 24;
  if (this->has_top_level_value_simple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, HasBitSetters::top_level_value_simple(this), target);
  }

  // .google.protobuf.Value top_level_value_with_struct = 25;
  if (this->has_top_level_value_with_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, HasBitSetters::top_level_value_with_struct(this), target);
  }

  // .google.protobuf.Value top_level_value_with_list = 26;
  if (this->has_top_level_value_with_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, HasBitSetters::top_level_value_with_list(this), target);
  }

  // .google.protobuf.Value top_level_value_with_empty_list = 27;
  if (this->has_top_level_value_with_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, HasBitSetters::top_level_value_with_empty_list(this), target);
  }

  // .google.protobuf.Value top_level_value_with_list_with_empty_struct = 28;
  if (this->has_top_level_value_with_list_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, HasBitSetters::top_level_value_with_list_with_empty_struct(this), target);
  }

  // .google.protobuf.ListValue top_level_listvalue = 29;
  if (this->has_top_level_listvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, HasBitSetters::top_level_listvalue(this), target);
  }

  // .google.protobuf.ListValue top_level_empty_listvalue = 30;
  if (this->has_top_level_empty_listvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, HasBitSetters::top_level_empty_listvalue(this), target);
  }

  // .google.protobuf.ListValue top_level_listvalue_with_empty_struct = 31;
  if (this->has_top_level_listvalue_with_empty_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, HasBitSetters::top_level_listvalue_with_empty_struct(this), target);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value = 32;
  if (this->has_repeated_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, HasBitSetters::repeated_value(this), target);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list = 33;
  if (this->has_repeated_value_nested_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, HasBitSetters::repeated_value_nested_list(this), target);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list2 = 34;
  if (this->has_repeated_value_nested_list2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, HasBitSetters::repeated_value_nested_list2(this), target);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list3 = 35;
  if (this->has_repeated_value_nested_list3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, HasBitSetters::repeated_value_nested_list3(this), target);
  }

  // .google.protobuf.testing.RepeatedListValueWrapper repeated_listvalue = 36;
  if (this->has_repeated_listvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, HasBitSetters::repeated_listvalue(this), target);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct = 37;
  if (this->has_map_of_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, HasBitSetters::map_of_struct(this), target);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct_value = 38;
  if (this->has_map_of_struct_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, HasBitSetters::map_of_struct_value(this), target);
  }

  // .google.protobuf.testing.MapOfStruct map_of_listvalue = 39;
  if (this->has_map_of_listvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, HasBitSetters::map_of_listvalue(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.StructTestCases)
  return target;
}

size_t StructTestCases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.StructTestCases)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.testing.StructWrapper empty_value = 1;
  if (this->has_empty_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *empty_value_);
  }

  // .google.protobuf.testing.StructWrapper empty_value2 = 2;
  if (this->has_empty_value2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *empty_value2_);
  }

  // .google.protobuf.testing.StructWrapper null_value = 3;
  if (this->has_null_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *null_value_);
  }

  // .google.protobuf.testing.StructWrapper simple_struct = 4;
  if (this->has_simple_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *simple_struct_);
  }

  // .google.protobuf.testing.StructWrapper longer_struct = 5;
  if (this->has_longer_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *longer_struct_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_struct = 6;
  if (this->has_struct_with_nested_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_nested_struct_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_nested_list = 7;
  if (this->has_struct_with_nested_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_nested_list_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_nulls = 8;
  if (this->has_struct_with_list_of_nulls()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_list_of_nulls_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_lists = 9;
  if (this->has_struct_with_list_of_lists()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_list_of_lists_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_of_structs = 10;
  if (this->has_struct_with_list_of_structs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_list_of_structs_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_empty_list = 11;
  if (this->has_struct_with_empty_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_empty_list_);
  }

  // .google.protobuf.testing.StructWrapper struct_with_list_with_empty_struct = 12;
  if (this->has_struct_with_list_with_empty_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_with_list_with_empty_struct_);
  }

  // .google.protobuf.Struct top_level_struct = 13;
  if (this->has_top_level_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_struct_);
  }

  // .google.protobuf.Struct top_level_struct_with_empty_list = 14;
  if (this->has_top_level_struct_with_empty_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_struct_with_empty_list_);
  }

  // .google.protobuf.Struct top_level_struct_with_list_with_empty_struct = 15;
  if (this->has_top_level_struct_with_list_with_empty_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_struct_with_list_with_empty_struct_);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_simple = 16;
  if (this->has_value_wrapper_simple()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_wrapper_simple_);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_struct = 17;
  if (this->has_value_wrapper_with_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_wrapper_with_struct_);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list = 18;
  if (this->has_value_wrapper_with_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_wrapper_with_list_);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_empty_list = 19;
  if (this->has_value_wrapper_with_empty_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_wrapper_with_empty_list_);
  }

  // .google.protobuf.testing.ValueWrapper value_wrapper_with_list_with_empty_struct = 20;
  if (this->has_value_wrapper_with_list_with_empty_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_wrapper_with_list_with_empty_struct_);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper = 21;
  if (this->has_list_value_wrapper()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_value_wrapper_);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_empty_list = 22;
  if (this->has_list_value_wrapper_with_empty_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_value_wrapper_with_empty_list_);
  }

  // .google.protobuf.testing.ListValueWrapper list_value_wrapper_with_list_with_empty_struct = 23;
  if (this->has_list_value_wrapper_with_list_with_empty_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *list_value_wrapper_with_list_with_empty_struct_);
  }

  // .google.protobuf.Value top_level_value_simple = 24;
  if (this->has_top_level_value_simple()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_value_simple_);
  }

  // .google.protobuf.Value top_level_value_with_struct = 25;
  if (this->has_top_level_value_with_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_value_with_struct_);
  }

  // .google.protobuf.Value top_level_value_with_list = 26;
  if (this->has_top_level_value_with_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_value_with_list_);
  }

  // .google.protobuf.Value top_level_value_with_empty_list = 27;
  if (this->has_top_level_value_with_empty_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_value_with_empty_list_);
  }

  // .google.protobuf.Value top_level_value_with_list_with_empty_struct = 28;
  if (this->has_top_level_value_with_list_with_empty_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_value_with_list_with_empty_struct_);
  }

  // .google.protobuf.ListValue top_level_listvalue = 29;
  if (this->has_top_level_listvalue()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_listvalue_);
  }

  // .google.protobuf.ListValue top_level_empty_listvalue = 30;
  if (this->has_top_level_empty_listvalue()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_empty_listvalue_);
  }

  // .google.protobuf.ListValue top_level_listvalue_with_empty_struct = 31;
  if (this->has_top_level_listvalue_with_empty_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_listvalue_with_empty_struct_);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value = 32;
  if (this->has_repeated_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_value_);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list = 33;
  if (this->has_repeated_value_nested_list()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_value_nested_list_);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list2 = 34;
  if (this->has_repeated_value_nested_list2()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_value_nested_list2_);
  }

  // .google.protobuf.testing.RepeatedValueWrapper repeated_value_nested_list3 = 35;
  if (this->has_repeated_value_nested_list3()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_value_nested_list3_);
  }

  // .google.protobuf.testing.RepeatedListValueWrapper repeated_listvalue = 36;
  if (this->has_repeated_listvalue()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_listvalue_);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct = 37;
  if (this->has_map_of_struct()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_of_struct_);
  }

  // .google.protobuf.testing.MapOfStruct map_of_struct_value = 38;
  if (this->has_map_of_struct_value()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_of_struct_value_);
  }

  // .google.protobuf.testing.MapOfStruct map_of_listvalue = 39;
  if (this->has_map_of_listvalue()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_of_listvalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StructTestCases::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.StructTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  const StructTestCases* source =
      ::google::protobuf::DynamicCastToGenerated<StructTestCases>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.StructTestCases)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.StructTestCases)
    MergeFrom(*source);
  }
}

void StructTestCases::MergeFrom(const StructTestCases& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.StructTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_empty_value()) {
    mutable_empty_value()->::google::protobuf::testing::StructWrapper::MergeFrom(from.empty_value());
  }
  if (from.has_empty_value2()) {
    mutable_empty_value2()->::google::protobuf::testing::StructWrapper::MergeFrom(from.empty_value2());
  }
  if (from.has_null_value()) {
    mutable_null_value()->::google::protobuf::testing::StructWrapper::MergeFrom(from.null_value());
  }
  if (from.has_simple_struct()) {
    mutable_simple_struct()->::google::protobuf::testing::StructWrapper::MergeFrom(from.simple_struct());
  }
  if (from.has_longer_struct()) {
    mutable_longer_struct()->::google::protobuf::testing::StructWrapper::MergeFrom(from.longer_struct());
  }
  if (from.has_struct_with_nested_struct()) {
    mutable_struct_with_nested_struct()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_nested_struct());
  }
  if (from.has_struct_with_nested_list()) {
    mutable_struct_with_nested_list()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_nested_list());
  }
  if (from.has_struct_with_list_of_nulls()) {
    mutable_struct_with_list_of_nulls()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_list_of_nulls());
  }
  if (from.has_struct_with_list_of_lists()) {
    mutable_struct_with_list_of_lists()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_list_of_lists());
  }
  if (from.has_struct_with_list_of_structs()) {
    mutable_struct_with_list_of_structs()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_list_of_structs());
  }
  if (from.has_struct_with_empty_list()) {
    mutable_struct_with_empty_list()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_empty_list());
  }
  if (from.has_struct_with_list_with_empty_struct()) {
    mutable_struct_with_list_with_empty_struct()->::google::protobuf::testing::StructWrapper::MergeFrom(from.struct_with_list_with_empty_struct());
  }
  if (from.has_top_level_struct()) {
    mutable_top_level_struct()->::google::protobuf::Struct::MergeFrom(from.top_level_struct());
  }
  if (from.has_top_level_struct_with_empty_list()) {
    mutable_top_level_struct_with_empty_list()->::google::protobuf::Struct::MergeFrom(from.top_level_struct_with_empty_list());
  }
  if (from.has_top_level_struct_with_list_with_empty_struct()) {
    mutable_top_level_struct_with_list_with_empty_struct()->::google::protobuf::Struct::MergeFrom(from.top_level_struct_with_list_with_empty_struct());
  }
  if (from.has_value_wrapper_simple()) {
    mutable_value_wrapper_simple()->::google::protobuf::testing::ValueWrapper::MergeFrom(from.value_wrapper_simple());
  }
  if (from.has_value_wrapper_with_struct()) {
    mutable_value_wrapper_with_struct()->::google::protobuf::testing::ValueWrapper::MergeFrom(from.value_wrapper_with_struct());
  }
  if (from.has_value_wrapper_with_list()) {
    mutable_value_wrapper_with_list()->::google::protobuf::testing::ValueWrapper::MergeFrom(from.value_wrapper_with_list());
  }
  if (from.has_value_wrapper_with_empty_list()) {
    mutable_value_wrapper_with_empty_list()->::google::protobuf::testing::ValueWrapper::MergeFrom(from.value_wrapper_with_empty_list());
  }
  if (from.has_value_wrapper_with_list_with_empty_struct()) {
    mutable_value_wrapper_with_list_with_empty_struct()->::google::protobuf::testing::ValueWrapper::MergeFrom(from.value_wrapper_with_list_with_empty_struct());
  }
  if (from.has_list_value_wrapper()) {
    mutable_list_value_wrapper()->::google::protobuf::testing::ListValueWrapper::MergeFrom(from.list_value_wrapper());
  }
  if (from.has_list_value_wrapper_with_empty_list()) {
    mutable_list_value_wrapper_with_empty_list()->::google::protobuf::testing::ListValueWrapper::MergeFrom(from.list_value_wrapper_with_empty_list());
  }
  if (from.has_list_value_wrapper_with_list_with_empty_struct()) {
    mutable_list_value_wrapper_with_list_with_empty_struct()->::google::protobuf::testing::ListValueWrapper::MergeFrom(from.list_value_wrapper_with_list_with_empty_struct());
  }
  if (from.has_top_level_value_simple()) {
    mutable_top_level_value_simple()->::google::protobuf::Value::MergeFrom(from.top_level_value_simple());
  }
  if (from.has_top_level_value_with_struct()) {
    mutable_top_level_value_with_struct()->::google::protobuf::Value::MergeFrom(from.top_level_value_with_struct());
  }
  if (from.has_top_level_value_with_list()) {
    mutable_top_level_value_with_list()->::google::protobuf::Value::MergeFrom(from.top_level_value_with_list());
  }
  if (from.has_top_level_value_with_empty_list()) {
    mutable_top_level_value_with_empty_list()->::google::protobuf::Value::MergeFrom(from.top_level_value_with_empty_list());
  }
  if (from.has_top_level_value_with_list_with_empty_struct()) {
    mutable_top_level_value_with_list_with_empty_struct()->::google::protobuf::Value::MergeFrom(from.top_level_value_with_list_with_empty_struct());
  }
  if (from.has_top_level_listvalue()) {
    mutable_top_level_listvalue()->::google::protobuf::ListValue::MergeFrom(from.top_level_listvalue());
  }
  if (from.has_top_level_empty_listvalue()) {
    mutable_top_level_empty_listvalue()->::google::protobuf::ListValue::MergeFrom(from.top_level_empty_listvalue());
  }
  if (from.has_top_level_listvalue_with_empty_struct()) {
    mutable_top_level_listvalue_with_empty_struct()->::google::protobuf::ListValue::MergeFrom(from.top_level_listvalue_with_empty_struct());
  }
  if (from.has_repeated_value()) {
    mutable_repeated_value()->::google::protobuf::testing::RepeatedValueWrapper::MergeFrom(from.repeated_value());
  }
  if (from.has_repeated_value_nested_list()) {
    mutable_repeated_value_nested_list()->::google::protobuf::testing::RepeatedValueWrapper::MergeFrom(from.repeated_value_nested_list());
  }
  if (from.has_repeated_value_nested_list2()) {
    mutable_repeated_value_nested_list2()->::google::protobuf::testing::RepeatedValueWrapper::MergeFrom(from.repeated_value_nested_list2());
  }
  if (from.has_repeated_value_nested_list3()) {
    mutable_repeated_value_nested_list3()->::google::protobuf::testing::RepeatedValueWrapper::MergeFrom(from.repeated_value_nested_list3());
  }
  if (from.has_repeated_listvalue()) {
    mutable_repeated_listvalue()->::google::protobuf::testing::RepeatedListValueWrapper::MergeFrom(from.repeated_listvalue());
  }
  if (from.has_map_of_struct()) {
    mutable_map_of_struct()->::google::protobuf::testing::MapOfStruct::MergeFrom(from.map_of_struct());
  }
  if (from.has_map_of_struct_value()) {
    mutable_map_of_struct_value()->::google::protobuf::testing::MapOfStruct::MergeFrom(from.map_of_struct_value());
  }
  if (from.has_map_of_listvalue()) {
    mutable_map_of_listvalue()->::google::protobuf::testing::MapOfStruct::MergeFrom(from.map_of_listvalue());
  }
}

void StructTestCases::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.StructTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructTestCases::CopyFrom(const StructTestCases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.StructTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructTestCases::IsInitialized() const {
  return true;
}

void StructTestCases::Swap(StructTestCases* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructTestCases::InternalSwap(StructTestCases* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(empty_value_, other->empty_value_);
  swap(empty_value2_, other->empty_value2_);
  swap(null_value_, other->null_value_);
  swap(simple_struct_, other->simple_struct_);
  swap(longer_struct_, other->longer_struct_);
  swap(struct_with_nested_struct_, other->struct_with_nested_struct_);
  swap(struct_with_nested_list_, other->struct_with_nested_list_);
  swap(struct_with_list_of_nulls_, other->struct_with_list_of_nulls_);
  swap(struct_with_list_of_lists_, other->struct_with_list_of_lists_);
  swap(struct_with_list_of_structs_, other->struct_with_list_of_structs_);
  swap(struct_with_empty_list_, other->struct_with_empty_list_);
  swap(struct_with_list_with_empty_struct_, other->struct_with_list_with_empty_struct_);
  swap(top_level_struct_, other->top_level_struct_);
  swap(top_level_struct_with_empty_list_, other->top_level_struct_with_empty_list_);
  swap(top_level_struct_with_list_with_empty_struct_, other->top_level_struct_with_list_with_empty_struct_);
  swap(value_wrapper_simple_, other->value_wrapper_simple_);
  swap(value_wrapper_with_struct_, other->value_wrapper_with_struct_);
  swap(value_wrapper_with_list_, other->value_wrapper_with_list_);
  swap(value_wrapper_with_empty_list_, other->value_wrapper_with_empty_list_);
  swap(value_wrapper_with_list_with_empty_struct_, other->value_wrapper_with_list_with_empty_struct_);
  swap(list_value_wrapper_, other->list_value_wrapper_);
  swap(list_value_wrapper_with_empty_list_, other->list_value_wrapper_with_empty_list_);
  swap(list_value_wrapper_with_list_with_empty_struct_, other->list_value_wrapper_with_list_with_empty_struct_);
  swap(top_level_value_simple_, other->top_level_value_simple_);
  swap(top_level_value_with_struct_, other->top_level_value_with_struct_);
  swap(top_level_value_with_list_, other->top_level_value_with_list_);
  swap(top_level_value_with_empty_list_, other->top_level_value_with_empty_list_);
  swap(top_level_value_with_list_with_empty_struct_, other->top_level_value_with_list_with_empty_struct_);
  swap(top_level_listvalue_, other->top_level_listvalue_);
  swap(top_level_empty_listvalue_, other->top_level_empty_listvalue_);
  swap(top_level_listvalue_with_empty_struct_, other->top_level_listvalue_with_empty_struct_);
  swap(repeated_value_, other->repeated_value_);
  swap(repeated_value_nested_list_, other->repeated_value_nested_list_);
  swap(repeated_value_nested_list2_, other->repeated_value_nested_list2_);
  swap(repeated_value_nested_list3_, other->repeated_value_nested_list3_);
  swap(repeated_listvalue_, other->repeated_listvalue_);
  swap(map_of_struct_, other->map_of_struct_);
  swap(map_of_struct_value_, other->map_of_struct_value_);
  swap(map_of_listvalue_, other->map_of_listvalue_);
}

::google::protobuf::Metadata StructTestCases::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StructWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_StructWrapper_default_instance_._instance.get_mutable()->struct__ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class StructWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::Struct& struct_(const StructWrapper* msg);
};

const ::google::protobuf::Struct&
StructWrapper::HasBitSetters::struct_(const StructWrapper* msg) {
  return *msg->struct__;
}
void StructWrapper::clear_struct_() {
  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructWrapper::kStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructWrapper::StructWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.StructWrapper)
}
StructWrapper::StructWrapper(const StructWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_struct_()) {
    struct__ = new ::google::protobuf::Struct(*from.struct__);
  } else {
    struct__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.StructWrapper)
}

void StructWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  struct__ = nullptr;
}

StructWrapper::~StructWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.StructWrapper)
  SharedDtor();
}

void StructWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete struct__;
}

void StructWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StructWrapper& StructWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StructWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void StructWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.StructWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StructWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StructWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct struct = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_struct_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StructWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.StructWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct struct = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.StructWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.StructWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StructWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.StructWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  if (this->has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::struct_(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.StructWrapper)
}

::google::protobuf::uint8* StructWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.StructWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  if (this->has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::struct_(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.StructWrapper)
  return target;
}

size_t StructWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.StructWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct struct = 1;
  if (this->has_struct_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StructWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.StructWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const StructWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<StructWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.StructWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.StructWrapper)
    MergeFrom(*source);
  }
}

void StructWrapper::MergeFrom(const StructWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.StructWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_struct_()) {
    mutable_struct_()->::google::protobuf::Struct::MergeFrom(from.struct_());
  }
}

void StructWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.StructWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructWrapper::CopyFrom(const StructWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.StructWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructWrapper::IsInitialized() const {
  return true;
}

void StructWrapper::Swap(StructWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructWrapper::InternalSwap(StructWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(struct__, other->struct__);
}

::google::protobuf::Metadata StructWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ValueWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_ValueWrapper_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
}
class ValueWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::Value& value(const ValueWrapper* msg);
};

const ::google::protobuf::Value&
ValueWrapper::HasBitSetters::value(const ValueWrapper* msg) {
  return *msg->value_;
}
void ValueWrapper::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueWrapper::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueWrapper::ValueWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.ValueWrapper)
}
ValueWrapper::ValueWrapper(const ValueWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::Value(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.ValueWrapper)
}

void ValueWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  value_ = nullptr;
}

ValueWrapper::~ValueWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.ValueWrapper)
  SharedDtor();
}

void ValueWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void ValueWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ValueWrapper& ValueWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void ValueWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.ValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ValueWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ValueWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Value value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Value::_InternalParse;
        object = msg->mutable_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ValueWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.ValueWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Value value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.ValueWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.ValueWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ValueWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.ValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Value value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::value(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.ValueWrapper)
}

::google::protobuf::uint8* ValueWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.ValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Value value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::value(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.ValueWrapper)
  return target;
}

size_t ValueWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.ValueWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Value value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.ValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<ValueWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.ValueWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.ValueWrapper)
    MergeFrom(*source);
  }
}

void ValueWrapper::MergeFrom(const ValueWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.ValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::google::protobuf::Value::MergeFrom(from.value());
  }
}

void ValueWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.ValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueWrapper::CopyFrom(const ValueWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.ValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueWrapper::IsInitialized() const {
  return true;
}

void ValueWrapper::Swap(ValueWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueWrapper::InternalSwap(ValueWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::google::protobuf::Metadata ValueWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RepeatedValueWrapper::InitAsDefaultInstance() {
}
class RepeatedValueWrapper::HasBitSetters {
 public:
};

void RepeatedValueWrapper::clear_values() {
  values_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedValueWrapper::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedValueWrapper::RepeatedValueWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.RepeatedValueWrapper)
}
RepeatedValueWrapper::RepeatedValueWrapper(const RepeatedValueWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.RepeatedValueWrapper)
}

void RepeatedValueWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
}

RepeatedValueWrapper::~RepeatedValueWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.RepeatedValueWrapper)
  SharedDtor();
}

void RepeatedValueWrapper::SharedDtor() {
}

void RepeatedValueWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepeatedValueWrapper& RepeatedValueWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RepeatedValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void RepeatedValueWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.RepeatedValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RepeatedValueWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RepeatedValueWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.protobuf.Value values = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::Value::_InternalParse;
          object = msg->add_values();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RepeatedValueWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.RepeatedValueWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Value values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.RepeatedValueWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.RepeatedValueWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RepeatedValueWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.RepeatedValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Value values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.RepeatedValueWrapper)
}

::google::protobuf::uint8* RepeatedValueWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.RepeatedValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Value values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.RepeatedValueWrapper)
  return target;
}

size_t RepeatedValueWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.RepeatedValueWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Value values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedValueWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.RepeatedValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedValueWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<RepeatedValueWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.RepeatedValueWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.RepeatedValueWrapper)
    MergeFrom(*source);
  }
}

void RepeatedValueWrapper::MergeFrom(const RepeatedValueWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.RepeatedValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void RepeatedValueWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.RepeatedValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedValueWrapper::CopyFrom(const RepeatedValueWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.RepeatedValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedValueWrapper::IsInitialized() const {
  return true;
}

void RepeatedValueWrapper::Swap(RepeatedValueWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatedValueWrapper::InternalSwap(RepeatedValueWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
}

::google::protobuf::Metadata RepeatedValueWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListValueWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_ListValueWrapper_default_instance_._instance.get_mutable()->shopping_list_ = const_cast< ::google::protobuf::ListValue*>(
      ::google::protobuf::ListValue::internal_default_instance());
}
class ListValueWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::ListValue& shopping_list(const ListValueWrapper* msg);
};

const ::google::protobuf::ListValue&
ListValueWrapper::HasBitSetters::shopping_list(const ListValueWrapper* msg) {
  return *msg->shopping_list_;
}
void ListValueWrapper::clear_shopping_list() {
  if (GetArenaNoVirtual() == nullptr && shopping_list_ != nullptr) {
    delete shopping_list_;
  }
  shopping_list_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListValueWrapper::kShoppingListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListValueWrapper::ListValueWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.ListValueWrapper)
}
ListValueWrapper::ListValueWrapper(const ListValueWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shopping_list()) {
    shopping_list_ = new ::google::protobuf::ListValue(*from.shopping_list_);
  } else {
    shopping_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.ListValueWrapper)
}

void ListValueWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  shopping_list_ = nullptr;
}

ListValueWrapper::~ListValueWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.ListValueWrapper)
  SharedDtor();
}

void ListValueWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete shopping_list_;
}

void ListValueWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListValueWrapper& ListValueWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void ListValueWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.ListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && shopping_list_ != nullptr) {
    delete shopping_list_;
  }
  shopping_list_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListValueWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListValueWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.ListValue shopping_list = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::ListValue::_InternalParse;
        object = msg->mutable_shopping_list();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListValueWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.ListValueWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.ListValue shopping_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shopping_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.ListValueWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.ListValueWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListValueWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.ListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.ListValue shopping_list = 1;
  if (this->has_shopping_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::shopping_list(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.ListValueWrapper)
}

::google::protobuf::uint8* ListValueWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.ListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.ListValue shopping_list = 1;
  if (this->has_shopping_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::shopping_list(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.ListValueWrapper)
  return target;
}

size_t ListValueWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.ListValueWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.ListValue shopping_list = 1;
  if (this->has_shopping_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shopping_list_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListValueWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.ListValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const ListValueWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<ListValueWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.ListValueWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.ListValueWrapper)
    MergeFrom(*source);
  }
}

void ListValueWrapper::MergeFrom(const ListValueWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.ListValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shopping_list()) {
    mutable_shopping_list()->::google::protobuf::ListValue::MergeFrom(from.shopping_list());
  }
}

void ListValueWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.ListValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListValueWrapper::CopyFrom(const ListValueWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.ListValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListValueWrapper::IsInitialized() const {
  return true;
}

void ListValueWrapper::Swap(ListValueWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListValueWrapper::InternalSwap(ListValueWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(shopping_list_, other->shopping_list_);
}

::google::protobuf::Metadata ListValueWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RepeatedListValueWrapper::InitAsDefaultInstance() {
}
class RepeatedListValueWrapper::HasBitSetters {
 public:
};

void RepeatedListValueWrapper::clear_dimensions() {
  dimensions_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatedListValueWrapper::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatedListValueWrapper::RepeatedListValueWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.RepeatedListValueWrapper)
}
RepeatedListValueWrapper::RepeatedListValueWrapper(const RepeatedListValueWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      dimensions_(from.dimensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.RepeatedListValueWrapper)
}

void RepeatedListValueWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
}

RepeatedListValueWrapper::~RepeatedListValueWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.RepeatedListValueWrapper)
  SharedDtor();
}

void RepeatedListValueWrapper::SharedDtor() {
}

void RepeatedListValueWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RepeatedListValueWrapper& RepeatedListValueWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RepeatedListValueWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void RepeatedListValueWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.RepeatedListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RepeatedListValueWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RepeatedListValueWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.protobuf.ListValue dimensions = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::ListValue::_InternalParse;
          object = msg->add_dimensions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RepeatedListValueWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.RepeatedListValueWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.ListValue dimensions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimensions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.RepeatedListValueWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.RepeatedListValueWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RepeatedListValueWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.RepeatedListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.ListValue dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dimensions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.RepeatedListValueWrapper)
}

::google::protobuf::uint8* RepeatedListValueWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.RepeatedListValueWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.ListValue dimensions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimensions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dimensions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.RepeatedListValueWrapper)
  return target;
}

size_t RepeatedListValueWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.RepeatedListValueWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.ListValue dimensions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dimensions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimensions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatedListValueWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.RepeatedListValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatedListValueWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<RepeatedListValueWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.RepeatedListValueWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.RepeatedListValueWrapper)
    MergeFrom(*source);
  }
}

void RepeatedListValueWrapper::MergeFrom(const RepeatedListValueWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.RepeatedListValueWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
}

void RepeatedListValueWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.RepeatedListValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatedListValueWrapper::CopyFrom(const RepeatedListValueWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.RepeatedListValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatedListValueWrapper::IsInitialized() const {
  return true;
}

void RepeatedListValueWrapper::Swap(RepeatedListValueWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatedListValueWrapper::InternalSwap(RepeatedListValueWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&dimensions_)->InternalSwap(CastToBase(&other->dimensions_));
}

::google::protobuf::Metadata RepeatedListValueWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

MapOfStruct_StructMapEntry_DoNotUse::MapOfStruct_StructMapEntry_DoNotUse() {}
MapOfStruct_StructMapEntry_DoNotUse::MapOfStruct_StructMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MapOfStruct_StructMapEntry_DoNotUse::MergeFrom(const MapOfStruct_StructMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MapOfStruct_StructMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[6];
}
void MapOfStruct_StructMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapOfStruct_StructMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MapOfStruct_StructMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.protobuf.testing.MapOfStruct.StructMapEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

MapOfStruct_ValueMapEntry_DoNotUse::MapOfStruct_ValueMapEntry_DoNotUse() {}
MapOfStruct_ValueMapEntry_DoNotUse::MapOfStruct_ValueMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MapOfStruct_ValueMapEntry_DoNotUse::MergeFrom(const MapOfStruct_ValueMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MapOfStruct_ValueMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[7];
}
void MapOfStruct_ValueMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapOfStruct_ValueMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MapOfStruct_ValueMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.protobuf.testing.MapOfStruct.ValueMapEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

MapOfStruct_ListvalueMapEntry_DoNotUse::MapOfStruct_ListvalueMapEntry_DoNotUse() {}
MapOfStruct_ListvalueMapEntry_DoNotUse::MapOfStruct_ListvalueMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void MapOfStruct_ListvalueMapEntry_DoNotUse::MergeFrom(const MapOfStruct_ListvalueMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MapOfStruct_ListvalueMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[8];
}
void MapOfStruct_ListvalueMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapOfStruct_ListvalueMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      MapOfStruct_ListvalueMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.protobuf.testing.MapOfStruct.ListvalueMapEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void MapOfStruct::InitAsDefaultInstance() {
}
class MapOfStruct::HasBitSetters {
 public:
};

void MapOfStruct::clear_struct_map() {
  struct_map_.Clear();
}
void MapOfStruct::clear_value_map() {
  value_map_.Clear();
}
void MapOfStruct::clear_listvalue_map() {
  listvalue_map_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapOfStruct::kStructMapFieldNumber;
const int MapOfStruct::kValueMapFieldNumber;
const int MapOfStruct::kListvalueMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapOfStruct::MapOfStruct()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.MapOfStruct)
}
MapOfStruct::MapOfStruct(const MapOfStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  struct_map_.MergeFrom(from.struct_map_);
  value_map_.MergeFrom(from.value_map_);
  listvalue_map_.MergeFrom(from.listvalue_map_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.MapOfStruct)
}

void MapOfStruct::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
}

MapOfStruct::~MapOfStruct() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.MapOfStruct)
  SharedDtor();
}

void MapOfStruct::SharedDtor() {
}

void MapOfStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapOfStruct& MapOfStruct::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MapOfStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void MapOfStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.MapOfStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  struct_map_.Clear();
  value_map_.Clear();
  listvalue_map_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MapOfStruct::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MapOfStruct*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, .google.protobuf.Struct> struct_map = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->struct_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // map<string, .google.protobuf.Value> value_map = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->value_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // map<string, .google.protobuf.ListValue> listvalue_map = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->listvalue_map_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MapOfStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.MapOfStruct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .google.protobuf.Struct> struct_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          MapOfStruct_StructMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MapOfStruct_StructMapEntry_DoNotUse,
              ::std::string, ::google::protobuf::Struct,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct > > parser(&struct_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.MapOfStruct.StructMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Value> value_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          MapOfStruct_ValueMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MapOfStruct_ValueMapEntry_DoNotUse,
              ::std::string, ::google::protobuf::Value,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Value > > parser(&value_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.MapOfStruct.ValueMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.ListValue> listvalue_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          MapOfStruct_ListvalueMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MapOfStruct_ListvalueMapEntry_DoNotUse,
              ::std::string, ::google::protobuf::ListValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue > > parser(&listvalue_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.MapOfStruct.ListvalueMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.MapOfStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.MapOfStruct)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MapOfStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.MapOfStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.protobuf.Struct> struct_map = 1;
  if (!this->struct_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.StructMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->struct_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->struct_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->struct_map().begin();
          it != this->struct_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_StructMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(struct_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_StructMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->struct_map().begin();
          it != this->struct_map().end(); ++it) {
        entry.reset(struct_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.Value> value_map = 2;
  if (!this->value_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.ValueMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->value_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->value_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_iterator
          it = this->value_map().begin();
          it != this->value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_ValueMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(value_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_ValueMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_iterator
          it = this->value_map().begin();
          it != this->value_map().end(); ++it) {
        entry.reset(value_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.ListValue> listvalue_map = 3;
  if (!this->listvalue_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.ListvalueMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->listvalue_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->listvalue_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->listvalue_map().begin();
          it != this->listvalue_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_ListvalueMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(listvalue_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_ListvalueMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->listvalue_map().begin();
          it != this->listvalue_map().end(); ++it) {
        entry.reset(listvalue_map_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.MapOfStruct)
}

::google::protobuf::uint8* MapOfStruct::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.MapOfStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .google.protobuf.Struct> struct_map = 1;
  if (!this->struct_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.StructMapEntry.key");
      }
    };

    if (false &&
        this->struct_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->struct_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->struct_map().begin();
          it != this->struct_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_StructMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(struct_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_StructMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
          it = this->struct_map().begin();
          it != this->struct_map().end(); ++it) {
        entry.reset(struct_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.Value> value_map = 2;
  if (!this->value_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.ValueMapEntry.key");
      }
    };

    if (false &&
        this->value_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->value_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_iterator
          it = this->value_map().begin();
          it != this->value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_ValueMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(value_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_ValueMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_iterator
          it = this->value_map().begin();
          it != this->value_map().end(); ++it) {
        entry.reset(value_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.ListValue> listvalue_map = 3;
  if (!this->listvalue_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.MapOfStruct.ListvalueMapEntry.key");
      }
    };

    if (false &&
        this->listvalue_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->listvalue_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->listvalue_map().begin();
          it != this->listvalue_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MapOfStruct_ListvalueMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(listvalue_map_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<MapOfStruct_ListvalueMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->listvalue_map().begin();
          it != this->listvalue_map().end(); ++it) {
        entry.reset(listvalue_map_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.MapOfStruct)
  return target;
}

size_t MapOfStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.MapOfStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Struct> struct_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->struct_map_size());
  {
    ::std::unique_ptr<MapOfStruct_StructMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Struct >::const_iterator
        it = this->struct_map().begin();
        it != this->struct_map().end(); ++it) {
      entry.reset(struct_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .google.protobuf.Value> value_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_map_size());
  {
    ::std::unique_ptr<MapOfStruct_ValueMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Value >::const_iterator
        it = this->value_map().begin();
        it != this->value_map().end(); ++it) {
      entry.reset(value_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .google.protobuf.ListValue> listvalue_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->listvalue_map_size());
  {
    ::std::unique_ptr<MapOfStruct_ListvalueMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
        it = this->listvalue_map().begin();
        it != this->listvalue_map().end(); ++it) {
      entry.reset(listvalue_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapOfStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.MapOfStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const MapOfStruct* source =
      ::google::protobuf::DynamicCastToGenerated<MapOfStruct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.MapOfStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.MapOfStruct)
    MergeFrom(*source);
  }
}

void MapOfStruct::MergeFrom(const MapOfStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.MapOfStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  struct_map_.MergeFrom(from.struct_map_);
  value_map_.MergeFrom(from.value_map_);
  listvalue_map_.MergeFrom(from.listvalue_map_);
}

void MapOfStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.MapOfStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapOfStruct::CopyFrom(const MapOfStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.MapOfStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapOfStruct::IsInitialized() const {
  return true;
}

void MapOfStruct::Swap(MapOfStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapOfStruct::InternalSwap(MapOfStruct* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  struct_map_.Swap(&other->struct_map_);
  value_map_.Swap(&other->value_map_);
  listvalue_map_.Swap(&other->listvalue_map_);
}

::google::protobuf::Metadata MapOfStruct::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Dummy::InitAsDefaultInstance() {
}
class Dummy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dummy::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dummy::Dummy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.Dummy)
}
Dummy::Dummy(const Dummy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.Dummy)
}

void Dummy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Dummy::~Dummy() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.Dummy)
  SharedDtor();
}

void Dummy::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Dummy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Dummy& Dummy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void Dummy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.Dummy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Dummy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Dummy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.testing.Dummy.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Dummy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.Dummy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.Dummy.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.Dummy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.Dummy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Dummy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.Dummy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Dummy.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.Dummy)
}

::google::protobuf::uint8* Dummy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.Dummy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Dummy.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.Dummy)
  return target;
}

size_t Dummy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.Dummy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Dummy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.Dummy)
  GOOGLE_DCHECK_NE(&from, this);
  const Dummy* source =
      ::google::protobuf::DynamicCastToGenerated<Dummy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.Dummy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.Dummy)
    MergeFrom(*source);
  }
}

void Dummy::MergeFrom(const Dummy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.Dummy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void Dummy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.Dummy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dummy::CopyFrom(const Dummy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.Dummy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dummy::IsInitialized() const {
  return true;
}

void Dummy::Swap(Dummy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dummy::InternalSwap(Dummy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Dummy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StructType::InitAsDefaultInstance() {
  ::google::protobuf::testing::_StructType_default_instance_._instance.get_mutable()->object_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class StructType::HasBitSetters {
 public:
  static const ::google::protobuf::Struct& object(const StructType* msg);
};

const ::google::protobuf::Struct&
StructType::HasBitSetters::object(const StructType* msg) {
  return *msg->object_;
}
void StructType::clear_object() {
  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructType::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructType::StructType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.StructType)
}
StructType::StructType(const StructType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object()) {
    object_ = new ::google::protobuf::Struct(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.StructType)
}

void StructType::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  object_ = nullptr;
}

StructType::~StructType() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.StructType)
  SharedDtor();
}

void StructType::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void StructType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StructType& StructType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StructType_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto.base);
  return *internal_default_instance();
}


void StructType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.StructType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StructType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StructType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Struct object = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_object();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StructType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.StructType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.StructType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.StructType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StructType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.StructType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct object = 1;
  if (this->has_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::object(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.StructType)
}

::google::protobuf::uint8* StructType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.StructType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct object = 1;
  if (this->has_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::object(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.StructType)
  return target;
}

size_t StructType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.StructType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Struct object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StructType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.StructType)
  GOOGLE_DCHECK_NE(&from, this);
  const StructType* source =
      ::google::protobuf::DynamicCastToGenerated<StructType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.StructType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.StructType)
    MergeFrom(*source);
  }
}

void StructType::MergeFrom(const StructType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.StructType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    mutable_object()->::google::protobuf::Struct::MergeFrom(from.object());
  }
}

void StructType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.StructType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructType::CopyFrom(const StructType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.StructType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructType::IsInitialized() const {
  return true;
}

void StructType::Swap(StructType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructType::InternalSwap(StructType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::google::protobuf::Metadata StructType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fstruct_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace testing
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::StructTestCases* Arena::CreateMaybeMessage< ::google::protobuf::testing::StructTestCases >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::StructTestCases >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::StructWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::StructWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::StructWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::ValueWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::ValueWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::ValueWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::RepeatedValueWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::RepeatedValueWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::RepeatedValueWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::ListValueWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::ListValueWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::ListValueWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::RepeatedListValueWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::RepeatedListValueWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::RepeatedListValueWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::MapOfStruct_StructMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::MapOfStruct_ValueMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::MapOfStruct_ListvalueMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::MapOfStruct* Arena::CreateMaybeMessage< ::google::protobuf::testing::MapOfStruct >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::MapOfStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Dummy* Arena::CreateMaybeMessage< ::google::protobuf::testing::Dummy >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Dummy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::StructType* Arena::CreateMaybeMessage< ::google::protobuf::testing::StructType >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::StructType >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
