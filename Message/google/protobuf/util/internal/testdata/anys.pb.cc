// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/util/internal/testdata/anys.proto

#include <google/protobuf/util/internal/testdata/anys.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Data_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto;
namespace google {
namespace protobuf {
namespace testing {
class AnyTestCasesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnyTestCases> _instance;
} _AnyTestCases_default_instance_;
class AnyWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnyWrapper> _instance;
} _AnyWrapper_default_instance_;
class ImportsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Imports> _instance;
} _Imports_default_instance_;
class Data_MapDataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data_MapDataEntry_DoNotUse> _instance;
} _Data_MapDataEntry_DoNotUse_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data> _instance;
} _Data_default_instance_;
class AnyInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnyIn> _instance;
} _AnyIn_default_instance_;
class AnyOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnyOut> _instance;
} _AnyOut_default_instance_;
class AnyMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnyM> _instance;
} _AnyM_default_instance_;
}  // namespace testing
}  // namespace protobuf
}  // namespace google
static void InitDefaultsAnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_AnyTestCases_default_instance_;
    new (ptr) ::google::protobuf::testing::AnyTestCases();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::AnyTestCases::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsAnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_AnyWrapper_default_instance_;
    new (ptr) ::google::protobuf::testing::AnyWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::AnyWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsImports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Imports_default_instance_;
    new (ptr) ::google::protobuf::testing::Imports();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::Imports::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Imports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsImports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base,}};

static void InitDefaultsData_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Data_MapDataEntry_DoNotUse_default_instance_;
    new (ptr) ::google::protobuf::testing::Data_MapDataEntry_DoNotUse();
  }
  ::google::protobuf::testing::Data_MapDataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Data_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsData_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {}};

static void InitDefaultsData_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_Data_default_instance_;
    new (ptr) ::google::protobuf::testing::Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsData_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Data_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base,
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsAnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_AnyIn_default_instance_;
    new (ptr) ::google::protobuf::testing::AnyIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::AnyIn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsAnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_AnyOut_default_instance_;
    new (ptr) ::google::protobuf::testing::AnyOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::AnyOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsAnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::testing::_AnyM_default_instance_;
    new (ptr) ::google::protobuf::testing::AnyM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::testing::AnyM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto}, {}};

void InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Imports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Data_MapDataEntry_DoNotUse_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[8];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, empty_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, type_only_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, wrapper_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_timestamp_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_duration_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_struct_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, recursive_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_value_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_nested_message_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_with_wrapper_type_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_with_timestamp_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_containing_map_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_containing_struct_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, any_with_message_containing_repeated_message_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, recursive_any_with_type_field_at_end_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, repeated_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, empty_any_with_null_type_url_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, top_level_any_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, top_level_any_with_type_field_at_end_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, top_level_any_with_pivot_one_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, top_level_any_with_pivot_two_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyTestCases, top_level_any_unordered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyWrapper, any_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, dbl_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, struct__),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, timestamp_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, duration_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, i32_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Imports, data_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data_MapDataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data_MapDataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data_MapDataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data_MapDataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, attr_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, str_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, msgs_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, nested_data_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, int_wrapper_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, time_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, map_data_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, struct_data_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, repeated_data_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::Data, repeated_any_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyIn, something_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyIn, any_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyOut, any_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::testing::AnyM, foo_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::protobuf::testing::AnyTestCases)},
  { 27, -1, sizeof(::google::protobuf::testing::AnyWrapper)},
  { 33, -1, sizeof(::google::protobuf::testing::Imports)},
  { 44, 51, sizeof(::google::protobuf::testing::Data_MapDataEntry_DoNotUse)},
  { 53, -1, sizeof(::google::protobuf::testing::Data)},
  { 68, -1, sizeof(::google::protobuf::testing::AnyIn)},
  { 75, -1, sizeof(::google::protobuf::testing::AnyOut)},
  { 81, -1, sizeof(::google::protobuf::testing::AnyM)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_AnyTestCases_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_AnyWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Imports_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Data_MapDataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_AnyIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_AnyOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::testing::_AnyM_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto = {
  {}, AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, "google/protobuf/util/internal/testdata/anys.proto", schemas,
  file_default_instances, TableStruct_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, 8, file_level_enum_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, file_level_service_descriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto,
};

const char descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[] =
  "\n1google/protobuf/util/internal/testdata"
  "/anys.proto\022\027google.protobuf.testing\032\031go"
  "ogle/protobuf/any.proto\032\034google/protobuf"
  "/struct.proto\032\037google/protobuf/timestamp"
  ".proto\032\036google/protobuf/duration.proto\032\036"
  "google/protobuf/wrappers.proto\"\346\013\n\014AnyTe"
  "stCases\0226\n\tempty_any\030\001 \001(\0132#.google.prot"
  "obuf.testing.AnyWrapper\022:\n\rtype_only_any"
  "\030\002 \001(\0132#.google.protobuf.testing.AnyWrap"
  "per\0228\n\013wrapper_any\030\003 \001(\0132#.google.protob"
  "uf.testing.AnyWrapper\022E\n\030any_with_timest"
  "amp_value\030\004 \001(\0132#.google.protobuf.testin"
  "g.AnyWrapper\022D\n\027any_with_duration_value\030"
  "\005 \001(\0132#.google.protobuf.testing.AnyWrapp"
  "er\022B\n\025any_with_struct_value\030\006 \001(\0132#.goog"
  "le.protobuf.testing.AnyWrapper\022:\n\rrecurs"
  "ive_any\030\007 \001(\0132#.google.protobuf.testing."
  "AnyWrapper\022C\n\026any_with_message_value\030\010 \001"
  "(\0132#.google.protobuf.testing.AnyWrapper\022"
  "D\n\027any_with_nested_message\030\t \001(\0132#.googl"
  "e.protobuf.testing.AnyWrapper\022O\n\"any_wit"
  "h_message_with_wrapper_type\030\n \001(\0132#.goog"
  "le.protobuf.testing.AnyWrapper\022L\n\037any_wi"
  "th_message_with_timestamp\030\013 \001(\0132#.google"
  ".protobuf.testing.AnyWrapper\022L\n\037any_with"
  "_message_containing_map\030\014 \001(\0132#.google.p"
  "rotobuf.testing.AnyWrapper\022O\n\"any_with_m"
  "essage_containing_struct\030\r \001(\0132#.google."
  "protobuf.testing.AnyWrapper\022Y\n,any_with_"
  "message_containing_repeated_message\030\016 \001("
  "\0132#.google.protobuf.testing.AnyWrapper\022Q"
  "\n$recursive_any_with_type_field_at_end\030\017"
  " \001(\0132#.google.protobuf.testing.AnyWrappe"
  "r\0229\n\014repeated_any\030\020 \001(\0132#.google.protobu"
  "f.testing.AnyWrapper\022I\n\034empty_any_with_n"
  "ull_type_url\030\021 \001(\0132#.google.protobuf.tes"
  "ting.AnyWrapper\022+\n\rtop_level_any\0302 \001(\0132\024"
  ".google.protobuf.Any\022B\n$top_level_any_wi"
  "th_type_field_at_end\0303 \001(\0132\024.google.prot"
  "obuf.Any\022:\n\034top_level_any_with_pivot_one"
  "\0304 \001(\0132\024.google.protobuf.Any\022:\n\034top_leve"
  "l_any_with_pivot_two\0305 \001(\0132\024.google.prot"
  "obuf.Any\0225\n\027top_level_any_unordered\0306 \001("
  "\0132\024.google.protobuf.Any\"/\n\nAnyWrapper\022!\n"
  "\003any\030\001 \001(\0132\024.google.protobuf.Any\"\220\002\n\007Imp"
  "orts\022)\n\003dbl\030\001 \001(\0132\034.google.protobuf.Doub"
  "leValue\022\'\n\006struct\030\002 \001(\0132\027.google.protobu"
  "f.Struct\022-\n\ttimestamp\030\003 \001(\0132\032.google.pro"
  "tobuf.Timestamp\022+\n\010duration\030\004 \001(\0132\031.goog"
  "le.protobuf.Duration\022(\n\003i32\030\005 \001(\0132\033.goog"
  "le.protobuf.Int32Value\022+\n\004data\030d \001(\0132\035.g"
  "oogle.protobuf.testing.Data\"\275\003\n\004Data\022\014\n\004"
  "attr\030\001 \001(\005\022\013\n\003str\030\002 \001(\t\022\014\n\004msgs\030\003 \003(\t\0222\n"
  "\013nested_data\030\004 \001(\0132\035.google.protobuf.tes"
  "ting.Data\0220\n\013int_wrapper\030\005 \001(\0132\033.google."
  "protobuf.Int32Value\022(\n\004time\030\006 \001(\0132\032.goog"
  "le.protobuf.Timestamp\022<\n\010map_data\030\007 \003(\0132"
  "*.google.protobuf.testing.Data.MapDataEn"
  "try\022,\n\013struct_data\030\010 \001(\0132\027.google.protob"
  "uf.Struct\0224\n\rrepeated_data\030\t \003(\0132\035.googl"
  "e.protobuf.testing.Data\022*\n\014repeated_any\030"
  "\n \003(\0132\024.google.protobuf.Any\032.\n\014MapDataEn"
  "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"=\n\005A"
  "nyIn\022\021\n\tsomething\030\001 \001(\t\022!\n\003any\030\002 \001(\0132\024.g"
  "oogle.protobuf.Any\"+\n\006AnyOut\022!\n\003any\030\001 \001("
  "\0132\024.google.protobuf.Any\"\023\n\004AnyM\022\013\n\003foo\030\001"
  " \001(\t2\263\001\n\016AnyTestService\022T\n\004Call\022%.google"
  ".protobuf.testing.AnyTestCases\032%.google."
  "protobuf.testing.AnyTestCases\022K\n\005Call1\022 "
  ".google.protobuf.testing.Imports\032 .googl"
  "e.protobuf.testing.Importsb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto = {
  false, InitDefaults_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, 
  descriptor_table_protodef_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto,
  "google/protobuf/util/internal/testdata/anys.proto", &assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, 2834,
};

void AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2fprotobuf_2fany_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fstruct_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fduration_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fwrappers_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto = []() { AddDescriptors_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto(); return true; }();
namespace google {
namespace protobuf {
namespace testing {

// ===================================================================

void AnyTestCases::InitAsDefaultInstance() {
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->empty_any_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->type_only_any_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->wrapper_any_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_timestamp_value_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_duration_value_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_struct_value_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->recursive_any_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_value_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_nested_message_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_with_wrapper_type_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_with_timestamp_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_containing_map_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_containing_struct_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->any_with_message_containing_repeated_message_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->recursive_any_with_type_field_at_end_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->repeated_any_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->empty_any_with_null_type_url_ = const_cast< ::google::protobuf::testing::AnyWrapper*>(
      ::google::protobuf::testing::AnyWrapper::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->top_level_any_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->top_level_any_with_type_field_at_end_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->top_level_any_with_pivot_one_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->top_level_any_with_pivot_two_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::google::protobuf::testing::_AnyTestCases_default_instance_._instance.get_mutable()->top_level_any_unordered_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class AnyTestCases::HasBitSetters {
 public:
  static const ::google::protobuf::testing::AnyWrapper& empty_any(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& type_only_any(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& wrapper_any(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_timestamp_value(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_duration_value(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_struct_value(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& recursive_any(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_value(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_nested_message(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_with_wrapper_type(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_with_timestamp(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_containing_map(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_containing_struct(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& any_with_message_containing_repeated_message(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& recursive_any_with_type_field_at_end(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& repeated_any(const AnyTestCases* msg);
  static const ::google::protobuf::testing::AnyWrapper& empty_any_with_null_type_url(const AnyTestCases* msg);
  static const ::google::protobuf::Any& top_level_any(const AnyTestCases* msg);
  static const ::google::protobuf::Any& top_level_any_with_type_field_at_end(const AnyTestCases* msg);
  static const ::google::protobuf::Any& top_level_any_with_pivot_one(const AnyTestCases* msg);
  static const ::google::protobuf::Any& top_level_any_with_pivot_two(const AnyTestCases* msg);
  static const ::google::protobuf::Any& top_level_any_unordered(const AnyTestCases* msg);
};

const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::empty_any(const AnyTestCases* msg) {
  return *msg->empty_any_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::type_only_any(const AnyTestCases* msg) {
  return *msg->type_only_any_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::wrapper_any(const AnyTestCases* msg) {
  return *msg->wrapper_any_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_timestamp_value(const AnyTestCases* msg) {
  return *msg->any_with_timestamp_value_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_duration_value(const AnyTestCases* msg) {
  return *msg->any_with_duration_value_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_struct_value(const AnyTestCases* msg) {
  return *msg->any_with_struct_value_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::recursive_any(const AnyTestCases* msg) {
  return *msg->recursive_any_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_value(const AnyTestCases* msg) {
  return *msg->any_with_message_value_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_nested_message(const AnyTestCases* msg) {
  return *msg->any_with_nested_message_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_with_wrapper_type(const AnyTestCases* msg) {
  return *msg->any_with_message_with_wrapper_type_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_with_timestamp(const AnyTestCases* msg) {
  return *msg->any_with_message_with_timestamp_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_containing_map(const AnyTestCases* msg) {
  return *msg->any_with_message_containing_map_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_containing_struct(const AnyTestCases* msg) {
  return *msg->any_with_message_containing_struct_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::any_with_message_containing_repeated_message(const AnyTestCases* msg) {
  return *msg->any_with_message_containing_repeated_message_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::recursive_any_with_type_field_at_end(const AnyTestCases* msg) {
  return *msg->recursive_any_with_type_field_at_end_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::repeated_any(const AnyTestCases* msg) {
  return *msg->repeated_any_;
}
const ::google::protobuf::testing::AnyWrapper&
AnyTestCases::HasBitSetters::empty_any_with_null_type_url(const AnyTestCases* msg) {
  return *msg->empty_any_with_null_type_url_;
}
const ::google::protobuf::Any&
AnyTestCases::HasBitSetters::top_level_any(const AnyTestCases* msg) {
  return *msg->top_level_any_;
}
const ::google::protobuf::Any&
AnyTestCases::HasBitSetters::top_level_any_with_type_field_at_end(const AnyTestCases* msg) {
  return *msg->top_level_any_with_type_field_at_end_;
}
const ::google::protobuf::Any&
AnyTestCases::HasBitSetters::top_level_any_with_pivot_one(const AnyTestCases* msg) {
  return *msg->top_level_any_with_pivot_one_;
}
const ::google::protobuf::Any&
AnyTestCases::HasBitSetters::top_level_any_with_pivot_two(const AnyTestCases* msg) {
  return *msg->top_level_any_with_pivot_two_;
}
const ::google::protobuf::Any&
AnyTestCases::HasBitSetters::top_level_any_unordered(const AnyTestCases* msg) {
  return *msg->top_level_any_unordered_;
}
void AnyTestCases::clear_top_level_any() {
  if (GetArenaNoVirtual() == nullptr && top_level_any_ != nullptr) {
    delete top_level_any_;
  }
  top_level_any_ = nullptr;
}
void AnyTestCases::clear_top_level_any_with_type_field_at_end() {
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_type_field_at_end_ != nullptr) {
    delete top_level_any_with_type_field_at_end_;
  }
  top_level_any_with_type_field_at_end_ = nullptr;
}
void AnyTestCases::clear_top_level_any_with_pivot_one() {
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_pivot_one_ != nullptr) {
    delete top_level_any_with_pivot_one_;
  }
  top_level_any_with_pivot_one_ = nullptr;
}
void AnyTestCases::clear_top_level_any_with_pivot_two() {
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_pivot_two_ != nullptr) {
    delete top_level_any_with_pivot_two_;
  }
  top_level_any_with_pivot_two_ = nullptr;
}
void AnyTestCases::clear_top_level_any_unordered() {
  if (GetArenaNoVirtual() == nullptr && top_level_any_unordered_ != nullptr) {
    delete top_level_any_unordered_;
  }
  top_level_any_unordered_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyTestCases::kEmptyAnyFieldNumber;
const int AnyTestCases::kTypeOnlyAnyFieldNumber;
const int AnyTestCases::kWrapperAnyFieldNumber;
const int AnyTestCases::kAnyWithTimestampValueFieldNumber;
const int AnyTestCases::kAnyWithDurationValueFieldNumber;
const int AnyTestCases::kAnyWithStructValueFieldNumber;
const int AnyTestCases::kRecursiveAnyFieldNumber;
const int AnyTestCases::kAnyWithMessageValueFieldNumber;
const int AnyTestCases::kAnyWithNestedMessageFieldNumber;
const int AnyTestCases::kAnyWithMessageWithWrapperTypeFieldNumber;
const int AnyTestCases::kAnyWithMessageWithTimestampFieldNumber;
const int AnyTestCases::kAnyWithMessageContainingMapFieldNumber;
const int AnyTestCases::kAnyWithMessageContainingStructFieldNumber;
const int AnyTestCases::kAnyWithMessageContainingRepeatedMessageFieldNumber;
const int AnyTestCases::kRecursiveAnyWithTypeFieldAtEndFieldNumber;
const int AnyTestCases::kRepeatedAnyFieldNumber;
const int AnyTestCases::kEmptyAnyWithNullTypeUrlFieldNumber;
const int AnyTestCases::kTopLevelAnyFieldNumber;
const int AnyTestCases::kTopLevelAnyWithTypeFieldAtEndFieldNumber;
const int AnyTestCases::kTopLevelAnyWithPivotOneFieldNumber;
const int AnyTestCases::kTopLevelAnyWithPivotTwoFieldNumber;
const int AnyTestCases::kTopLevelAnyUnorderedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyTestCases::AnyTestCases()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.AnyTestCases)
}
AnyTestCases::AnyTestCases(const AnyTestCases& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_empty_any()) {
    empty_any_ = new ::google::protobuf::testing::AnyWrapper(*from.empty_any_);
  } else {
    empty_any_ = nullptr;
  }
  if (from.has_type_only_any()) {
    type_only_any_ = new ::google::protobuf::testing::AnyWrapper(*from.type_only_any_);
  } else {
    type_only_any_ = nullptr;
  }
  if (from.has_wrapper_any()) {
    wrapper_any_ = new ::google::protobuf::testing::AnyWrapper(*from.wrapper_any_);
  } else {
    wrapper_any_ = nullptr;
  }
  if (from.has_any_with_timestamp_value()) {
    any_with_timestamp_value_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_timestamp_value_);
  } else {
    any_with_timestamp_value_ = nullptr;
  }
  if (from.has_any_with_duration_value()) {
    any_with_duration_value_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_duration_value_);
  } else {
    any_with_duration_value_ = nullptr;
  }
  if (from.has_any_with_struct_value()) {
    any_with_struct_value_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_struct_value_);
  } else {
    any_with_struct_value_ = nullptr;
  }
  if (from.has_recursive_any()) {
    recursive_any_ = new ::google::protobuf::testing::AnyWrapper(*from.recursive_any_);
  } else {
    recursive_any_ = nullptr;
  }
  if (from.has_any_with_message_value()) {
    any_with_message_value_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_value_);
  } else {
    any_with_message_value_ = nullptr;
  }
  if (from.has_any_with_nested_message()) {
    any_with_nested_message_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_nested_message_);
  } else {
    any_with_nested_message_ = nullptr;
  }
  if (from.has_any_with_message_with_wrapper_type()) {
    any_with_message_with_wrapper_type_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_with_wrapper_type_);
  } else {
    any_with_message_with_wrapper_type_ = nullptr;
  }
  if (from.has_any_with_message_with_timestamp()) {
    any_with_message_with_timestamp_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_with_timestamp_);
  } else {
    any_with_message_with_timestamp_ = nullptr;
  }
  if (from.has_any_with_message_containing_map()) {
    any_with_message_containing_map_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_containing_map_);
  } else {
    any_with_message_containing_map_ = nullptr;
  }
  if (from.has_any_with_message_containing_struct()) {
    any_with_message_containing_struct_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_containing_struct_);
  } else {
    any_with_message_containing_struct_ = nullptr;
  }
  if (from.has_any_with_message_containing_repeated_message()) {
    any_with_message_containing_repeated_message_ = new ::google::protobuf::testing::AnyWrapper(*from.any_with_message_containing_repeated_message_);
  } else {
    any_with_message_containing_repeated_message_ = nullptr;
  }
  if (from.has_recursive_any_with_type_field_at_end()) {
    recursive_any_with_type_field_at_end_ = new ::google::protobuf::testing::AnyWrapper(*from.recursive_any_with_type_field_at_end_);
  } else {
    recursive_any_with_type_field_at_end_ = nullptr;
  }
  if (from.has_repeated_any()) {
    repeated_any_ = new ::google::protobuf::testing::AnyWrapper(*from.repeated_any_);
  } else {
    repeated_any_ = nullptr;
  }
  if (from.has_empty_any_with_null_type_url()) {
    empty_any_with_null_type_url_ = new ::google::protobuf::testing::AnyWrapper(*from.empty_any_with_null_type_url_);
  } else {
    empty_any_with_null_type_url_ = nullptr;
  }
  if (from.has_top_level_any()) {
    top_level_any_ = new ::google::protobuf::Any(*from.top_level_any_);
  } else {
    top_level_any_ = nullptr;
  }
  if (from.has_top_level_any_with_type_field_at_end()) {
    top_level_any_with_type_field_at_end_ = new ::google::protobuf::Any(*from.top_level_any_with_type_field_at_end_);
  } else {
    top_level_any_with_type_field_at_end_ = nullptr;
  }
  if (from.has_top_level_any_with_pivot_one()) {
    top_level_any_with_pivot_one_ = new ::google::protobuf::Any(*from.top_level_any_with_pivot_one_);
  } else {
    top_level_any_with_pivot_one_ = nullptr;
  }
  if (from.has_top_level_any_with_pivot_two()) {
    top_level_any_with_pivot_two_ = new ::google::protobuf::Any(*from.top_level_any_with_pivot_two_);
  } else {
    top_level_any_with_pivot_two_ = nullptr;
  }
  if (from.has_top_level_any_unordered()) {
    top_level_any_unordered_ = new ::google::protobuf::Any(*from.top_level_any_unordered_);
  } else {
    top_level_any_unordered_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.AnyTestCases)
}

void AnyTestCases::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::memset(&empty_any_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&top_level_any_unordered_) -
      reinterpret_cast<char*>(&empty_any_)) + sizeof(top_level_any_unordered_));
}

AnyTestCases::~AnyTestCases() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.AnyTestCases)
  SharedDtor();
}

void AnyTestCases::SharedDtor() {
  if (this != internal_default_instance()) delete empty_any_;
  if (this != internal_default_instance()) delete type_only_any_;
  if (this != internal_default_instance()) delete wrapper_any_;
  if (this != internal_default_instance()) delete any_with_timestamp_value_;
  if (this != internal_default_instance()) delete any_with_duration_value_;
  if (this != internal_default_instance()) delete any_with_struct_value_;
  if (this != internal_default_instance()) delete recursive_any_;
  if (this != internal_default_instance()) delete any_with_message_value_;
  if (this != internal_default_instance()) delete any_with_nested_message_;
  if (this != internal_default_instance()) delete any_with_message_with_wrapper_type_;
  if (this != internal_default_instance()) delete any_with_message_with_timestamp_;
  if (this != internal_default_instance()) delete any_with_message_containing_map_;
  if (this != internal_default_instance()) delete any_with_message_containing_struct_;
  if (this != internal_default_instance()) delete any_with_message_containing_repeated_message_;
  if (this != internal_default_instance()) delete recursive_any_with_type_field_at_end_;
  if (this != internal_default_instance()) delete repeated_any_;
  if (this != internal_default_instance()) delete empty_any_with_null_type_url_;
  if (this != internal_default_instance()) delete top_level_any_;
  if (this != internal_default_instance()) delete top_level_any_with_type_field_at_end_;
  if (this != internal_default_instance()) delete top_level_any_with_pivot_one_;
  if (this != internal_default_instance()) delete top_level_any_with_pivot_two_;
  if (this != internal_default_instance()) delete top_level_any_unordered_;
}

void AnyTestCases::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyTestCases& AnyTestCases::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnyTestCases_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void AnyTestCases::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.AnyTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && empty_any_ != nullptr) {
    delete empty_any_;
  }
  empty_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && type_only_any_ != nullptr) {
    delete type_only_any_;
  }
  type_only_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && wrapper_any_ != nullptr) {
    delete wrapper_any_;
  }
  wrapper_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_timestamp_value_ != nullptr) {
    delete any_with_timestamp_value_;
  }
  any_with_timestamp_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_duration_value_ != nullptr) {
    delete any_with_duration_value_;
  }
  any_with_duration_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_struct_value_ != nullptr) {
    delete any_with_struct_value_;
  }
  any_with_struct_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && recursive_any_ != nullptr) {
    delete recursive_any_;
  }
  recursive_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_value_ != nullptr) {
    delete any_with_message_value_;
  }
  any_with_message_value_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_nested_message_ != nullptr) {
    delete any_with_nested_message_;
  }
  any_with_nested_message_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_with_wrapper_type_ != nullptr) {
    delete any_with_message_with_wrapper_type_;
  }
  any_with_message_with_wrapper_type_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_with_timestamp_ != nullptr) {
    delete any_with_message_with_timestamp_;
  }
  any_with_message_with_timestamp_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_containing_map_ != nullptr) {
    delete any_with_message_containing_map_;
  }
  any_with_message_containing_map_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_containing_struct_ != nullptr) {
    delete any_with_message_containing_struct_;
  }
  any_with_message_containing_struct_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && any_with_message_containing_repeated_message_ != nullptr) {
    delete any_with_message_containing_repeated_message_;
  }
  any_with_message_containing_repeated_message_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && recursive_any_with_type_field_at_end_ != nullptr) {
    delete recursive_any_with_type_field_at_end_;
  }
  recursive_any_with_type_field_at_end_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && repeated_any_ != nullptr) {
    delete repeated_any_;
  }
  repeated_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && empty_any_with_null_type_url_ != nullptr) {
    delete empty_any_with_null_type_url_;
  }
  empty_any_with_null_type_url_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_any_ != nullptr) {
    delete top_level_any_;
  }
  top_level_any_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_type_field_at_end_ != nullptr) {
    delete top_level_any_with_type_field_at_end_;
  }
  top_level_any_with_type_field_at_end_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_pivot_one_ != nullptr) {
    delete top_level_any_with_pivot_one_;
  }
  top_level_any_with_pivot_one_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_any_with_pivot_two_ != nullptr) {
    delete top_level_any_with_pivot_two_;
  }
  top_level_any_with_pivot_two_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && top_level_any_unordered_ != nullptr) {
    delete top_level_any_unordered_;
  }
  top_level_any_unordered_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnyTestCases::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnyTestCases*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.testing.AnyWrapper empty_any = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_empty_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper type_only_any = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_type_only_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper wrapper_any = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_wrapper_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_timestamp_value = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_timestamp_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_duration_value = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_duration_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_struct_value = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_struct_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper recursive_any = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_recursive_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_value = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_value();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_nested_message = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_nested_message();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_with_wrapper_type();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_with_timestamp = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_with_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_containing_map = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_containing_map();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_containing_struct = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_containing_struct();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_any_with_message_containing_repeated_message();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_recursive_any_with_type_field_at_end();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper repeated_any = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_repeated_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.AnyWrapper empty_any_with_null_type_url = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::AnyWrapper::_InternalParse;
        object = msg->mutable_empty_any_with_null_type_url();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Any top_level_any = 50;
      case 50: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_top_level_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Any top_level_any_with_type_field_at_end = 51;
      case 51: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_top_level_any_with_type_field_at_end();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Any top_level_any_with_pivot_one = 52;
      case 52: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_top_level_any_with_pivot_one();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Any top_level_any_with_pivot_two = 53;
      case 53: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_top_level_any_with_pivot_two();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Any top_level_any_unordered = 54;
      case 54: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_top_level_any_unordered();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnyTestCases::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.AnyTestCases)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.testing.AnyWrapper empty_any = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper type_only_any = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type_only_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper wrapper_any = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrapper_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_timestamp_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_timestamp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_duration_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_duration_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_struct_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_struct_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper recursive_any = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recursive_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_nested_message = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_nested_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_with_wrapper_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_with_timestamp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_with_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_containing_map = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_containing_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_containing_struct = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_containing_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_with_message_containing_repeated_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recursive_any_with_type_field_at_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper repeated_any = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeated_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.AnyWrapper empty_any_with_null_type_url = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_any_with_null_type_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any top_level_any = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (402 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any top_level_any_with_type_field_at_end = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (410 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_any_with_type_field_at_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any top_level_any_with_pivot_one = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (418 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_any_with_pivot_one()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any top_level_any_with_pivot_two = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (426 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_any_with_pivot_two()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any top_level_any_unordered = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (434 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_level_any_unordered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.AnyTestCases)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.AnyTestCases)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnyTestCases::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.AnyTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.AnyWrapper empty_any = 1;
  if (this->has_empty_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::empty_any(this), output);
  }

  // .google.protobuf.testing.AnyWrapper type_only_any = 2;
  if (this->has_type_only_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::type_only_any(this), output);
  }

  // .google.protobuf.testing.AnyWrapper wrapper_any = 3;
  if (this->has_wrapper_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::wrapper_any(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_timestamp_value = 4;
  if (this->has_any_with_timestamp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::any_with_timestamp_value(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_duration_value = 5;
  if (this->has_any_with_duration_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::any_with_duration_value(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_struct_value = 6;
  if (this->has_any_with_struct_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::any_with_struct_value(this), output);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any = 7;
  if (this->has_recursive_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::recursive_any(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_value = 8;
  if (this->has_any_with_message_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::any_with_message_value(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_nested_message = 9;
  if (this->has_any_with_nested_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::any_with_nested_message(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
  if (this->has_any_with_message_with_wrapper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::any_with_message_with_wrapper_type(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_timestamp = 11;
  if (this->has_any_with_message_with_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::any_with_message_with_timestamp(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_map = 12;
  if (this->has_any_with_message_containing_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::any_with_message_containing_map(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_struct = 13;
  if (this->has_any_with_message_containing_struct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::any_with_message_containing_struct(this), output);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
  if (this->has_any_with_message_containing_repeated_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, HasBitSetters::any_with_message_containing_repeated_message(this), output);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
  if (this->has_recursive_any_with_type_field_at_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, HasBitSetters::recursive_any_with_type_field_at_end(this), output);
  }

  // .google.protobuf.testing.AnyWrapper repeated_any = 16;
  if (this->has_repeated_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::repeated_any(this), output);
  }

  // .google.protobuf.testing.AnyWrapper empty_any_with_null_type_url = 17;
  if (this->has_empty_any_with_null_type_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::empty_any_with_null_type_url(this), output);
  }

  // .google.protobuf.Any top_level_any = 50;
  if (this->has_top_level_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, HasBitSetters::top_level_any(this), output);
  }

  // .google.protobuf.Any top_level_any_with_type_field_at_end = 51;
  if (this->has_top_level_any_with_type_field_at_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, HasBitSetters::top_level_any_with_type_field_at_end(this), output);
  }

  // .google.protobuf.Any top_level_any_with_pivot_one = 52;
  if (this->has_top_level_any_with_pivot_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, HasBitSetters::top_level_any_with_pivot_one(this), output);
  }

  // .google.protobuf.Any top_level_any_with_pivot_two = 53;
  if (this->has_top_level_any_with_pivot_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, HasBitSetters::top_level_any_with_pivot_two(this), output);
  }

  // .google.protobuf.Any top_level_any_unordered = 54;
  if (this->has_top_level_any_unordered()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, HasBitSetters::top_level_any_unordered(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.AnyTestCases)
}

::google::protobuf::uint8* AnyTestCases::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.AnyTestCases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.testing.AnyWrapper empty_any = 1;
  if (this->has_empty_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::empty_any(this), target);
  }

  // .google.protobuf.testing.AnyWrapper type_only_any = 2;
  if (this->has_type_only_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::type_only_any(this), target);
  }

  // .google.protobuf.testing.AnyWrapper wrapper_any = 3;
  if (this->has_wrapper_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::wrapper_any(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_timestamp_value = 4;
  if (this->has_any_with_timestamp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::any_with_timestamp_value(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_duration_value = 5;
  if (this->has_any_with_duration_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::any_with_duration_value(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_struct_value = 6;
  if (this->has_any_with_struct_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::any_with_struct_value(this), target);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any = 7;
  if (this->has_recursive_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::recursive_any(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_value = 8;
  if (this->has_any_with_message_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::any_with_message_value(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_nested_message = 9;
  if (this->has_any_with_nested_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::any_with_nested_message(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
  if (this->has_any_with_message_with_wrapper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::any_with_message_with_wrapper_type(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_timestamp = 11;
  if (this->has_any_with_message_with_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::any_with_message_with_timestamp(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_map = 12;
  if (this->has_any_with_message_containing_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::any_with_message_containing_map(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_struct = 13;
  if (this->has_any_with_message_containing_struct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::any_with_message_containing_struct(this), target);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
  if (this->has_any_with_message_containing_repeated_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, HasBitSetters::any_with_message_containing_repeated_message(this), target);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
  if (this->has_recursive_any_with_type_field_at_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, HasBitSetters::recursive_any_with_type_field_at_end(this), target);
  }

  // .google.protobuf.testing.AnyWrapper repeated_any = 16;
  if (this->has_repeated_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::repeated_any(this), target);
  }

  // .google.protobuf.testing.AnyWrapper empty_any_with_null_type_url = 17;
  if (this->has_empty_any_with_null_type_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::empty_any_with_null_type_url(this), target);
  }

  // .google.protobuf.Any top_level_any = 50;
  if (this->has_top_level_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, HasBitSetters::top_level_any(this), target);
  }

  // .google.protobuf.Any top_level_any_with_type_field_at_end = 51;
  if (this->has_top_level_any_with_type_field_at_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, HasBitSetters::top_level_any_with_type_field_at_end(this), target);
  }

  // .google.protobuf.Any top_level_any_with_pivot_one = 52;
  if (this->has_top_level_any_with_pivot_one()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, HasBitSetters::top_level_any_with_pivot_one(this), target);
  }

  // .google.protobuf.Any top_level_any_with_pivot_two = 53;
  if (this->has_top_level_any_with_pivot_two()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, HasBitSetters::top_level_any_with_pivot_two(this), target);
  }

  // .google.protobuf.Any top_level_any_unordered = 54;
  if (this->has_top_level_any_unordered()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, HasBitSetters::top_level_any_unordered(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.AnyTestCases)
  return target;
}

size_t AnyTestCases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.AnyTestCases)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.testing.AnyWrapper empty_any = 1;
  if (this->has_empty_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *empty_any_);
  }

  // .google.protobuf.testing.AnyWrapper type_only_any = 2;
  if (this->has_type_only_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_only_any_);
  }

  // .google.protobuf.testing.AnyWrapper wrapper_any = 3;
  if (this->has_wrapper_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wrapper_any_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_timestamp_value = 4;
  if (this->has_any_with_timestamp_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_timestamp_value_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_duration_value = 5;
  if (this->has_any_with_duration_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_duration_value_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_struct_value = 6;
  if (this->has_any_with_struct_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_struct_value_);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any = 7;
  if (this->has_recursive_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recursive_any_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_value = 8;
  if (this->has_any_with_message_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_value_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_nested_message = 9;
  if (this->has_any_with_nested_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_nested_message_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_wrapper_type = 10;
  if (this->has_any_with_message_with_wrapper_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_with_wrapper_type_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_with_timestamp = 11;
  if (this->has_any_with_message_with_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_with_timestamp_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_map = 12;
  if (this->has_any_with_message_containing_map()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_containing_map_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_struct = 13;
  if (this->has_any_with_message_containing_struct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_containing_struct_);
  }

  // .google.protobuf.testing.AnyWrapper any_with_message_containing_repeated_message = 14;
  if (this->has_any_with_message_containing_repeated_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_with_message_containing_repeated_message_);
  }

  // .google.protobuf.testing.AnyWrapper recursive_any_with_type_field_at_end = 15;
  if (this->has_recursive_any_with_type_field_at_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recursive_any_with_type_field_at_end_);
  }

  // .google.protobuf.testing.AnyWrapper repeated_any = 16;
  if (this->has_repeated_any()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *repeated_any_);
  }

  // .google.protobuf.testing.AnyWrapper empty_any_with_null_type_url = 17;
  if (this->has_empty_any_with_null_type_url()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *empty_any_with_null_type_url_);
  }

  // .google.protobuf.Any top_level_any = 50;
  if (this->has_top_level_any()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_any_);
  }

  // .google.protobuf.Any top_level_any_with_type_field_at_end = 51;
  if (this->has_top_level_any_with_type_field_at_end()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_any_with_type_field_at_end_);
  }

  // .google.protobuf.Any top_level_any_with_pivot_one = 52;
  if (this->has_top_level_any_with_pivot_one()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_any_with_pivot_one_);
  }

  // .google.protobuf.Any top_level_any_with_pivot_two = 53;
  if (this->has_top_level_any_with_pivot_two()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_any_with_pivot_two_);
  }

  // .google.protobuf.Any top_level_any_unordered = 54;
  if (this->has_top_level_any_unordered()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_level_any_unordered_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyTestCases::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.AnyTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyTestCases* source =
      ::google::protobuf::DynamicCastToGenerated<AnyTestCases>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.AnyTestCases)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.AnyTestCases)
    MergeFrom(*source);
  }
}

void AnyTestCases::MergeFrom(const AnyTestCases& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.AnyTestCases)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_empty_any()) {
    mutable_empty_any()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.empty_any());
  }
  if (from.has_type_only_any()) {
    mutable_type_only_any()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.type_only_any());
  }
  if (from.has_wrapper_any()) {
    mutable_wrapper_any()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.wrapper_any());
  }
  if (from.has_any_with_timestamp_value()) {
    mutable_any_with_timestamp_value()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_timestamp_value());
  }
  if (from.has_any_with_duration_value()) {
    mutable_any_with_duration_value()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_duration_value());
  }
  if (from.has_any_with_struct_value()) {
    mutable_any_with_struct_value()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_struct_value());
  }
  if (from.has_recursive_any()) {
    mutable_recursive_any()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.recursive_any());
  }
  if (from.has_any_with_message_value()) {
    mutable_any_with_message_value()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_value());
  }
  if (from.has_any_with_nested_message()) {
    mutable_any_with_nested_message()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_nested_message());
  }
  if (from.has_any_with_message_with_wrapper_type()) {
    mutable_any_with_message_with_wrapper_type()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_with_wrapper_type());
  }
  if (from.has_any_with_message_with_timestamp()) {
    mutable_any_with_message_with_timestamp()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_with_timestamp());
  }
  if (from.has_any_with_message_containing_map()) {
    mutable_any_with_message_containing_map()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_containing_map());
  }
  if (from.has_any_with_message_containing_struct()) {
    mutable_any_with_message_containing_struct()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_containing_struct());
  }
  if (from.has_any_with_message_containing_repeated_message()) {
    mutable_any_with_message_containing_repeated_message()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.any_with_message_containing_repeated_message());
  }
  if (from.has_recursive_any_with_type_field_at_end()) {
    mutable_recursive_any_with_type_field_at_end()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.recursive_any_with_type_field_at_end());
  }
  if (from.has_repeated_any()) {
    mutable_repeated_any()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.repeated_any());
  }
  if (from.has_empty_any_with_null_type_url()) {
    mutable_empty_any_with_null_type_url()->::google::protobuf::testing::AnyWrapper::MergeFrom(from.empty_any_with_null_type_url());
  }
  if (from.has_top_level_any()) {
    mutable_top_level_any()->::google::protobuf::Any::MergeFrom(from.top_level_any());
  }
  if (from.has_top_level_any_with_type_field_at_end()) {
    mutable_top_level_any_with_type_field_at_end()->::google::protobuf::Any::MergeFrom(from.top_level_any_with_type_field_at_end());
  }
  if (from.has_top_level_any_with_pivot_one()) {
    mutable_top_level_any_with_pivot_one()->::google::protobuf::Any::MergeFrom(from.top_level_any_with_pivot_one());
  }
  if (from.has_top_level_any_with_pivot_two()) {
    mutable_top_level_any_with_pivot_two()->::google::protobuf::Any::MergeFrom(from.top_level_any_with_pivot_two());
  }
  if (from.has_top_level_any_unordered()) {
    mutable_top_level_any_unordered()->::google::protobuf::Any::MergeFrom(from.top_level_any_unordered());
  }
}

void AnyTestCases::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.AnyTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyTestCases::CopyFrom(const AnyTestCases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.AnyTestCases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyTestCases::IsInitialized() const {
  return true;
}

void AnyTestCases::Swap(AnyTestCases* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyTestCases::InternalSwap(AnyTestCases* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(empty_any_, other->empty_any_);
  swap(type_only_any_, other->type_only_any_);
  swap(wrapper_any_, other->wrapper_any_);
  swap(any_with_timestamp_value_, other->any_with_timestamp_value_);
  swap(any_with_duration_value_, other->any_with_duration_value_);
  swap(any_with_struct_value_, other->any_with_struct_value_);
  swap(recursive_any_, other->recursive_any_);
  swap(any_with_message_value_, other->any_with_message_value_);
  swap(any_with_nested_message_, other->any_with_nested_message_);
  swap(any_with_message_with_wrapper_type_, other->any_with_message_with_wrapper_type_);
  swap(any_with_message_with_timestamp_, other->any_with_message_with_timestamp_);
  swap(any_with_message_containing_map_, other->any_with_message_containing_map_);
  swap(any_with_message_containing_struct_, other->any_with_message_containing_struct_);
  swap(any_with_message_containing_repeated_message_, other->any_with_message_containing_repeated_message_);
  swap(recursive_any_with_type_field_at_end_, other->recursive_any_with_type_field_at_end_);
  swap(repeated_any_, other->repeated_any_);
  swap(empty_any_with_null_type_url_, other->empty_any_with_null_type_url_);
  swap(top_level_any_, other->top_level_any_);
  swap(top_level_any_with_type_field_at_end_, other->top_level_any_with_type_field_at_end_);
  swap(top_level_any_with_pivot_one_, other->top_level_any_with_pivot_one_);
  swap(top_level_any_with_pivot_two_, other->top_level_any_with_pivot_two_);
  swap(top_level_any_unordered_, other->top_level_any_unordered_);
}

::google::protobuf::Metadata AnyTestCases::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnyWrapper::InitAsDefaultInstance() {
  ::google::protobuf::testing::_AnyWrapper_default_instance_._instance.get_mutable()->any_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class AnyWrapper::HasBitSetters {
 public:
  static const ::google::protobuf::Any& any(const AnyWrapper* msg);
};

const ::google::protobuf::Any&
AnyWrapper::HasBitSetters::any(const AnyWrapper* msg) {
  return *msg->any_;
}
void AnyWrapper::clear_any() {
  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyWrapper::kAnyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyWrapper::AnyWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.AnyWrapper)
}
AnyWrapper::AnyWrapper(const AnyWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_any()) {
    any_ = new ::google::protobuf::Any(*from.any_);
  } else {
    any_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.AnyWrapper)
}

void AnyWrapper::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  any_ = nullptr;
}

AnyWrapper::~AnyWrapper() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.AnyWrapper)
  SharedDtor();
}

void AnyWrapper::SharedDtor() {
  if (this != internal_default_instance()) delete any_;
}

void AnyWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyWrapper& AnyWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnyWrapper_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void AnyWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.AnyWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnyWrapper::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnyWrapper*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnyWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.AnyWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any any = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.AnyWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.AnyWrapper)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnyWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.AnyWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::any(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.AnyWrapper)
}

::google::protobuf::uint8* AnyWrapper::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.AnyWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::any(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.AnyWrapper)
  return target;
}

size_t AnyWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.AnyWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.AnyWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyWrapper* source =
      ::google::protobuf::DynamicCastToGenerated<AnyWrapper>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.AnyWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.AnyWrapper)
    MergeFrom(*source);
  }
}

void AnyWrapper::MergeFrom(const AnyWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.AnyWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_any()) {
    mutable_any()->::google::protobuf::Any::MergeFrom(from.any());
  }
}

void AnyWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.AnyWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyWrapper::CopyFrom(const AnyWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.AnyWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyWrapper::IsInitialized() const {
  return true;
}

void AnyWrapper::Swap(AnyWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyWrapper::InternalSwap(AnyWrapper* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(any_, other->any_);
}

::google::protobuf::Metadata AnyWrapper::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Imports::InitAsDefaultInstance() {
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->dbl_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->struct__ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->i32_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::google::protobuf::testing::_Imports_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::testing::Data*>(
      ::google::protobuf::testing::Data::internal_default_instance());
}
class Imports::HasBitSetters {
 public:
  static const ::google::protobuf::DoubleValue& dbl(const Imports* msg);
  static const ::google::protobuf::Struct& struct_(const Imports* msg);
  static const ::google::protobuf::Timestamp& timestamp(const Imports* msg);
  static const ::google::protobuf::Duration& duration(const Imports* msg);
  static const ::google::protobuf::Int32Value& i32(const Imports* msg);
  static const ::google::protobuf::testing::Data& data(const Imports* msg);
};

const ::google::protobuf::DoubleValue&
Imports::HasBitSetters::dbl(const Imports* msg) {
  return *msg->dbl_;
}
const ::google::protobuf::Struct&
Imports::HasBitSetters::struct_(const Imports* msg) {
  return *msg->struct__;
}
const ::google::protobuf::Timestamp&
Imports::HasBitSetters::timestamp(const Imports* msg) {
  return *msg->timestamp_;
}
const ::google::protobuf::Duration&
Imports::HasBitSetters::duration(const Imports* msg) {
  return *msg->duration_;
}
const ::google::protobuf::Int32Value&
Imports::HasBitSetters::i32(const Imports* msg) {
  return *msg->i32_;
}
const ::google::protobuf::testing::Data&
Imports::HasBitSetters::data(const Imports* msg) {
  return *msg->data_;
}
void Imports::clear_dbl() {
  if (GetArenaNoVirtual() == nullptr && dbl_ != nullptr) {
    delete dbl_;
  }
  dbl_ = nullptr;
}
void Imports::clear_struct_() {
  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
}
void Imports::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void Imports::clear_duration() {
  if (GetArenaNoVirtual() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
}
void Imports::clear_i32() {
  if (GetArenaNoVirtual() == nullptr && i32_ != nullptr) {
    delete i32_;
  }
  i32_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Imports::kDblFieldNumber;
const int Imports::kStructFieldNumber;
const int Imports::kTimestampFieldNumber;
const int Imports::kDurationFieldNumber;
const int Imports::kI32FieldNumber;
const int Imports::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Imports::Imports()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.Imports)
}
Imports::Imports(const Imports& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dbl()) {
    dbl_ = new ::google::protobuf::DoubleValue(*from.dbl_);
  } else {
    dbl_ = nullptr;
  }
  if (from.has_struct_()) {
    struct__ = new ::google::protobuf::Struct(*from.struct__);
  } else {
    struct__ = nullptr;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = nullptr;
  }
  if (from.has_i32()) {
    i32_ = new ::google::protobuf::Int32Value(*from.i32_);
  } else {
    i32_ = nullptr;
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::testing::Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.Imports)
}

void Imports::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Imports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  ::memset(&dbl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&dbl_)) + sizeof(data_));
}

Imports::~Imports() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.Imports)
  SharedDtor();
}

void Imports::SharedDtor() {
  if (this != internal_default_instance()) delete dbl_;
  if (this != internal_default_instance()) delete struct__;
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete i32_;
  if (this != internal_default_instance()) delete data_;
}

void Imports::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Imports& Imports::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Imports_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void Imports::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.Imports)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && dbl_ != nullptr) {
    delete dbl_;
  }
  dbl_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct__ != nullptr) {
    delete struct__;
  }
  struct__ = nullptr;
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && i32_ != nullptr) {
    delete i32_;
  }
  i32_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Imports::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Imports*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.DoubleValue dbl = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::DoubleValue::_InternalParse;
        object = msg->mutable_dbl();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Struct struct = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_struct_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp timestamp = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Duration duration = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Duration::_InternalParse;
        object = msg->mutable_duration();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int32Value i32 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_i32();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.testing.Data data = 100;
      case 100: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Data::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Imports::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.Imports)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.DoubleValue dbl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dbl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value i32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Data data = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (802 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.Imports)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.Imports)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Imports::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.Imports)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue dbl = 1;
  if (this->has_dbl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::dbl(this), output);
  }

  // .google.protobuf.Struct struct = 2;
  if (this->has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::struct_(this), output);
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::timestamp(this), output);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::duration(this), output);
  }

  // .google.protobuf.Int32Value i32 = 5;
  if (this->has_i32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::i32(this), output);
  }

  // .google.protobuf.testing.Data data = 100;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, HasBitSetters::data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.Imports)
}

::google::protobuf::uint8* Imports::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.Imports)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue dbl = 1;
  if (this->has_dbl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::dbl(this), target);
  }

  // .google.protobuf.Struct struct = 2;
  if (this->has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::struct_(this), target);
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::timestamp(this), target);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::duration(this), target);
  }

  // .google.protobuf.Int32Value i32 = 5;
  if (this->has_i32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::i32(this), target);
  }

  // .google.protobuf.testing.Data data = 100;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, HasBitSetters::data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.Imports)
  return target;
}

size_t Imports::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.Imports)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.DoubleValue dbl = 1;
  if (this->has_dbl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dbl_);
  }

  // .google.protobuf.Struct struct = 2;
  if (this->has_struct_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct__);
  }

  // .google.protobuf.Timestamp timestamp = 3;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .google.protobuf.Duration duration = 4;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  // .google.protobuf.Int32Value i32 = 5;
  if (this->has_i32()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *i32_);
  }

  // .google.protobuf.testing.Data data = 100;
  if (this->has_data()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Imports::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.Imports)
  GOOGLE_DCHECK_NE(&from, this);
  const Imports* source =
      ::google::protobuf::DynamicCastToGenerated<Imports>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.Imports)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.Imports)
    MergeFrom(*source);
  }
}

void Imports::MergeFrom(const Imports& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.Imports)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dbl()) {
    mutable_dbl()->::google::protobuf::DoubleValue::MergeFrom(from.dbl());
  }
  if (from.has_struct_()) {
    mutable_struct_()->::google::protobuf::Struct::MergeFrom(from.struct_());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.has_i32()) {
    mutable_i32()->::google::protobuf::Int32Value::MergeFrom(from.i32());
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::testing::Data::MergeFrom(from.data());
  }
}

void Imports::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.Imports)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Imports::CopyFrom(const Imports& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.Imports)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Imports::IsInitialized() const {
  return true;
}

void Imports::Swap(Imports* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Imports::InternalSwap(Imports* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(dbl_, other->dbl_);
  swap(struct__, other->struct__);
  swap(timestamp_, other->timestamp_);
  swap(duration_, other->duration_);
  swap(i32_, other->i32_);
  swap(data_, other->data_);
}

::google::protobuf::Metadata Imports::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

Data_MapDataEntry_DoNotUse::Data_MapDataEntry_DoNotUse() {}
Data_MapDataEntry_DoNotUse::Data_MapDataEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void Data_MapDataEntry_DoNotUse::MergeFrom(const Data_MapDataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Data_MapDataEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[3];
}
void Data_MapDataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Data_MapDataEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      Data_MapDataEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.protobuf.testing.Data.MapDataEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "google.protobuf.testing.Data.MapDataEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void Data::InitAsDefaultInstance() {
  ::google::protobuf::testing::_Data_default_instance_._instance.get_mutable()->nested_data_ = const_cast< ::google::protobuf::testing::Data*>(
      ::google::protobuf::testing::Data::internal_default_instance());
  ::google::protobuf::testing::_Data_default_instance_._instance.get_mutable()->int_wrapper_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  ::google::protobuf::testing::_Data_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::protobuf::testing::_Data_default_instance_._instance.get_mutable()->struct_data_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class Data::HasBitSetters {
 public:
  static const ::google::protobuf::testing::Data& nested_data(const Data* msg);
  static const ::google::protobuf::Int32Value& int_wrapper(const Data* msg);
  static const ::google::protobuf::Timestamp& time(const Data* msg);
  static const ::google::protobuf::Struct& struct_data(const Data* msg);
};

const ::google::protobuf::testing::Data&
Data::HasBitSetters::nested_data(const Data* msg) {
  return *msg->nested_data_;
}
const ::google::protobuf::Int32Value&
Data::HasBitSetters::int_wrapper(const Data* msg) {
  return *msg->int_wrapper_;
}
const ::google::protobuf::Timestamp&
Data::HasBitSetters::time(const Data* msg) {
  return *msg->time_;
}
const ::google::protobuf::Struct&
Data::HasBitSetters::struct_data(const Data* msg) {
  return *msg->struct_data_;
}
void Data::clear_int_wrapper() {
  if (GetArenaNoVirtual() == nullptr && int_wrapper_ != nullptr) {
    delete int_wrapper_;
  }
  int_wrapper_ = nullptr;
}
void Data::clear_time() {
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
void Data::clear_struct_data() {
  if (GetArenaNoVirtual() == nullptr && struct_data_ != nullptr) {
    delete struct_data_;
  }
  struct_data_ = nullptr;
}
void Data::clear_repeated_any() {
  repeated_any_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kAttrFieldNumber;
const int Data::kStrFieldNumber;
const int Data::kMsgsFieldNumber;
const int Data::kNestedDataFieldNumber;
const int Data::kIntWrapperFieldNumber;
const int Data::kTimeFieldNumber;
const int Data::kMapDataFieldNumber;
const int Data::kStructDataFieldNumber;
const int Data::kRepeatedDataFieldNumber;
const int Data::kRepeatedAnyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      msgs_(from.msgs_),
      repeated_data_(from.repeated_data_),
      repeated_any_(from.repeated_any_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_data_.MergeFrom(from.map_data_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str().size() > 0) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.has_nested_data()) {
    nested_data_ = new ::google::protobuf::testing::Data(*from.nested_data_);
  } else {
    nested_data_ = nullptr;
  }
  if (from.has_int_wrapper()) {
    int_wrapper_ = new ::google::protobuf::Int32Value(*from.int_wrapper_);
  } else {
    int_wrapper_ = nullptr;
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  if (from.has_struct_data()) {
    struct_data_ = new ::google::protobuf::Struct(*from.struct_data_);
  } else {
    struct_data_ = nullptr;
  }
  attr_ = from.attr_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.Data)
}

void Data::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nested_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_) -
      reinterpret_cast<char*>(&nested_data_)) + sizeof(attr_));
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nested_data_;
  if (this != internal_default_instance()) delete int_wrapper_;
  if (this != internal_default_instance()) delete time_;
  if (this != internal_default_instance()) delete struct_data_;
}

void Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Data& Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Data_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgs_.Clear();
  map_data_.Clear();
  repeated_data_.Clear();
  repeated_any_.Clear();
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && nested_data_ != nullptr) {
    delete nested_data_;
  }
  nested_data_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && int_wrapper_ != nullptr) {
    delete int_wrapper_;
  }
  int_wrapper_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && struct_data_ != nullptr) {
    delete struct_data_;
  }
  struct_data_ = nullptr;
  attr_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Data::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Data*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 attr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_attr(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string str = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.testing.Data.str");
        object = msg->mutable_str();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string msgs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("google.protobuf.testing.Data.msgs");
          object = msg->add_msgs();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .google.protobuf.testing.Data nested_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::testing::Data::_InternalParse;
        object = msg->mutable_nested_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Int32Value int_wrapper = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Int32Value::_InternalParse;
        object = msg->mutable_int_wrapper();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp time = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // map<string, string> map_data = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::google::protobuf::testing::Data_MapDataEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->map_data_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      // .google.protobuf.Struct struct_data = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_struct_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .google.protobuf.testing.Data repeated_data = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::testing::Data::_InternalParse;
          object = msg->add_repeated_data();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      // repeated .google.protobuf.Any repeated_any = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::Any::_InternalParse;
          object = msg->add_repeated_any();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 attr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.Data.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string msgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_msgs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgs(this->msgs_size() - 1).data(),
            static_cast<int>(this->msgs(this->msgs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.Data.msgs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.testing.Data nested_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nested_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value int_wrapper = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int_wrapper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> map_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          Data_MapDataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Data_MapDataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.Data.MapDataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.Data.MapDataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.testing.Data repeated_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any repeated_any = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeated_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.Data)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attr = 1;
  if (this->attr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attr(), output);
  }

  // string str = 2;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Data.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str(), output);
  }

  // repeated string msgs = 3;
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgs(i).data(), static_cast<int>(this->msgs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Data.msgs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->msgs(i), output);
  }

  // .google.protobuf.testing.Data nested_data = 4;
  if (this->has_nested_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::nested_data(this), output);
  }

  // .google.protobuf.Int32Value int_wrapper = 5;
  if (this->has_int_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::int_wrapper(this), output);
  }

  // .google.protobuf.Timestamp time = 6;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::time(this), output);
  }

  // map<string, string> map_data = 7;
  if (!this->map_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.Data.MapDataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.Data.MapDataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_data().begin();
          it != this->map_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Data_MapDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_data_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(7, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Data_MapDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_data().begin();
          it != this->map_data().end(); ++it) {
        entry.reset(map_data_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(7, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.protobuf.Struct struct_data = 8;
  if (this->has_struct_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::struct_data(this), output);
  }

  // repeated .google.protobuf.testing.Data repeated_data = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->repeated_data(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Any repeated_any = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_any_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->repeated_any(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attr = 1;
  if (this->attr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attr(), target);
  }

  // string str = 2;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Data.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str(), target);
  }

  // repeated string msgs = 3;
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgs(i).data(), static_cast<int>(this->msgs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.Data.msgs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->msgs(i), target);
  }

  // .google.protobuf.testing.Data nested_data = 4;
  if (this->has_nested_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::nested_data(this), target);
  }

  // .google.protobuf.Int32Value int_wrapper = 5;
  if (this->has_int_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::int_wrapper(this), target);
  }

  // .google.protobuf.Timestamp time = 6;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::time(this), target);
  }

  // map<string, string> map_data = 7;
  if (!this->map_data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.Data.MapDataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.protobuf.testing.Data.MapDataEntry.value");
      }
    };

    if (false &&
        this->map_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_data().begin();
          it != this->map_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Data_MapDataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_data_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(7, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<Data_MapDataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_data().begin();
          it != this->map_data().end(); ++it) {
        entry.reset(map_data_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(7, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.protobuf.Struct struct_data = 8;
  if (this->has_struct_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::struct_data(this), target);
  }

  // repeated .google.protobuf.testing.Data repeated_data = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->repeated_data(static_cast<int>(i)), target);
  }

  // repeated .google.protobuf.Any repeated_any = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeated_any_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->repeated_any(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string msgs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->msgs_size());
  for (int i = 0, n = this->msgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->msgs(i));
  }

  // map<string, string> map_data = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_data_size());
  {
    ::std::unique_ptr<Data_MapDataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_data().begin();
        it != this->map_data().end(); ++it) {
      entry.reset(map_data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .google.protobuf.testing.Data repeated_data = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_data(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Any repeated_any = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->repeated_any_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeated_any(static_cast<int>(i)));
    }
  }

  // string str = 2;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // .google.protobuf.testing.Data nested_data = 4;
  if (this->has_nested_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *nested_data_);
  }

  // .google.protobuf.Int32Value int_wrapper = 5;
  if (this->has_int_wrapper()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *int_wrapper_);
  }

  // .google.protobuf.Timestamp time = 6;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // .google.protobuf.Struct struct_data = 8;
  if (this->has_struct_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct_data_);
  }

  // int32 attr = 1;
  if (this->attr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::DynamicCastToGenerated<Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  map_data_.MergeFrom(from.map_data_);
  repeated_data_.MergeFrom(from.repeated_data_);
  repeated_any_.MergeFrom(from.repeated_any_);
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.has_nested_data()) {
    mutable_nested_data()->::google::protobuf::testing::Data::MergeFrom(from.nested_data());
  }
  if (from.has_int_wrapper()) {
    mutable_int_wrapper()->::google::protobuf::Int32Value::MergeFrom(from.int_wrapper());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.has_struct_data()) {
    mutable_struct_data()->::google::protobuf::Struct::MergeFrom(from.struct_data());
  }
  if (from.attr() != 0) {
    set_attr(from.attr());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msgs_.InternalSwap(CastToBase(&other->msgs_));
  map_data_.Swap(&other->map_data_);
  CastToBase(&repeated_data_)->InternalSwap(CastToBase(&other->repeated_data_));
  CastToBase(&repeated_any_)->InternalSwap(CastToBase(&other->repeated_any_));
  str_.Swap(&other->str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nested_data_, other->nested_data_);
  swap(int_wrapper_, other->int_wrapper_);
  swap(time_, other->time_);
  swap(struct_data_, other->struct_data_);
  swap(attr_, other->attr_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnyIn::InitAsDefaultInstance() {
  ::google::protobuf::testing::_AnyIn_default_instance_._instance.get_mutable()->any_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class AnyIn::HasBitSetters {
 public:
  static const ::google::protobuf::Any& any(const AnyIn* msg);
};

const ::google::protobuf::Any&
AnyIn::HasBitSetters::any(const AnyIn* msg) {
  return *msg->any_;
}
void AnyIn::clear_any() {
  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyIn::kSomethingFieldNumber;
const int AnyIn::kAnyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyIn::AnyIn()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.AnyIn)
}
AnyIn::AnyIn(const AnyIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  something_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.something().size() > 0) {
    something_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.something_);
  }
  if (from.has_any()) {
    any_ = new ::google::protobuf::Any(*from.any_);
  } else {
    any_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.AnyIn)
}

void AnyIn::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  something_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  any_ = nullptr;
}

AnyIn::~AnyIn() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.AnyIn)
  SharedDtor();
}

void AnyIn::SharedDtor() {
  something_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete any_;
}

void AnyIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyIn& AnyIn::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnyIn_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void AnyIn::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.AnyIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  something_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnyIn::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnyIn*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string something = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.testing.AnyIn.something");
        object = msg->mutable_something();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Any any = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnyIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.AnyIn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string something = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_something()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->something().data(), static_cast<int>(this->something().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.AnyIn.something"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any any = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.AnyIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.AnyIn)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnyIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.AnyIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string something = 1;
  if (this->something().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->something().data(), static_cast<int>(this->something().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.AnyIn.something");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->something(), output);
  }

  // .google.protobuf.Any any = 2;
  if (this->has_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::any(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.AnyIn)
}

::google::protobuf::uint8* AnyIn::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.AnyIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string something = 1;
  if (this->something().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->something().data(), static_cast<int>(this->something().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.AnyIn.something");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->something(), target);
  }

  // .google.protobuf.Any any = 2;
  if (this->has_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::any(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.AnyIn)
  return target;
}

size_t AnyIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.AnyIn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string something = 1;
  if (this->something().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->something());
  }

  // .google.protobuf.Any any = 2;
  if (this->has_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.AnyIn)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyIn* source =
      ::google::protobuf::DynamicCastToGenerated<AnyIn>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.AnyIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.AnyIn)
    MergeFrom(*source);
  }
}

void AnyIn::MergeFrom(const AnyIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.AnyIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.something().size() > 0) {

    something_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.something_);
  }
  if (from.has_any()) {
    mutable_any()->::google::protobuf::Any::MergeFrom(from.any());
  }
}

void AnyIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.AnyIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyIn::CopyFrom(const AnyIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.AnyIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyIn::IsInitialized() const {
  return true;
}

void AnyIn::Swap(AnyIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyIn::InternalSwap(AnyIn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  something_.Swap(&other->something_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(any_, other->any_);
}

::google::protobuf::Metadata AnyIn::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnyOut::InitAsDefaultInstance() {
  ::google::protobuf::testing::_AnyOut_default_instance_._instance.get_mutable()->any_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
class AnyOut::HasBitSetters {
 public:
  static const ::google::protobuf::Any& any(const AnyOut* msg);
};

const ::google::protobuf::Any&
AnyOut::HasBitSetters::any(const AnyOut* msg) {
  return *msg->any_;
}
void AnyOut::clear_any() {
  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyOut::kAnyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyOut::AnyOut()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.AnyOut)
}
AnyOut::AnyOut(const AnyOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_any()) {
    any_ = new ::google::protobuf::Any(*from.any_);
  } else {
    any_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.AnyOut)
}

void AnyOut::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  any_ = nullptr;
}

AnyOut::~AnyOut() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.AnyOut)
  SharedDtor();
}

void AnyOut::SharedDtor() {
  if (this != internal_default_instance()) delete any_;
}

void AnyOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyOut& AnyOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnyOut_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void AnyOut::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.AnyOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && any_ != nullptr) {
    delete any_;
  }
  any_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnyOut::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnyOut*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any any = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_any();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnyOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.AnyOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any any = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.AnyOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.AnyOut)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnyOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.AnyOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::any(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.AnyOut)
}

::google::protobuf::uint8* AnyOut::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.AnyOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::any(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.AnyOut)
  return target;
}

size_t AnyOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.AnyOut)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any any = 1;
  if (this->has_any()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *any_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.AnyOut)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyOut* source =
      ::google::protobuf::DynamicCastToGenerated<AnyOut>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.AnyOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.AnyOut)
    MergeFrom(*source);
  }
}

void AnyOut::MergeFrom(const AnyOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.AnyOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_any()) {
    mutable_any()->::google::protobuf::Any::MergeFrom(from.any());
  }
}

void AnyOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.AnyOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyOut::CopyFrom(const AnyOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.AnyOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyOut::IsInitialized() const {
  return true;
}

void AnyOut::Swap(AnyOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyOut::InternalSwap(AnyOut* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(any_, other->any_);
}

::google::protobuf::Metadata AnyOut::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AnyM::InitAsDefaultInstance() {
}
class AnyM::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnyM::kFooFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnyM::AnyM()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.testing.AnyM)
}
AnyM::AnyM(const AnyM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  foo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.foo().size() > 0) {
    foo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.foo_);
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.testing.AnyM)
}

void AnyM::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  foo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AnyM::~AnyM() {
  // @@protoc_insertion_point(destructor:google.protobuf.testing.AnyM)
  SharedDtor();
}

void AnyM::SharedDtor() {
  foo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AnyM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnyM& AnyM::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AnyM_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto.base);
  return *internal_default_instance();
}


void AnyM::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.testing.AnyM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  foo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AnyM::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AnyM*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string foo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.testing.AnyM.foo");
        object = msg->mutable_foo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AnyM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.testing.AnyM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string foo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_foo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->foo().data(), static_cast<int>(this->foo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.testing.AnyM.foo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.testing.AnyM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.testing.AnyM)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AnyM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.testing.AnyM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string foo = 1;
  if (this->foo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->foo().data(), static_cast<int>(this->foo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.AnyM.foo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->foo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.testing.AnyM)
}

::google::protobuf::uint8* AnyM::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.testing.AnyM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string foo = 1;
  if (this->foo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->foo().data(), static_cast<int>(this->foo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.testing.AnyM.foo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->foo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.testing.AnyM)
  return target;
}

size_t AnyM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.testing.AnyM)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string foo = 1;
  if (this->foo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->foo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnyM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.testing.AnyM)
  GOOGLE_DCHECK_NE(&from, this);
  const AnyM* source =
      ::google::protobuf::DynamicCastToGenerated<AnyM>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.testing.AnyM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.testing.AnyM)
    MergeFrom(*source);
  }
}

void AnyM::MergeFrom(const AnyM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.testing.AnyM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.foo().size() > 0) {

    foo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.foo_);
  }
}

void AnyM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.testing.AnyM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnyM::CopyFrom(const AnyM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.testing.AnyM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnyM::IsInitialized() const {
  return true;
}

void AnyM::Swap(AnyM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnyM::InternalSwap(AnyM* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  foo_.Swap(&other->foo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AnyM::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2futil_2finternal_2ftestdata_2fanys_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace testing
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::AnyTestCases* Arena::CreateMaybeMessage< ::google::protobuf::testing::AnyTestCases >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::AnyTestCases >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::AnyWrapper* Arena::CreateMaybeMessage< ::google::protobuf::testing::AnyWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::AnyWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Imports* Arena::CreateMaybeMessage< ::google::protobuf::testing::Imports >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Imports >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Data_MapDataEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::protobuf::testing::Data_MapDataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Data_MapDataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::Data* Arena::CreateMaybeMessage< ::google::protobuf::testing::Data >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::Data >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::AnyIn* Arena::CreateMaybeMessage< ::google::protobuf::testing::AnyIn >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::AnyIn >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::AnyOut* Arena::CreateMaybeMessage< ::google::protobuf::testing::AnyOut >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::AnyOut >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::testing::AnyM* Arena::CreateMaybeMessage< ::google::protobuf::testing::AnyM >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::testing::AnyM >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
