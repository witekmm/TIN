// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_INCLUDED_Message_2eproto
#define PROTOBUF_INCLUDED_Message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Message_2eproto();
namespace Message {
class ClientMessage;
class ClientMessageDefaultTypeInternal;
extern ClientMessageDefaultTypeInternal _ClientMessage_default_instance_;
}  // namespace Message
namespace google {
namespace protobuf {
template<> ::Message::ClientMessage* Arena::CreateMaybeMessage<::Message::ClientMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Message {

enum ClientMessage_messageType {
  ClientMessage_messageType_MSG = 0,
  ClientMessage_messageType_COMMAND = 1,
  ClientMessage_messageType_LOGIN = 2,
  ClientMessage_messageType_PASSWORD = 3,
  ClientMessage_messageType_GROUP_CREATE = 4,
  ClientMessage_messageType_GROUP_DELETE = 5,
  ClientMessage_messageType_GROUP_REQUEST = 6,
  ClientMessage_messageType_GROUP_ACCEPT = 7,
  ClientMessage_messageType_GROUP_DECLINE = 8
};
bool ClientMessage_messageType_IsValid(int value);
const ClientMessage_messageType ClientMessage_messageType_messageType_MIN = ClientMessage_messageType_MSG;
const ClientMessage_messageType ClientMessage_messageType_messageType_MAX = ClientMessage_messageType_GROUP_DECLINE;
const int ClientMessage_messageType_messageType_ARRAYSIZE = ClientMessage_messageType_messageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientMessage_messageType_descriptor();
inline const ::std::string& ClientMessage_messageType_Name(ClientMessage_messageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientMessage_messageType_descriptor(), value);
}
inline bool ClientMessage_messageType_Parse(
    const ::std::string& name, ClientMessage_messageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientMessage_messageType>(
    ClientMessage_messageType_descriptor(), name, value);
}
// ===================================================================

class ClientMessage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Message.ClientMessage) */ {
 public:
  ClientMessage();
  virtual ~ClientMessage();

  ClientMessage(const ClientMessage& from);

  inline ClientMessage& operator=(const ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMessage(ClientMessage&& from) noexcept
    : ClientMessage() {
    *this = ::std::move(from);
  }

  inline ClientMessage& operator=(ClientMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClientMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientMessage* internal_default_instance() {
    return reinterpret_cast<const ClientMessage*>(
               &_ClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ClientMessage* other);
  friend void swap(ClientMessage& a, ClientMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMessage* New() const final {
    return CreateMaybeMessage<ClientMessage>(nullptr);
  }

  ClientMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientMessage& from);
  void MergeFrom(const ClientMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ClientMessage_messageType messageType;
  static const messageType MSG =
    ClientMessage_messageType_MSG;
  static const messageType COMMAND =
    ClientMessage_messageType_COMMAND;
  static const messageType LOGIN =
    ClientMessage_messageType_LOGIN;
  static const messageType PASSWORD =
    ClientMessage_messageType_PASSWORD;
  static const messageType GROUP_CREATE =
    ClientMessage_messageType_GROUP_CREATE;
  static const messageType GROUP_DELETE =
    ClientMessage_messageType_GROUP_DELETE;
  static const messageType GROUP_REQUEST =
    ClientMessage_messageType_GROUP_REQUEST;
  static const messageType GROUP_ACCEPT =
    ClientMessage_messageType_GROUP_ACCEPT;
  static const messageType GROUP_DECLINE =
    ClientMessage_messageType_GROUP_DECLINE;
  static inline bool messageType_IsValid(int value) {
    return ClientMessage_messageType_IsValid(value);
  }
  static const messageType messageType_MIN =
    ClientMessage_messageType_messageType_MIN;
  static const messageType messageType_MAX =
    ClientMessage_messageType_messageType_MAX;
  static const int messageType_ARRAYSIZE =
    ClientMessage_messageType_messageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  messageType_descriptor() {
    return ClientMessage_messageType_descriptor();
  }
  static inline const ::std::string& messageType_Name(messageType value) {
    return ClientMessage_messageType_Name(value);
  }
  static inline bool messageType_Parse(const ::std::string& name,
      messageType* value) {
    return ClientMessage_messageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required int32 start = 1;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 1;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // required int32 destination = 2;
  bool has_destination() const;
  void clear_destination();
  static const int kDestinationFieldNumber = 2;
  ::google::protobuf::int32 destination() const;
  void set_destination(::google::protobuf::int32 value);

  // required .Message.ClientMessage.messageType type = 3 [default = MSG];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::Message::ClientMessage_messageType type() const;
  void set_type(::Message::ClientMessage_messageType value);

  // required int32 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // required int32 id = 5;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Message.ClientMessage)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 destination_;
  int type_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 id_;
  friend struct ::TableStruct_Message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientMessage

// required int32 start = 1;
inline bool ClientMessage::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMessage::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ClientMessage::start() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.start)
  return start_;
}
inline void ClientMessage::set_start(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  start_ = value;
  // @@protoc_insertion_point(field_set:Message.ClientMessage.start)
}

// required int32 destination = 2;
inline bool ClientMessage::has_destination() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMessage::clear_destination() {
  destination_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 ClientMessage::destination() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.destination)
  return destination_;
}
inline void ClientMessage::set_destination(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  destination_ = value;
  // @@protoc_insertion_point(field_set:Message.ClientMessage.destination)
}

// required .Message.ClientMessage.messageType type = 3 [default = MSG];
inline bool ClientMessage::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientMessage::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::Message::ClientMessage_messageType ClientMessage::type() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.type)
  return static_cast< ::Message::ClientMessage_messageType >(type_);
}
inline void ClientMessage::set_type(::Message::ClientMessage_messageType value) {
  assert(::Message::ClientMessage_messageType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  type_ = value;
  // @@protoc_insertion_point(field_set:Message.ClientMessage.type)
}

// required int32 size = 4;
inline bool ClientMessage::has_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientMessage::clear_size() {
  size_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 ClientMessage::size() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.size)
  return size_;
}
inline void ClientMessage::set_size(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  size_ = value;
  // @@protoc_insertion_point(field_set:Message.ClientMessage.size)
}

// required int32 id = 5;
inline bool ClientMessage::has_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientMessage::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int32 ClientMessage::id() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.id)
  return id_;
}
inline void ClientMessage::set_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  id_ = value;
  // @@protoc_insertion_point(field_set:Message.ClientMessage.id)
}

// required string content = 6;
inline bool ClientMessage::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ClientMessage::content() const {
  // @@protoc_insertion_point(field_get:Message.ClientMessage.content)
  return content_.GetNoArena();
}
inline void ClientMessage::set_content(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.ClientMessage.content)
}
#if LANG_CXX11
inline void ClientMessage::set_content(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Message.ClientMessage.content)
}
#endif
inline void ClientMessage::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.ClientMessage.content)
}
inline void ClientMessage::set_content(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.ClientMessage.content)
}
inline ::std::string* ClientMessage::mutable_content() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Message.ClientMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMessage::release_content() {
  // @@protoc_insertion_point(field_release:Message.ClientMessage.content)
  if (!has_content()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMessage::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Message.ClientMessage.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Message::ClientMessage_messageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Message::ClientMessage_messageType>() {
  return ::Message::ClientMessage_messageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Message_2eproto
