// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace Message {
class ClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage> _instance;
} _ClientMessage_default_instance_;
}  // namespace Message
static void InitDefaultsClientMessage_Message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Message::_ClientMessage_default_instance_;
    new (ptr) ::Message::ClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Message::ClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientMessage_Message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientMessage_Message_2eproto}, {}};

void InitDefaults_Message_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_Message_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Message_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Message_2eproto[4];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Message_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, messagetype_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, groupactiontype_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, authorizationtype_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, commandtype_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, login_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, password_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, groupname_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, username_),
  PROTOBUF_FIELD_OFFSET(::Message::ClientMessage, messagecontent_),
  5,
  6,
  7,
  8,
  0,
  1,
  2,
  3,
  4,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::Message::ClientMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Message::_ClientMessage_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Message_2eproto = {
  {}, AddDescriptors_Message_2eproto, "Message.proto", schemas,
  file_default_instances, TableStruct_Message_2eproto::offsets,
  file_level_metadata_Message_2eproto, 1, file_level_enum_descriptors_Message_2eproto, file_level_service_descriptors_Message_2eproto,
};

const char descriptor_table_protodef_Message_2eproto[] =
  "\n\rMessage.proto\022\007Message\"\255\005\n\rClientMessa"
  "ge\022G\n\013messageType\030\001 \002(\0162#.Message.Client"
  "Message.messageTypes:\rAUTHORIZATION\022@\n\017g"
  "roupActionType\030\002 \001(\0162\'.Message.ClientMes"
  "sage.groupActionTypes\022D\n\021authorizationTy"
  "pe\030\003 \001(\0162).Message.ClientMessage.authori"
  "zationTypes\0228\n\013commandType\030\004 \001(\0162#.Messa"
  "ge.ClientMessage.commandTypes\022\r\n\005login\030\005"
  " \001(\t\022\020\n\010password\030\006 \001(\t\022\021\n\tgroupName\030\007 \001("
  "\t\022\020\n\010userName\030\010 \001(\t\022\026\n\016messageContent\030\t "
  "\001(\t\"9\n\014messageTypes\022\021\n\rAUTHORIZATION\020\000\022\013"
  "\n\007COMMAND\020\001\022\t\n\005GROUP\020\002\"h\n\020groupActionTyp"
  "es\022\013\n\007MESSAGE\020\000\022\n\n\006CREATE\020\001\022\n\n\006DELETE\020\002\022"
  "\013\n\007REQUEST\020\003\022\n\n\006ACCEPT\020\004\022\013\n\007DECLINE\020\005\022\t\n"
  "\005LEAVE\020\006\"g\n\022authorizationTypes\022\n\n\006LOG_IN"
  "\020\000\022\022\n\016REGISTER_LOGIN\020\001\022\025\n\021REGISTER_PASSW"
  "ORD\020\002\022\r\n\tINCORRECT\020\003\022\013\n\007CORRECT\020\004\"%\n\014com"
  "mandTypes\022\010\n\004EXIT\020\000\022\013\n\007LOG_OUT\020\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_Message_2eproto = {
  false, InitDefaults_Message_2eproto, 
  descriptor_table_protodef_Message_2eproto,
  "Message.proto", &assign_descriptors_table_Message_2eproto, 712,
};

void AddDescriptors_Message_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Message_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Message_2eproto = []() { AddDescriptors_Message_2eproto(); return true; }();
namespace Message {
const ::google::protobuf::EnumDescriptor* ClientMessage_messageTypes_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[0];
}
bool ClientMessage_messageTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientMessage_messageTypes ClientMessage::AUTHORIZATION;
const ClientMessage_messageTypes ClientMessage::COMMAND;
const ClientMessage_messageTypes ClientMessage::GROUP;
const ClientMessage_messageTypes ClientMessage::messageTypes_MIN;
const ClientMessage_messageTypes ClientMessage::messageTypes_MAX;
const int ClientMessage::messageTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientMessage_groupActionTypes_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[1];
}
bool ClientMessage_groupActionTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientMessage_groupActionTypes ClientMessage::MESSAGE;
const ClientMessage_groupActionTypes ClientMessage::CREATE;
const ClientMessage_groupActionTypes ClientMessage::DELETE;
const ClientMessage_groupActionTypes ClientMessage::REQUEST;
const ClientMessage_groupActionTypes ClientMessage::ACCEPT;
const ClientMessage_groupActionTypes ClientMessage::DECLINE;
const ClientMessage_groupActionTypes ClientMessage::LEAVE;
const ClientMessage_groupActionTypes ClientMessage::groupActionTypes_MIN;
const ClientMessage_groupActionTypes ClientMessage::groupActionTypes_MAX;
const int ClientMessage::groupActionTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientMessage_authorizationTypes_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[2];
}
bool ClientMessage_authorizationTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientMessage_authorizationTypes ClientMessage::LOG_IN;
const ClientMessage_authorizationTypes ClientMessage::REGISTER_LOGIN;
const ClientMessage_authorizationTypes ClientMessage::REGISTER_PASSWORD;
const ClientMessage_authorizationTypes ClientMessage::INCORRECT;
const ClientMessage_authorizationTypes ClientMessage::CORRECT;
const ClientMessage_authorizationTypes ClientMessage::authorizationTypes_MIN;
const ClientMessage_authorizationTypes ClientMessage::authorizationTypes_MAX;
const int ClientMessage::authorizationTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientMessage_commandTypes_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Message_2eproto);
  return file_level_enum_descriptors_Message_2eproto[3];
}
bool ClientMessage_commandTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientMessage_commandTypes ClientMessage::EXIT;
const ClientMessage_commandTypes ClientMessage::LOG_OUT;
const ClientMessage_commandTypes ClientMessage::commandTypes_MIN;
const ClientMessage_commandTypes ClientMessage::commandTypes_MAX;
const int ClientMessage::commandTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ClientMessage::InitAsDefaultInstance() {
}
class ClientMessage::HasBitSetters {
 public:
  static void set_has_messagetype(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_groupactiontype(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_authorizationtype(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_commandtype(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_login(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_password(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_groupname(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_username(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_messagecontent(ClientMessage* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage::kMessageTypeFieldNumber;
const int ClientMessage::kGroupActionTypeFieldNumber;
const int ClientMessage::kAuthorizationTypeFieldNumber;
const int ClientMessage::kCommandTypeFieldNumber;
const int ClientMessage::kLoginFieldNumber;
const int ClientMessage::kPasswordFieldNumber;
const int ClientMessage::kGroupNameFieldNumber;
const int ClientMessage::kUserNameFieldNumber;
const int ClientMessage::kMessageContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage::ClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.ClientMessage)
}
ClientMessage::ClientMessage(const ClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_login()) {
    login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_groupname()) {
    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  messagecontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagecontent()) {
    messagecontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagecontent_);
  }
  ::memcpy(&messagetype_, &from.messagetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&commandtype_) -
    reinterpret_cast<char*>(&messagetype_)) + sizeof(commandtype_));
  // @@protoc_insertion_point(copy_constructor:Message.ClientMessage)
}

void ClientMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientMessage_Message_2eproto.base);
  login_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagecontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&messagetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commandtype_) -
      reinterpret_cast<char*>(&messagetype_)) + sizeof(commandtype_));
}

ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:Message.ClientMessage)
  SharedDtor();
}

void ClientMessage::SharedDtor() {
  login_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagecontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientMessage& ClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientMessage_Message_2eproto.base);
  return *internal_default_instance();
}


void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Message.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      login_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      groupname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      messagecontent_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&messagetype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&authorizationtype_) -
        reinterpret_cast<char*>(&messagetype_)) + sizeof(authorizationtype_));
  }
  commandtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .Message.ClientMessage.messageTypes messageType = 1 [default = AUTHORIZATION];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::Message::ClientMessage_messageTypes_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_messagetype(static_cast<::Message::ClientMessage_messageTypes>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .Message.ClientMessage.groupActionTypes groupActionType = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::Message::ClientMessage_groupActionTypes_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_groupactiontype(static_cast<::Message::ClientMessage_groupActionTypes>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .Message.ClientMessage.authorizationTypes authorizationType = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::Message::ClientMessage_authorizationTypes_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(3, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_authorizationtype(static_cast<::Message::ClientMessage_authorizationTypes>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .Message.ClientMessage.commandTypes commandType = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::Message::ClientMessage_commandTypes_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(4, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_commandtype(static_cast<::Message::ClientMessage_commandTypes>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string login = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Message.ClientMessage.login");
        object = msg->mutable_login();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string password = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Message.ClientMessage.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string groupName = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Message.ClientMessage.groupName");
        object = msg->mutable_groupname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string userName = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Message.ClientMessage.userName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string messageContent = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("Message.ClientMessage.messageContent");
        object = msg->mutable_messagecontent();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.ClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Message.ClientMessage.messageTypes messageType = 1 [default = AUTHORIZATION];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Message::ClientMessage_messageTypes_IsValid(value)) {
            set_messagetype(static_cast< ::Message::ClientMessage_messageTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Message.ClientMessage.groupActionTypes groupActionType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Message::ClientMessage_groupActionTypes_IsValid(value)) {
            set_groupactiontype(static_cast< ::Message::ClientMessage_groupActionTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Message.ClientMessage.authorizationTypes authorizationType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Message::ClientMessage_authorizationTypes_IsValid(value)) {
            set_authorizationtype(static_cast< ::Message::ClientMessage_authorizationTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Message.ClientMessage.commandTypes commandType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Message::ClientMessage_commandTypes_IsValid(value)) {
            set_commandtype(static_cast< ::Message::ClientMessage_commandTypes >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string login = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->login().data(), static_cast<int>(this->login().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Message.ClientMessage.login");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Message.ClientMessage.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string groupName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->groupname().data(), static_cast<int>(this->groupname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Message.ClientMessage.groupName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Message.ClientMessage.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string messageContent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagecontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagecontent().data(), static_cast<int>(this->messagecontent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Message.ClientMessage.messageContent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.ClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.ClientMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Message.ClientMessage.messageTypes messageType = 1 [default = AUTHORIZATION];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // optional .Message.ClientMessage.groupActionTypes groupActionType = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->groupactiontype(), output);
  }

  // optional .Message.ClientMessage.authorizationTypes authorizationType = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->authorizationtype(), output);
  }

  // optional .Message.ClientMessage.commandTypes commandType = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->commandtype(), output);
  }

  // optional string login = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->login().data(), static_cast<int>(this->login().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.login");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->login(), output);
  }

  // optional string password = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->password(), output);
  }

  // optional string groupName = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.groupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->groupname(), output);
  }

  // optional string userName = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->username(), output);
  }

  // optional string messageContent = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagecontent().data(), static_cast<int>(this->messagecontent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.messageContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->messagecontent(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Message.ClientMessage)
}

::google::protobuf::uint8* ClientMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Message.ClientMessage.messageTypes messageType = 1 [default = AUTHORIZATION];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // optional .Message.ClientMessage.groupActionTypes groupActionType = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->groupactiontype(), target);
  }

  // optional .Message.ClientMessage.authorizationTypes authorizationType = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->authorizationtype(), target);
  }

  // optional .Message.ClientMessage.commandTypes commandType = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->commandtype(), target);
  }

  // optional string login = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->login().data(), static_cast<int>(this->login().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.login");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->login(), target);
  }

  // optional string password = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->password(), target);
  }

  // optional string groupName = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->groupname().data(), static_cast<int>(this->groupname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.groupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->groupname(), target);
  }

  // optional string userName = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->username(), target);
  }

  // optional string messageContent = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagecontent().data(), static_cast<int>(this->messagecontent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Message.ClientMessage.messageContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->messagecontent(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message.ClientMessage)
  return target;
}

size_t ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message.ClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Message.ClientMessage.messageTypes messageType = 1 [default = AUTHORIZATION];
  if (has_messagetype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string login = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login());
    }

    // optional string password = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string groupName = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupname());
    }

    // optional string userName = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string messageContent = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagecontent());
    }

  }
  if (cached_has_bits & 0x000000c0u) {
    // optional .Message.ClientMessage.groupActionTypes groupActionType = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->groupactiontype());
    }

    // optional .Message.ClientMessage.authorizationTypes authorizationType = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->authorizationtype());
    }

  }
  // optional .Message.ClientMessage.commandTypes commandType = 4;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->commandtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Message.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ClientMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Message.ClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Message.ClientMessage)
    MergeFrom(*source);
  }
}

void ClientMessage::MergeFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Message.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      login_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      messagecontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagecontent_);
    }
    if (cached_has_bits & 0x00000020u) {
      messagetype_ = from.messagetype_;
    }
    if (cached_has_bits & 0x00000040u) {
      groupactiontype_ = from.groupactiontype_;
    }
    if (cached_has_bits & 0x00000080u) {
      authorizationtype_ = from.authorizationtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_commandtype(from.commandtype());
  }
}

void ClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Message.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  return true;
}

void ClientMessage::Swap(ClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage::InternalSwap(ClientMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  login_.Swap(&other->login_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  groupname_.Swap(&other->groupname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  messagecontent_.Swap(&other->messagecontent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(messagetype_, other->messagetype_);
  swap(groupactiontype_, other->groupactiontype_);
  swap(authorizationtype_, other->authorizationtype_);
  swap(commandtype_, other->commandtype_);
}

::google::protobuf::Metadata ClientMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Message_2eproto);
  return ::file_level_metadata_Message_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Message::ClientMessage* Arena::CreateMaybeMessage< ::Message::ClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::Message::ClientMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
